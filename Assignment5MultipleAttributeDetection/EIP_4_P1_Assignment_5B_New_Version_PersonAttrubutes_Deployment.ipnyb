{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of EIP_4_P1_Assignment_5B_New_Version_PersonAttrubutes_Deployment_ipnyb_20-Dec.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tQ2Rqh5D7FRU",
        "colab_type": "text"
      },
      "source": [
        "## Assignment Details"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8_cpLIBH7LEr",
        "colab_type": "text"
      },
      "source": [
        "- Data can be downloaded from THIS LINK (Links to an external site.)\n",
        "- The assignment requires you to:\n",
        "    - implement multi class classification (basic code will be shared).  Here is the starter code  (Links to an external site.)(you must download the data and link your own Google Drive Link)\n",
        "    - run it for as long as you'd like to\n",
        "    - use any model of your choice\n",
        "    - use any augmentation of your choice\n",
        "- you cannot use transfer learning and train your model from scratch\n",
        "- Since this is a blind assignment, we do not know the final achievable accuracy. \n",
        "- Marks would be allotted percentile-wise.\n",
        "- Your final accuracy matters the most. \n",
        "- Submit github link to your assignment 5 project.\n",
        "- This assignment cannot be submitted as a group and if a group submits it, all would be disqualified. \n",
        "- Deadline if 25th December for all batches. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P7BDcwTzMBbq",
        "colab_type": "text"
      },
      "source": [
        "**References**\n",
        "- https://www.pyimagesearch.com/2018/06/04/keras-multiple-outputs-and-multiple-losses/"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5C-cX66T5Nvg",
        "colab_type": "text"
      },
      "source": [
        "## Load Dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gyq8CE4ug5BK",
        "colab_type": "code",
        "outputId": "63085401-968f-440f-b162-5cb9e80ba0b4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 138
        }
      },
      "source": [
        "# mount gdrive and unzip data\n",
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')\n",
        "!unzip -q \"/content/gdrive/My Drive/hvc_data.zip\"\n",
        "# look for `hvc_annotations.csv` file and `resized` dir\n",
        "%ls "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n",
            "\n",
            "Enter your authorization code:\n",
            "··········\n",
            "Mounted at /content/gdrive\n",
            "\u001b[0m\u001b[01;34mdeeplearning\u001b[0m/  \u001b[01;34mgdrive\u001b[0m/  hvc_annotations.csv  \u001b[01;34mresized\u001b[0m/  \u001b[01;34msample_data\u001b[0m/\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DInVnVFO5SZl",
        "colab_type": "text"
      },
      "source": [
        "## Load Libraries"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bYbNQzK6kj94",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "%tensorflow_version 1.x\n",
        "\n",
        "import cv2\n",
        "import json\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "from functools import partial\n",
        "from pathlib import Path \n",
        "from tqdm import tqdm\n",
        "\n",
        "from google.colab.patches import cv2_imshow\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import LabelEncoder, OneHotEncoder\n",
        "\n",
        "\n",
        "from keras.applications import VGG16\n",
        "from keras.applications import VGG19\n",
        "from keras.applications.inception_v3 import InceptionV3\n",
        "\n",
        "from keras.layers.core import Dropout\n",
        "from keras.layers.core import Flatten\n",
        "from keras.layers.core import Dense\n",
        "from keras.layers import Input\n",
        "from keras.models import Model\n",
        "from keras.optimizers import SGD\n",
        "from keras.preprocessing.image import ImageDataGenerator\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cCz5-DZrVb6h",
        "colab_type": "code",
        "outputId": "5e623603-ff73-4ecf-9fa5-bb196410b423",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 168
        }
      },
      "source": [
        "!git clone https://github.com/amitkml/deeplearning.git\n",
        "!ls -ltr\n",
        "!pwd\n",
        "\n",
        "import os"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "fatal: destination path 'deeplearning' already exists and is not an empty directory.\n",
            "total 1848\n",
            "drwxr-xr-x 2 root root  299008 Dec 13 09:53 resized\n",
            "-rw-r--r-- 1 root root 1576476 Dec 13 09:58 hvc_annotations.csv\n",
            "drwxr-xr-x 1 root root    4096 Dec 18 16:52 sample_data\n",
            "drwxr-xr-x 6 root root    4096 Dec 22 07:08 deeplearning\n",
            "drwx------ 4 root root    4096 Dec 22 07:09 gdrive\n",
            "drwxr-xr-x 2 root root    4096 Dec 22 07:15 saved_models\n",
            "/content\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vPugd2z-Sign",
        "colab_type": "code",
        "outputId": "a8239404-7146-4fbf-f0cd-fea2b516c61e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        }
      },
      "source": [
        "os.chdir('/content/')\n",
        "!pwd\n",
        "\n",
        "from deeplearning.tensorflow import generate_cifar10_tfrecords as tfcifar  ## This is for generating tfrecord in TF 1.14\n",
        "from deeplearning.tensorflow import read_cifar10_tfrecords as readtfcifar  ## This is for reading tfrecord of cifar10 in TF 1.14\n",
        "from deeplearning.tensorflow import show_metrices as show_metrices  ## Showing different metrices\n",
        "from deeplearning.tensorflow import learning_rate_scheduler as learning_rate_scheduler  ## different leaerning rate scheduler\n",
        "from deeplearning.tensorflow import show_metrices_cifar100 as show_metrices_cifar100  ## different leaerning rate scheduler\n",
        "from deeplearning.tensorflow import show_metrices_cifar100 as show_metrices_cifar100  ## different leaerning rate scheduler\n",
        "from deeplearning.tensorflow import epochcheckpoint as EpochCheckpoint\n",
        "\n",
        "from deeplearning.tensorflow import trainingmonitor as TrainingMonitor\n",
        "\n",
        "\n",
        "os.chdir('/content/')\n",
        "!pwd"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content\n",
            "/content\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jAgtmspb5WV5",
        "colab_type": "text"
      },
      "source": [
        "## Data Analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vQkbSpLK4sTP",
        "colab_type": "code",
        "outputId": "dec44291-4e0d-46d8-fbda-c7772df44b1e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        }
      },
      "source": [
        "# load annotations\n",
        "df = pd.read_csv(\"hvc_annotations.csv\")\n",
        "del df[\"filename\"] # remove unwanted column\n",
        "df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>gender</th>\n",
              "      <th>imagequality</th>\n",
              "      <th>age</th>\n",
              "      <th>weight</th>\n",
              "      <th>carryingbag</th>\n",
              "      <th>footwear</th>\n",
              "      <th>emotion</th>\n",
              "      <th>bodypose</th>\n",
              "      <th>image_path</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>male</td>\n",
              "      <td>Average</td>\n",
              "      <td>35-45</td>\n",
              "      <td>normal-healthy</td>\n",
              "      <td>Grocery/Home/Plastic Bag</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Neutral</td>\n",
              "      <td>Front-Frontish</td>\n",
              "      <td>resized/1.jpg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>female</td>\n",
              "      <td>Average</td>\n",
              "      <td>35-45</td>\n",
              "      <td>over-weight</td>\n",
              "      <td>None</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Angry/Serious</td>\n",
              "      <td>Front-Frontish</td>\n",
              "      <td>resized/2.jpg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>male</td>\n",
              "      <td>Good</td>\n",
              "      <td>45-55</td>\n",
              "      <td>normal-healthy</td>\n",
              "      <td>Grocery/Home/Plastic Bag</td>\n",
              "      <td>CantSee</td>\n",
              "      <td>Neutral</td>\n",
              "      <td>Front-Frontish</td>\n",
              "      <td>resized/3.jpg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>male</td>\n",
              "      <td>Good</td>\n",
              "      <td>45-55</td>\n",
              "      <td>normal-healthy</td>\n",
              "      <td>Daily/Office/Work Bag</td>\n",
              "      <td>Normal</td>\n",
              "      <td>Neutral</td>\n",
              "      <td>Front-Frontish</td>\n",
              "      <td>resized/4.jpg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>female</td>\n",
              "      <td>Good</td>\n",
              "      <td>35-45</td>\n",
              "      <td>slightly-overweight</td>\n",
              "      <td>None</td>\n",
              "      <td>CantSee</td>\n",
              "      <td>Neutral</td>\n",
              "      <td>Front-Frontish</td>\n",
              "      <td>resized/5.jpg</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   gender imagequality    age  ...        emotion        bodypose     image_path\n",
              "0    male      Average  35-45  ...        Neutral  Front-Frontish  resized/1.jpg\n",
              "1  female      Average  35-45  ...  Angry/Serious  Front-Frontish  resized/2.jpg\n",
              "2    male         Good  45-55  ...        Neutral  Front-Frontish  resized/3.jpg\n",
              "3    male         Good  45-55  ...        Neutral  Front-Frontish  resized/4.jpg\n",
              "4  female         Good  35-45  ...        Neutral  Front-Frontish  resized/5.jpg\n",
              "\n",
              "[5 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "202OJva345WA",
        "colab_type": "code",
        "outputId": "ee40e6c0-cb0a-4f99-c279-b7c32a697a19",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 876
        }
      },
      "source": [
        "# one hot encoding of labels\n",
        "\n",
        "one_hot_df = pd.concat([\n",
        "    df[[\"image_path\"]],\n",
        "    pd.get_dummies(df.gender, prefix=\"gender\"),\n",
        "    pd.get_dummies(df.imagequality, prefix=\"imagequality\"),\n",
        "    pd.get_dummies(df.age, prefix=\"age\"),\n",
        "    pd.get_dummies(df.weight, prefix=\"weight\"),\n",
        "    pd.get_dummies(df.carryingbag, prefix=\"carryingbag\"),\n",
        "    pd.get_dummies(df.footwear, prefix=\"footwear\"),\n",
        "    pd.get_dummies(df.emotion, prefix=\"emotion\"),\n",
        "    pd.get_dummies(df.bodypose, prefix=\"bodypose\"),\n",
        "], axis = 1)\n",
        "\n",
        "one_hot_df.head().T"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>image_path</th>\n",
              "      <td>resized/1.jpg</td>\n",
              "      <td>resized/2.jpg</td>\n",
              "      <td>resized/3.jpg</td>\n",
              "      <td>resized/4.jpg</td>\n",
              "      <td>resized/5.jpg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gender_female</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gender_male</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>imagequality_Average</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>imagequality_Bad</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>imagequality_Good</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>age_15-25</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>age_25-35</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>age_35-45</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>age_45-55</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>age_55+</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>weight_normal-healthy</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>weight_over-weight</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>weight_slightly-overweight</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>weight_underweight</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>carryingbag_Daily/Office/Work Bag</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>carryingbag_Grocery/Home/Plastic Bag</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>carryingbag_None</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>footwear_CantSee</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>footwear_Fancy</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>footwear_Normal</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emotion_Angry/Serious</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emotion_Happy</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emotion_Neutral</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>emotion_Sad</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bodypose_Back</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bodypose_Front-Frontish</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bodypose_Side</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                  0  ...              4\n",
              "image_path                            resized/1.jpg  ...  resized/5.jpg\n",
              "gender_female                                     0  ...              1\n",
              "gender_male                                       1  ...              0\n",
              "imagequality_Average                              1  ...              0\n",
              "imagequality_Bad                                  0  ...              0\n",
              "imagequality_Good                                 0  ...              1\n",
              "age_15-25                                         0  ...              0\n",
              "age_25-35                                         0  ...              0\n",
              "age_35-45                                         1  ...              1\n",
              "age_45-55                                         0  ...              0\n",
              "age_55+                                           0  ...              0\n",
              "weight_normal-healthy                             1  ...              0\n",
              "weight_over-weight                                0  ...              0\n",
              "weight_slightly-overweight                        0  ...              1\n",
              "weight_underweight                                0  ...              0\n",
              "carryingbag_Daily/Office/Work Bag                 0  ...              0\n",
              "carryingbag_Grocery/Home/Plastic Bag              1  ...              0\n",
              "carryingbag_None                                  0  ...              1\n",
              "footwear_CantSee                                  0  ...              1\n",
              "footwear_Fancy                                    0  ...              0\n",
              "footwear_Normal                                   1  ...              0\n",
              "emotion_Angry/Serious                             0  ...              0\n",
              "emotion_Happy                                     0  ...              0\n",
              "emotion_Neutral                                   1  ...              1\n",
              "emotion_Sad                                       0  ...              0\n",
              "bodypose_Back                                     0  ...              0\n",
              "bodypose_Front-Frontish                           1  ...              1\n",
              "bodypose_Side                                     0  ...              0\n",
              "\n",
              "[28 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pcg1Bgt35b2Z",
        "colab_type": "text"
      },
      "source": [
        "## Model Development"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H27TnrWttzm4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from imgaug import augmenters as iaa\n",
        "\n",
        "seqVal = iaa.Sequential([\n",
        "#     iaa.Affine(rotate=(-25, 25)),\n",
        "#     iaa.AdditiveGaussianNoise(scale=(10, 60)),\n",
        "    iaa.Fliplr(0.5) ,# horizontally flip 50% of all images\n",
        "    # iaa.Invert(0.05, per_channel=True), # invert color channels\n",
        "    iaa.Flipud(0.2), # vertically flip 20% of all images\n",
        "#     iaa.CropAndPad(px=(0, 4),pad_mode=\"edge\")\n",
        "], random_order=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TNrijGrr5yfB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def resize_and_pad(image, size=224):\n",
        "    orig_size = image.shape[:2] \n",
        "    ratio = float(size)/max(orig_size)\n",
        "    new_size = tuple([int(x*ratio) for x in orig_size])\n",
        "\n",
        "    image = cv2.resize(image, (new_size[1], new_size[0]))\n",
        "    return image\n",
        "  "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ahvnXgk0tKiy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import keras\n",
        "import numpy as np\n",
        "\n",
        "# Label columns per attribute\n",
        "_gender_cols_ = [col for col in one_hot_df.columns if col.startswith(\"gender\")]\n",
        "_imagequality_cols_ = [col for col in one_hot_df.columns if col.startswith(\"imagequality\")]\n",
        "_age_cols_ = [col for col in one_hot_df.columns if col.startswith(\"age\")]\n",
        "_weight_cols_ = [col for col in one_hot_df.columns if col.startswith(\"weight\")]\n",
        "_carryingbag_cols_ = [col for col in one_hot_df.columns if col.startswith(\"carryingbag\")]\n",
        "_footwear_cols_ = [col for col in one_hot_df.columns if col.startswith(\"footwear\")]\n",
        "_emotion_cols_ = [col for col in one_hot_df.columns if col.startswith(\"emotion\")]\n",
        "_bodypose_cols_ = [col for col in one_hot_df.columns if col.startswith(\"bodypose\")]\n",
        "\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "\n",
        "class PersonDataGenerator(keras.utils.Sequence):\n",
        "    \"\"\"Ground truth data generator\"\"\"\n",
        "\n",
        "    def __init__(self, df, batch_size=32, shuffle=True, augmentation=None,resize=None):\n",
        "        self.df = df\n",
        "        self.batch_size=batch_size\n",
        "        self.shuffle = shuffle\n",
        "        self.on_epoch_end()\n",
        "        self.augmentation = augmentation\n",
        "        self.resize = resize\n",
        "\n",
        "    def __len__(self):\n",
        "        return int(np.floor(self.df.shape[0] / self.batch_size))\n",
        "\n",
        "    def __getitem__(self, index):\n",
        "        \"\"\"fetch batched images and targets\"\"\"\n",
        "        batch_slice = slice(index * self.batch_size, (index + 1) * self.batch_size)\n",
        "        items = self.df.iloc[batch_slice]\n",
        "        \n",
        "        # images = np.stack([resize_and_pad(cv2.imread(item[\"image_path\"]),size=(200,200,3)) for _, item in items.iterrows()])     \n",
        "        # images = np.stack([resize_and_pad(cv2.imread(item[\"image_path\"]),size=(200,200,3)) for _, item in items.iterrows()]) \n",
        "        images = np.stack([cv2.imread(item[\"image_path\"]) for _, item in items.iterrows()])\n",
        "       \n",
        "   \n",
        "        # if self.augmentation is not None:\n",
        "        #     images = self.augmentation.flow(images, shuffle=False).next()\n",
        "        \n",
        "        target = {\n",
        "            \"gender_output\": items[_gender_cols_].values,\n",
        "            \"image_quality_output\": items[_imagequality_cols_].values,\n",
        "            \"age_output\": items[_age_cols_].values,\n",
        "            \"weight_output\": items[_weight_cols_].values,\n",
        "            \"bag_output\": items[_carryingbag_cols_].values,\n",
        "            \"pose_output\": items[_bodypose_cols_].values,\n",
        "            \"footwear_output\": items[_footwear_cols_].values,\n",
        "            \"emotion_output\": items[_emotion_cols_].values,\n",
        "        }\n",
        "        \n",
        "        return images, target\n",
        "\n",
        "    def on_epoch_end(self):\n",
        "        \"\"\"Updates indexes after each epoch\"\"\"\n",
        "        if self.shuffle == True:\n",
        "            self.df = self.df.sample(frac=1).reset_index(drop=True)\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0ll94zTv6w5i",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# import keras\n",
        "# import numpy as np\n",
        "\n",
        "# # Label columns per attribute\n",
        "# _gender_cols_ = [col for col in one_hot_df.columns if col.startswith(\"gender\")]\n",
        "# _imagequality_cols_ = [col for col in one_hot_df.columns if col.startswith(\"imagequality\")]\n",
        "# _age_cols_ = [col for col in one_hot_df.columns if col.startswith(\"age\")]\n",
        "# _weight_cols_ = [col for col in one_hot_df.columns if col.startswith(\"weight\")]\n",
        "# _carryingbag_cols_ = [col for col in one_hot_df.columns if col.startswith(\"carryingbag\")]\n",
        "# _footwear_cols_ = [col for col in one_hot_df.columns if col.startswith(\"footwear\")]\n",
        "# _emotion_cols_ = [col for col in one_hot_df.columns if col.startswith(\"emotion\")]\n",
        "# _bodypose_cols_ = [col for col in one_hot_df.columns if col.startswith(\"bodypose\")]\n",
        "\n",
        "# class PersonDataGenerator(keras.utils.Sequence):\n",
        "#     \"\"\"Ground truth data generator\"\"\"\n",
        "\n",
        "    \n",
        "#     def __init__(self, df, batch_size=32, shuffle=True):\n",
        "#         self.df = df\n",
        "#         self.batch_size=batch_size\n",
        "#         self.shuffle = shuffle\n",
        "#         self.on_epoch_end()\n",
        "\n",
        "#     def __len__(self):\n",
        "#         return int(np.floor(self.df.shape[0] / self.batch_size))\n",
        "\n",
        "#     def __getitem__(self, index):\n",
        "#         \"\"\"fetch batched images and targets\"\"\"\n",
        "#         batch_slice = slice(index * self.batch_size, (index + 1) * self.batch_size)\n",
        "#         items = self.df.iloc[batch_slice]\n",
        "#         image = np.stack([cv2.imread(item[\"image_path\"],cv2.IMREAD_COLOR) for _, item in items.iterrows()])\n",
        "#         target = {\n",
        "#             \"gender_output\": items[_gender_cols_].values,\n",
        "#             \"image_quality_output\": items[_imagequality_cols_].values,\n",
        "#             \"age_output\": items[_age_cols_].values,\n",
        "#             \"weight_output\": items[_weight_cols_].values,\n",
        "#             \"bag_output\": items[_carryingbag_cols_].values,\n",
        "#             \"pose_output\": items[_bodypose_cols_].values,\n",
        "#             \"footwear_output\": items[_footwear_cols_].values,\n",
        "#             \"emotion_output\": items[_emotion_cols_].values,\n",
        "#         }\n",
        "#         return image, target\n",
        "\n",
        "#     def on_epoch_end(self):\n",
        "#         \"\"\"Updates indexes after each epoch\"\"\"\n",
        "#         if self.shuffle == True:\n",
        "#             self.df = self.df.sample(frac=1).reset_index(drop=True)\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yVE8-OaZ8J5q",
        "colab_type": "code",
        "outputId": "ec1cc0a0-8db2-4aba-8d93-4b186f63d90e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "train_df, val_df = train_test_split(one_hot_df, test_size=0.15)\n",
        "train_df.shape, val_df.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((11537, 28), (2036, 28))"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K5m15DLyF2ot",
        "colab_type": "code",
        "outputId": "29ee32bc-9f3a-4abc-e03e-2a63694e9ef8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 232
        }
      },
      "source": [
        "train_df.head()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>image_path</th>\n",
              "      <th>gender_female</th>\n",
              "      <th>gender_male</th>\n",
              "      <th>imagequality_Average</th>\n",
              "      <th>imagequality_Bad</th>\n",
              "      <th>imagequality_Good</th>\n",
              "      <th>age_15-25</th>\n",
              "      <th>age_25-35</th>\n",
              "      <th>age_35-45</th>\n",
              "      <th>age_45-55</th>\n",
              "      <th>age_55+</th>\n",
              "      <th>weight_normal-healthy</th>\n",
              "      <th>weight_over-weight</th>\n",
              "      <th>weight_slightly-overweight</th>\n",
              "      <th>weight_underweight</th>\n",
              "      <th>carryingbag_Daily/Office/Work Bag</th>\n",
              "      <th>carryingbag_Grocery/Home/Plastic Bag</th>\n",
              "      <th>carryingbag_None</th>\n",
              "      <th>footwear_CantSee</th>\n",
              "      <th>footwear_Fancy</th>\n",
              "      <th>footwear_Normal</th>\n",
              "      <th>emotion_Angry/Serious</th>\n",
              "      <th>emotion_Happy</th>\n",
              "      <th>emotion_Neutral</th>\n",
              "      <th>emotion_Sad</th>\n",
              "      <th>bodypose_Back</th>\n",
              "      <th>bodypose_Front-Frontish</th>\n",
              "      <th>bodypose_Side</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>12971</th>\n",
              "      <td>resized/12973.jpg</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11953</th>\n",
              "      <td>resized/11955.jpg</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8240</th>\n",
              "      <td>resized/8241.jpg</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8038</th>\n",
              "      <td>resized/8039.jpg</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>168</th>\n",
              "      <td>resized/169.jpg</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              image_path  gender_female  ...  bodypose_Front-Frontish  bodypose_Side\n",
              "12971  resized/12973.jpg              0  ...                        1              0\n",
              "11953  resized/11955.jpg              1  ...                        1              0\n",
              "8240    resized/8241.jpg              0  ...                        0              0\n",
              "8038    resized/8039.jpg              1  ...                        0              0\n",
              "168      resized/169.jpg              0  ...                        0              0\n",
              "\n",
              "[5 rows x 28 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oTiOi5tVBnhS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# create train and validation data generators\n",
        "# train_gen = PersonDataGenerator(train_df, batch_size=32)\n",
        "train_gen = PersonDataGenerator(\n",
        "    train_df, \n",
        "    batch_size=32, \n",
        "    augmentation=ImageDataGenerator(\n",
        "        horizontal_flip=True,\n",
        "        vertical_flip=True,\n",
        "        rotation_range=0.0\n",
        "        # featurewise_std_normalization = True,\n",
        "        # featurewise_center = True\n",
        "    )\n",
        ")\n",
        "\n",
        "# train_gen = ValPersonDataGenerator(\n",
        "#     train_df, \n",
        "#     batch_size=32, \n",
        "#     augmentation=ImageDataGenerator(\n",
        "#         # horizontal_flip=True,\n",
        "#         # vertical_flip=True,\n",
        "#         # rotation_range=1,\n",
        "#         featurewise_std_normalization = True,\n",
        "#         featurewise_center = True\n",
        "#     )\n",
        "# )\n",
        "\n",
        "valid_gen = PersonDataGenerator(val_df, batch_size=32, shuffle=False,\n",
        "                                augmentation=ImageDataGenerator(\n",
        "                                    # featurewise_std_normalization = True,\n",
        "                                    # featurewise_center = True\n",
        "                                    ))\n",
        "# valid_gen = PersonDataGenerator(val_df, batch_size=64, shuffle=False,\n",
        "#                                 featurewise_std_normalization = True,\n",
        "#                                 featurewise_center = True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WV_wWnM0-Jrv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def read_image(filename, resize=None, augment_fn=None):\n",
        "    image = cv2.imread(filename)\n",
        "    \n",
        "    if resize is not None:\n",
        "        image = resize_and_pad(image, resize)\n",
        "    return image"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qlODP86EK_hV",
        "colab_type": "code",
        "outputId": "b8fb5c7d-a37f-4312-fb18-b8ea6c843ece",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 185
        }
      },
      "source": [
        "df.iloc[1100]\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "gender                      male\n",
              "imagequality             Average\n",
              "age                        15-25\n",
              "weight            normal-healthy\n",
              "carryingbag                 None\n",
              "footwear                  Normal\n",
              "emotion                  Neutral\n",
              "bodypose          Front-Frontish\n",
              "image_path      resized/1101.jpg\n",
              "Name: 1100, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XpEzrJWI9nbW",
        "colab_type": "code",
        "outputId": "99c4f9d0-dea3-433a-d179-85f33a3d9eb2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        }
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "x = read_image(df.image_path[1100])\n",
        "plt.imshow(x)\n",
        "plt.show()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAQEAAAD8CAYAAAB3lxGOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAgAElEQVR4nOy9WYxsSXrf9/sizpZb7bfu1iu7e1ZS\nM+SQIwI2KYmmDds0JNiQCEm24AfD9IseBPjBhJ4MP+nBC/xkmIYF2IANW6AkeBFNURAkUxa8zAw5\nQ85wpqf79n77brVm5XaWiPBDRJw8mVV1u5t3mnPvTH2FRFaePHn2+OJb/t//E+ccV3IlV/LjK+qH\nfQBXciVX8sOVKyVwJVfyYy5XSuBKruTHXK6UwJVcyY+5XCmBK7mSH3O5UgJXciU/5vKpKQER+VdF\n5HUReVNEfv3T2s+VXMmVPJnIp4ETEBENfB/4l4EPgK8Bf8U590c/8J1dyZVcyRPJp2UJfBV40zn3\nlnOuAv4n4C98Svu6kiu5kieQ5FPa7m3g/c7nD4A/fdnKIvLMwBZ3r+1jcTgLDn/Yzjlw4bPzn51z\nGGMQEYaDAQDz+ZzGNMuNOUA6/+PY2Nik3+9hrUWJxD2EfbSfaA04t/zsnFseAw5nXfgu/B+Oy9rl\n9qy14Xf4z2HDIoLWGqXU6qGKP2AV3q21GGNw7bGtnpgAOzvbZGkKOAQBcchFp9+VeEy0p905t+VC\nF47Zn9vy2q/fi/idtSa8Wxpj/LHb5d6FcM1FEBEc4nclghMFokEr0ixjY9jnwdtvAjacyVP/GB84\n566tL/y0lMBHioj8GvBrP6z9R4mmkO18tp3vRQQFmHB///xf/reZmYamNFhrqUztH6TGDwZrHE3T\nYIzh5PCIJEn46le/SpIk/OG3/4BHjx4hYacS9i7xQbWGX/mVX+Gnv/xTzOdzUq3CA+33FV/GNDRN\ng4jCGjDGUIV9VuE7Ywx1XVM3DXXVUJYlVVlSLmqapsHWhnJRsVgsqKqKsiyZzWZYgX6/z2A4JM9z\n0jQFwDiHUgqlFCJCniSICNPZjPF4zKKq/HpB6WitAci14lf/0l/khVs30GLQImgVlBAWCcqk65ZG\nBWqc/66xftDaMHjb6xCu+aLy51zWNXVdU5mmVU7GGJrK35NyUTGbzZiVM+q65uTkhOOjExbzEucc\nCo11kKQFohOc0qBzSDKsKGrJGKPZuHaDz33pC/wbf+ZP8zd+6WcRKhxmqdEAFU7HtlruUnX3Jynv\nXrTw01ICd4HnO5+fC8tacc79BvAb8HRbAs65dvZbWRZEUAgOt6I6VtczxlAURbtMEP8eNquUah9Y\nay1aa7IsQ4ufaV1YxzkbrAv/ORFN4yzWalTjt5E0iroWynrlQHAuwTQNSkq0CMY5PyMrUFpQWsjy\nlKzosb29jYTBHmfSeLDdQStr1yV+H1+XLV9+Je0+LnpXosI19ArIBatlXaJiumyfSkm7jlLKD0gn\n4d4FS8cKVkDQ7e8aY3CuQaFwStO4kl5/g1EvY29rk41+j2g7OIAkgaY5d3xPu3xaSuBrwGsi8jJ+\n8P9l4K9+Svv61MU/eMuHv/vqin8IVwdHNKezLGvX0VpjrQUXBnOYNavS0oSHKEkSUq38rG6XJm3c\npoigUaTW0jhLkiTeMmkakiQhSRJKqVdmb9NYyvkcUdYP/rDcWq/A8jwnLwqUUugk8RZD+E7CeVjr\nZ29jl7N4dwB2x6HffvfarF+r5e/Xr6VXeqvLu/uJy5cDXS1fTq1aFpiV9aMicBZwCkETTg8lCmsd\nOIvWKU4EZywimn6WM9jdoegVbPQK8kQDFiV4N+qxCqDr/Dxd8qkoAedcIyJ/HfiHgAb+tnPuO5/G\nvp5Uzs/fHy3dB/oiZRCXQxjkYVACaK3RKkGwOOvnkfhgdh9mF8xvrTWIxTmLc2FdCTOm9YNTLCgl\nwYpQJMrP7EopdCU0iSLVAsYyn3qFkyT+GBOjkcpfBx0GbdPUqKCo4qB3URmEYzSdWftiZRgHt10Z\ngKv/n18Wr1m0mFa2F76zrQJaUxDKIcqhrbfMmo77sKI0UIhOwysB8fEKrPXH5Cwq0WilcEphwkOi\nFWQYesoxyjRSl4DDOgNKgRJoDAD2whjB02nwfmoxAefcbwG/9Wlt/09SRKS9f+uz38Uz3PJ7a/0s\nHX3kOIiccyitWhcAvIJI07Sd1Z3zD7VCAB0+L2MI3X1qIE5nWmsy53DJUhlZa9ttO+doVNNaJXme\nY6zfTpqm5HkOneOEy83/x4lqg3F2OQNbSxvo7Bz/umIFryD9b8zKetGScor22gHotXvSBj2dAwmK\nQxTO+u2mSUaiM5QKMRYn2GBVARhTB1cKTGWpjUESzdHxAfPZmDd+b0A7jQTL7pw8vQZAKz+0wOCz\nJF13AFYVQJy57dpMmYhqH9Z2XdEIKpihsjQjOa9IlFJYXDsYfbbAtdFr50ywvV37UnglYbV3FRLj\n/dxGgSjQiZBm/piyLMO5EudSv+2qWrFeUH4bltVBqlQSrBYXZj+Fu0Q5+GCnDTNsUCLBR+9er3UR\nEYwx7bEo5dr1u1aSDRaRFodVDoxXBEaBw6KwrbWxvI/hfJxCSbLiLlmAYLm4aAVpCTkNH485PXjI\ntK54cP8u36tngEWBdxtElqmMC2Q96Py0yJUS+CSyEtzyrzTOSnGwxqBWMOWjj9/OhLAyu8bvwAcQ\nm6bpBA39oFmmuqJCibPy4+MU3Qc8Hk+ahkGvdHjYfUS9jTMEi6WrELrKDuLn5XePk2iOt+cZlEBU\nrBcN0Mvcg4vcjnYdd96i8CtZkJi4tFhn0Fpj3NK6aC0La5CgcI0J19oFdWItVgnOCSkOLcKgyDnD\noZT47JGNqcJ250Tz4GnG518pgTW5SFO37oBzZFlG3QjK2RVzs3Y+DUVjEFGYkAYTEZqmOTdgYn47\n/q+UahVGHDTGGHSyVDjWOpIkoarqMDBoH+AkSXyKsKpQWrcYhfguIojWoBQ6TTHWIFrjVIVTDqXB\nOQsarFiUaLTWiFodWF4BgYhqMxlx+11FpBEMfqDVde1djnpOqjXGNK0S6w767u+97y4r/vy6rCsG\nER8b0Qip0tgk/DbgGJauWOMVtLM+I6A1rmlwIeDZufNY64J/7x8OEY12DmUFnL9fjT2fQXp65/3z\ncqUEPoa07oAIRVEgNsWlYeZ21g+8MMgbsxzEcYCcmw3Du5LVhzzGAgCaxpBlKcbW2GAaR3/eo7J9\nLj2mE7vmcx2sifhZrFvxpz3GYDWoF2fbCBDSKsQw3KriWo+FnHOJ1nx9xdKScK0iPO//d6VVOp3Z\nXYKpfVkw8qJtKKVQ2iKN+FiKCOJAlAvbXj0fpTzu4pwlglcEAihsSAlqJFgTyMXn0RXL02sNXCmB\njykKsCJkWYbgfdCmaUiV+HSe0ixEsXBeOThjyNPUm/fGYJsGrEVH85eO+Wp9yk5rTVVVuOCf1nVN\nlieYYHXgBOsM/aJHXdckvYym8UGtaNIrpZCmIVGKMqQLJQQVq7JeTZ25pa8NawMuDpDoUztZWc8K\nbbyim9HQMa0nwbS37txM350z112juP1uILKLWoyKxntLrn05LOKcf0Xsg/PHlSpALI0sAU/GLBWA\nD9H4c7Ksxvc66qpdInj3I7nQE4rmv13aAU9nUqCVKyXwERJnIACcQytF42wwib11oLVGAg4AoKqq\nVmEALRBofQaLbkCMgmutKcuynbG1QLmo6fdyqqpEnEe11XXtlVGwJPI0oygKqkXJdD7D1A0o789G\n5GBZlTRNE5TQ5abqZem+y/7/yOxIOIaYBXErMYGL97muNB53jF13orvMZ0wEIz51GAOMSgeroDFo\n5a2BlW2LsD62bWe7PuPhrX9xavn9M4EavliulMBHyMrM1fFVRfzMbYzxENEYeNMapzW1tSSppjE+\nxy6cf3gFh9bLaHcM2kWJA93P8hqsYbFY0O/1cA7KsuT1773OvQ/uUgz67G3vsLW7w+ZwxGQ+82av\ntdjaYGsDJmTbzDJa3w0eds3gGCC07czu2mnRr+etC+OhOCsDdl1BOOdaS8oP0PZynpPV2ML5e7Fi\nIYRZPL5HBKR2gsFnRFQHv9O1WuLn7rFa53ytQDyW8NceFz4XIDiPOFRdpRhrGjr749mIClwpgY8p\nwhIN6Do+dpTHzVrR144PePswyqov3sUTWGuZTqfkeY6If1iTxFsBd+7c4Zvf/CZ/+M1vcXp6ynQ6\nJU1T+v0+r7zyCj/3cz/H9vY2VVWBVuRZ4WdjDOJ8cLGs/ehYSZF1FNBFuIDu525Q86LB3zSNDwKG\n9ZdovvOz90Wf4zXvxiHi4LVu1ZeP33XjFwpoLnE1um6G1ikitQf6LFda0VBu7XpYIL3YZ2j3/awo\nALhSAp9YurNb98GI/mg7IFznJUKe5yRao0QCMk+WLgWrKbkY7CuylMPDQ+pqzuuvv87hw0dYa/m9\n3/s677zzDspBqjWJ1tim4fDRI06Pj3nj9de9b+tga2eHV199la3tbXZ29tBas6iqc4E9CUCeGCeI\nysl0lZtoD7d1nYg5nFMW3eU+OLi6zvK6ycrnc8qE5Xt3sHvQlPLuUScouVQKjmUadbnP9p6F0+la\nBoLHDThxreVCrCAMYsVXG8TZ/iKl/7QG/x4nV0rgY0osbFVaSKzCaO8YeqDYeZ3fDi7xgcMsy1pr\noMXym6ad3QSLMwYlllRriiylnM/5v//5P+ef/Z//hEePHtHUtU8JOsOg6JHE34ZZXClFXdccPDps\nYxDvv/sud75/h83tbX76p3+an/xTP0WpFFY56i7evjWNLc4ZRNJw4sty4zY4aS0o3Q4+55wPqglI\nKMvVIR3ZBt7CgLHiSERwMbLOeUvgshhBd/11K8BnQVatszggW+XsmnOBUKWW27PSqYforNOu37H3\nfbFR+3CcCwc8K1YAXCmBc7JeWnzuf2sR6wIazYSp3kf3HdZHqRU+Yt3ObPh0X8jZtylEERKlaEyN\nQoFtEGepZlMePrzPP/vd3+V3fud3yNOUcjajKIpQh1AgNgTc6mXE31pLplN6oz51gNpuJwlF3uNs\nNuUb3/g9bt1+jjTPV2Zoay1KC7Yy1LZBqwQroVzXGuK4cRZcKOtVqYc8N9aSZBl1zMUr3RYXxQEU\nXRytNc40WHx69FI3QFYRhUrAWh+UjTEaKx6hp3WITRiDQrqhi5Xtdo/HiVdGYNGJQiUOaRxJqimb\nOmxAtdmRNn4Sj1eBgZBGlRUNcPngD3GLpzB6eKUELpHLfDqNUEsHfqqsfyKw7S/WXQVjTBv4i+K/\nc1R16RWPgqYuqRYLvvn73+A3f/M3efvOHR8vGG2wORwtcf91gzEuBPjEBw3B8w4Y8aM1DIX5bIFt\n/LRVliXf+c53eO2znyXv9y6MrEdxHtvsg4QJYENMw4bzU6vme7QKrFuLsIdy4JUIu1I4Yzr7WvXd\n29LgZSRy5bq2117k3LJoEUQlozvvzZriccorEhHBqTV3I7ogcV/t6QSb0Ep7Tv5ZiWusXs+LJpWn\nTa6UwB9DuhFu5fxr/SGPboBzjtPTUxaLBXmet+g+cOhQT5NqYTGfIw7+6Nvf4bf/wf/G2dkZe3t7\nLBYLQNE0ljqU9pom1Ne7AEs2DVZCwY4CHRwUn5LTlJWhrEvSNOX737tDWRs+87nPQXAfnHPoUBPQ\nhS778wgDMvjNxMGvO9V81lKHTAnBwvDGkGvjbRGIIxJdGF+GG69ZlC52YT1OILJcp6t4lt+H4KEP\ntvjtRvi2AV9m1ZDolDRxNEbQusEXutatQgBwARwWlUl3iPuXQtRSkXFhpZC75P+nS66UwCeU1qwM\nmPTz/qvxboJaBr0Wi4Vn7bEGcGGWBWO8S1E2vsLPBlag4WCDydnME10YyPKMsiwhDEwnQt04lErC\nA29xOJTWfkYLeexl4Y0fzMZYjKs5OfYZhaLfbxFyznnKNHHO0yjpWOrbPflOipRA+hFz8BAKaawf\nC9YR58H1TINzYTbtxBDWr7FfcX32vwgqvBpYjefrnLQlwOvbjopmHcmplMKhPR4wWAYxiNjGDcK9\no6MwOnf/kv+fbrlSAj9g6Uah46tpPL0XLB9CHcrPrZUWCSfiMQEAo9GIqqrQKmGxWOCseEwBGtMY\nP1MZR5r1SHINKnAcCdjGYFzk/qsBQeksHI9hfDblbDIjC2xH1oQxu3Ye3feYyYhmckQQXlbc0/0t\nhOq+uHy9zuYTXs94HbtZAW/F0H63cg5oRDxQCVHBcYsA4LCeW6ZvYWnGO1lShbUuilMf+/ifBflj\nKwEReR7474HreLX3G865/1JE/mPg3wcehVX/pvPcAj8aIta/CA9PzAPGr7szhCxpx5xzpIkKLoBB\nqdT/b2ryIvMoQ2up65rZbMZ8PkerBK0SKhseUiPUTYVpLFnRZzTcoD8c0i8KRGsynVJbQ7WYMw+c\ngQBltaCuF37mFcVsNuPs7Iytra0wYQuuiTO3r5RrB5D1ZrEnLFg13ZVSqMYHSlfy6IEkNUo3198a\n2yKAxinTDrJz618w0h6XKVBKI2IAc6HS6L601m2dRDe2IJHSLA78wEYmLuAT0FxWKyDSEo09S4bA\nE1kCDfAfOud+T0RGwDdE5B+F7/4L59x/+uSH98OXxwXP4vfd/7t+KiyhwTH/H7enNBjTkGVZGydI\ndcLBwQGz2YwszWlqy7RckKU5ohJGww3y3sDntNOE/WvXGQ42yPO8faAjgebZ2RmDYYnBcHpyRDOO\n/IQOqxSTydRbHUqIXHsrgTanloSonah9e07xS1gZaOBNfK1XZ1T/vWdJkgC7DkvPe9IdJdCd7eN+\nmsaspi0vkMelGVcwGSpFKY0SHc6pDtdgeXwXyYqyf8blj60EnHP3gHvh/zMR+S6eavxHSi6beVr0\nYAS6YFYsgmhWAlhnKHp5uzxJI3RVt4VExhiyJGV/f5/ZbE5lGpROUMYXu2wMBly/8Ry71/bp94bo\nNCXPfcowHlNd1+i0YeQgyXJmsxll7Zl0a2OYzibUdemLayQJ05wvvwVQoltmHSXiEXhqNW2XpWlb\nsdgdgCpEzJwDlSToMHiTJKGu6xbHYJoGhyUlROFFt75+ZB92ojGd1FxMAy5Nfw80ihbL+oD0tG2+\nZNgrC1lRYN37GD97XINgrFeklibEAEKwUTlfjclqYPLcs/JYveCfm6dNfiAAJxF5Cfhp4P8Ni/66\niPyBiPxtEdn+QezjaZXuLHnRC3yKMPIMOufa9+4DmCQJk8mE69evkyQJedbzM75OGA432NrZ49r1\nG+xfv8XutX02N3dJkhyV5jhJsSSopEAlBagMSTLStCBLc9KsIM1ykiQDvH1bN4amtj4w2A6aAAyy\ncDaeMB6PfVVjRxFeNvN2r0d3QFrryVNtW3Ubehm4i039x1ldl8m62R/fU63ROmkrNxWA9YQgvrDQ\na63WnRB9qfsgqDaN2O73E+X9nl6r4YmVgIgMgb8L/A3n3Bj4r4BXgC/jLYX/7JLf/ZqIfF1Evv6k\nx/BksoSvPl5Wff82NtCJEcBqqqpLiZUkCUmqMLZGIytMOM45XySUaN58607bN0CUYjjY4NZzL3Dt\n+g2Goy2UTkBlGFFImpGkuefIFx/osvgmGaISRCeITkE0SmdkRQ9fHa9ak1ck0GxJQqTiBnxGYzrH\nNRbNkp03MhB3YdI+2m9Xr0/nenTN+YvMaNPiCHyO4XGBxvXXOumIhLSeN/WT1uePv4/vMRXa/f3K\nfgMLcWBvbBUBThBRPjj4IyJPlB0Qjy39u8D/4Jz7ewDOuQed7/8b4H+/6LfuGek7cJF0Z4iL0lVd\ndyFaAOPx2GcFtF5REMYYilByHLeVqITj4zGLecXW9oC9/X2yvI/SCVVj0Zkg2hOQ1FYQlaITgbpB\no0kzg3GO1EFtDCiPGkyShNPjY5q6aR9iP0h9VyJvFQhN7ZuoONxKQVPX/L1w4KxJJDSx1oJWiFW+\n5jBkBy7yqS/b1nq2Yv2ar98XFbIRytHO/BG7gPNAK6wNywWNd4XOWQLEmImAmIAMiopCeDarBVbl\nSbIDAvy3wHedc/95Z/nNEC8A+DeBbz/ZIT5dcpnJD+eDT6IVTuDw8JDf/d3fpSpn1IuSIktBHDpJ\ncU1DFWjFqrJka2uL6/s3qF9/k9PxA7Kih04zRCXUxiHOoOoaUYkHHzlv9joR6qrxiD2EunbM5zXz\nRUNjIEl7ZEUfY70rgFI0BtJEeZxBJ1hW175LUZqmaBUsBFnGObzyk7Ypygp1WgdVE5dFJqPGLbkT\nbdD73SHkLgnCXhaJP3c/1gOcdvW81pVOtNg821LgHAzczk5CCzIR70EhiNPgbFvd2DUgPyqA/DTL\nk1gC/wLw14A/FJFvhmV/E/grIvJlfATkHeA/eKIjfMrkshjAMu21nB0jZ+DZ2RnvvnOHRBQ3btxg\ntDFERCjLMvjH/rdZlvHo4QH7127wznvv+4zA5iZFr0eWD1A6Ryc5OslANNPZgiTJWCwqjo+P+eD9\nu1R1CcaxWMw9NkEsWZrQ6+dkOiXRaShoyluwjFKRhtvP+mVZU5UNRVGsUKVf9t5Vht1UG3hTP8YV\nfKZEQhrO11FwyQC/bECt7ueiZaupShd6CcQ6Ca1i3t/gQ7OyZHtaV+LxOKzgQv/Ex7k1z6o8SXbg\n/+JiZ/pHCBPAhcHcFbMzGovryW68qZ+mKb2+T+E1VY1OlMexO0eShFoCa5jP5wGZonjh5Zfof/0b\nNMaxtbVFXTfMZqfM5jXGQd1YlE4BxebWDmVZ8s477/Deu++DOFKVeMptpRgM+2xuDhgNBwiG3mDE\naGPAxmgT8Ka/TpY+slKKsiwDriFf4vi1Wnn42zLfNddo3T2K/jfEQbYCQWwv8EUD/6LtrQ+8CPTB\nLU1+5WiRiHGfIt7D7+6n+972eRBpLR8PFwhIROV5JPRHuCvL56ULNH665QoxeInYxyj5i/xQ/8G2\nuXXnPDOxqRtsHFyBCzDyATpjMfjUU5pkzGYzFlXDr/zKr/C919/g61/7faqq4sGD9zg4PuPg8BRr\nFWVZk2YFL738CnnR925AUBiDwWBZWWcbdne2uHFtn6zQzMZnDAcjru/tsru7jXUG1xjfD0ECEs6p\nMMNKm370hJ26LYTSWmPN0sxuFUVHGRjnS4ZFe4Qe2rvUfrDEgfF4/MXjYg3gKwtXLBG17IHgOqlN\naZG+1s/8ylsAPtMYv+wgD7WPHUhwCZQEN0F8U1RxgsX9CEQDvFwpgbUH8aOyPr6ZZ0j9OYcNf/EB\ncq4BcagQQPJBqgSNkKcpvaxAi8YEYLtYT89lLSyqhlu3nwfR/NV/56/x/Tfepqoaqsp30/VgH0Wv\nP0TplCzL2NnZ4fRswmhrk63dnVYJpGmK0sLO1ibDfp/J2THldEaWJDRNQDGKoLM0DFr/OdKIp2lK\nBDqJeAxCmqa+uYm1rbm/zqJsEVQIfipRKGfaEuoobct1sQGNF+opxN8PZ1fpy/1i/66Uoja+u7FH\nJQYCUS3LcgUdiUljfYD/vQpu/Aq2wxoS7Ui0whrrSVQ6T4WvJ+iAkpw/XoMLg2ftibkUCvD0WgRX\nSuATyrqJGqGq62ZmNINjOg18KXFLLCKCjTOraGoMWZozn8+pGsMv/MIvsLuzx2w+Z2Njg7y/QVlZ\nytqxubEDohkOhxRFgXG+TLixlu3dXUajEc458ixhYzhAi1CV0zZT0dKTnzuf8AR3018BOagkzPjR\n0ukU0F02Y7fsvdFQEvHkKTF+0vGv43YkKog16a7T1iuwBtqJVoi1EJdL4zOXbQAhcB0EMhGlw7bF\n0bYXF4d1gQAWWt5BcdZ3KBaHYC+3FltF8PQO/K5cKYFPKO2g6aTYJCDvcMsWY6DI87xlBt7c3CTT\nCYnOWvCQDTXpsWlITBfauuHk8Ij5fM5zz7/I7VvPczpZkBdDzqYlpgGlU67duM7GxgbJeIK1vv9B\nvygY9vte2YSORVVVtf5+mqbtoNFIGzzD2OBHB1ScsdjAEixKoZWE7NjFPQk94cj563UukPYR4yIG\n/NabiHa311W4SwtsiRvo4jOUUlTOrBxDtG6676p1JdZcDCety+BELa0ECWnDHwGn4EoJ/DGkqwic\nW9LZrmcMqqpq15/NZrgsp9/v41zSRuXFObTSJP0+08nMz+hNw4cf3mdnZ8eXFg+HbGxfQ+mc7dox\nn1UsSl9tmOc582QReAdCe/E890U9CHVZUs7mYF0LV46lv3HQRIvFOhN68DXtcmNrtMtoy3pjIE8J\nrlOGDCGOElKDzopn3g90ZBZ81+A4K0sXaLQqK41EO9c1XsvuPYiz8bqFtqoI3EonptixOW47lkh7\npWAR1007+kInUWF77XWIpZDPfobgSglcJh/DklOAsf6Bj7KcWXzHoJgjjw9dXdeUC0WWeXcgiV2I\nxc+k08kMUOzt7fGlL32Jt956j7IsGeQDlFL0ehlNbfjw/n2O3xkzGI0o53OOjo7opUWLRuwXBTpR\nNGVFWZYrRJxgQ/rSYZrIu+ebenTTbJ7ApMElCdIxwQFMjIY4g3VmSTtuPdc/gA7XJQYR46DyjT8j\nAtOdu9YSyf3tajpyXfw18zwItg3+dVmOPMeCSggNXDxBqdYapRuk66ZEJRBuvndLlK8aFkFcxBmY\nkDYQxAYg1Uc/Kk81w9CVEvhjiH+YL85vd1+eU8+bor1eD4zl7OyM6WTCaDQiS/PWx61M45VKSNUl\nWcbW1g55/gDjHIeHh2xs7qJS53voAY8ePeTegwdsb26yv79PnqTUdc3Z6SmmWviBYBqqekHT1Dhb\nk6Qa50xocgLWmLbcWQLvXiyPbkwV4MyKBF/vYNoinzDQAsTZk5CGLsbWg4IaB1o0TZzZifPmKsy6\nixVor5tz57odXwQRBu+irIOC4meP0FzGINbv00XiQUurjNDS7m9V4f8oyJUS+Nji/dmIJW8f5Ii3\nb3H3PpSkcGACbZf4lFpdlm3x0GKxQIlPu2W5L/RJdMZkOmM6nzOfz3nppZd46613aJqGWVlTHR0g\nKkVURl6kvPraT9DUln5R+NmvaZhN5xwdzjmwliLLKfIU4ozd+NRk3VTBQgFrl12T17H41lqqukan\nPphpWObSnfjKR9fYzm86gx3LKH0AACAASURBVMKp1pdu/XTn2ii/304wr+MVXhtUopbMREs8wJLN\ncd01cNZbHS3bo8hy3fC/cY5mjU1oRSGokFIMB2VdFxMBqnOOTl0pgR9bie2tzj2Ea8GqriRJQlN5\nE7sOgbq6atjZ2fGzrfPknbG5aV3X7F7bQWcJjw4eUjaQpj2yvMd0VjFdzHHOKxlna5z18OH5dMJ0\nOkWAYb+PGfTI8hRPjOuZhVb8+NZNCD52SOnFbsixKMiK88xFQQm0bcW6IBsEHVKN0VZaARHFV6w5\nDniEeA3jYFyvVHwckOiie9DNOMDqb5vQ17GrCM7P6OdLhJ2/CD4gGLEF68agxOwKz5RcKYFL5DIf\nLgbUIFBo29UceBu9xvco6DbMjFDimHe3xjGfz0kDhFdEWCwWbdCw3+/T6/U4Pj7BiMJYR9U0nIzP\nODo8ZjQasbe7z8ZwiBJNOZ/T6+f0ehmuCRkIU2NqEKeYTCc+PuAM1hqf83ceY58liUcF1o40TamN\nb3GutSbPc9DLjsZLvH1DWYd0Y5ih225G4pa5wXDNuhaAR/DFa+atp7ieEm8tRQafbuAx4P+CYjg/\nkCM7k88YrCkXCffM1Su/W7UIlvfRiW47LXkaeW8N4cSnC9XyuCFiEC5+np7GWECUKyXwCWXd718v\noOlG3OP/8bs4e6ahBblzXgkMRxtkWUamfRsyBW0z089/7jXG4zH3Hz6i6I08UYcShoMCZxrmszEn\nxwecHh1jjGN3e4dru7tImqCAum4wpqasak7HJ571uPBsRoK3UHQioWioDgE17yKkmS9SAnyjExEP\nGBJplUHEHTgbGcg8wafG4+21uNV6frxCUvLxhkX3unbTgK1bspYavAizEO9TpBQTrVHWgpKVwekH\n9SoV+tLSiNu6/Fgvw0s87XKlBD5C2v4D6/4qqvVv48u3GPMRa5TzpBYiJKIo0owZYJoG7UJBiwad\nKM85qGP9gSVNNeIMWaL4yS9+AYXwW//HP6QppzTGoZKM0bBHU1vyLKFfFOxtb5FnBaOBzyLM53PK\n2dxzFk7PmE4nTCYTsjxB99PgSni6r7q2iIMsTdFKUdULnHNkSUqWpG3b9Gimu1CC66+D75yEtdDm\n2yOgR1CcN+2X0+Ulgbm1wWScC8G/VUqxLmagiw+I24jsRDEmsKLAUecsFefkXD9D1+7nsY/JMy1X\nSuDjSsf3jO8X5bJb8EpMk3V4BWOL7sb5GVis81F6INMJ/SInSzXiPCnpfLYgTzWf/cyrvP3223z7\nO9/FVjXOGNK8x7CfMxwW7GzvMhxsYIzh5PiUw8MjZrMZTVkznU2Yno2ZLzynYJqP2uP3XXu85EXG\nfDHFBFr0REmgGXOe4Sim9qw302O/gibQhTk8+YhGEBVdIq9csJ6ARCIjMhICrB9tDaz7+uvZgYtc\nse5v1y0ESwA2ybIhKWIQaXDOtgNeWbVSf/DMOfqfQK6UwCeUlYfReVPXiQ8UKqVIlO+uY0M+vigy\n6nJOYyoaU6GwWOsDa3mRAo5UK2azCXXTMOz3MHWFbWqc8VTl/Tznc6+9zL27d/nWN/8QnWZsbm1j\n8pyz02Me3X/gy35VQlU1nIzHnl9wtvD+f91gXdMiAZu6Iss0aZK2NQJYSz/3FOTjs1NSrdkYDciS\nJAz+0JTb+dLcVHsMhBZFlqQYrM/Fu8YP8g4RqY9BWF/Gq5Rn7g0pxc6Fba/v+vtFg7+1Stxqi/VV\n92y5jRgMjClZ5dSqi0AM+F082HVQ5LpFEmg6VCXt7y7rXPU0y5US+IQSZ5roPa5bAm2VnV1Nj2ml\n2uCZiJ9lF7MZWZZxdnrKcGODjdGINE0ZDvtopTCmBjxg57Ovvcqt67d47tYt/uk/+V1Ojw5Jsoyq\nrpfWtVM0xlGFAqGIoNHieQ2zNKE/KBARzs7OgAGj0Yhbt29im4o8zxmfHjM5O+Xo+JCd3W3ELbsU\n6zRtI/yxL183P4/1Qb5YcRgBSNjQv9HpEED31sVFjVzpXNOPkvVsTBz88frH1mAxmu/dAI2TOrgL\nFyuYCBZaxRW0e/1YxxbFu5Kf+Gd/onKlBJ5AYhYA/EwhSlGHZ0cEev0CM/FgmrIsmUwm9Pt9RsOe\nJ+uwifdVlePa/i4723uMpxMOHt5Hh9TcfD7n8OCYzU3POPTnfvEXODk45Jvf+kNmizlnsymmsYjS\naJV6Eo/GtOSlnv5bt5WBvTynbioSUUzGYxIt/MTLL3L7xefp9/vU5YIXbj+HKNjc3OT+/ft88MEH\nLBYz7AJSlSKJprHeqohcgyJ+YnfW0hi7DIhekNqLyyK5aUxDXhbUWwf3dAc/4JmNlaKJClpplPJl\nwy6kXkG1EX2PDFzlM+ymFqVT4uBbnPuj7Z5Pt2rgWa8eeGIlICLvAGf4ibFxzv2siOwA/zPwEp5d\n6Fedc8dPuq8/SfHNrC6WaAUowCkf2FvxG63HsU4Cr+Cg32d/d4+97R1+6c/+Wb7yla+QZgn3PviQ\n2WxKmhfM5/MW3z4+OaGczxHnYwaJzvja9/4fFvMSlOa5Wzd54403OJudkSpNlidUjaFuysCWF/35\nhCxPGBQ98iIlS1P6vSGLaoozDZWB8fEJ3/mDPyTVwu72Fr1ej9HGkK/8zM+Q5Qn379/nhRdu+3jD\nyQllWWLMEigTEY5lWTJbLJhOZiwWCxam8WCftcYsOME4g74k0LY6GC9H+EVcgogsob1xnVC/oIOb\nloiiltj/ISpFS6obmk4TkkhGItZhMTinaa0CYprT32fPVwgEe6b7rKy4BM9AQPEHZQn8OefcQefz\nrwP/2Dn3t0Tk18Pn/+gHtK8/MYk30gf2/P9aQVXVJCqhNjaYtgZnfJRcQpygMobnbz9HnqYMh0M+\n+9prPP/88+RJirWWw6NHbO1us3d9F+UUjak4OztDRJhNJoxPJyilyJOUxbxkYzhELFSN4eDRfYos\npV/kiNZMpzOUSqkb51MOotE6pch75HnOaDAgy1KSRNACRZqTFDmVSenl27z00kvcvnmTfq9gMj1D\na/jW73+j7ZVwY/8ao9GIhw8fehDT7i4qSSjLkrOzM+bzBdY5ptMpH969z/1HD8EFpiJRbAyHAYgk\nnjsAFcB/NuAUAvUYqzN8i8eIWQCJYKU1XEHAY7RuQYfJKCoU78tbRC3X14kibYRMKXKtqMS1UUMf\nwAxQ6Nq2bkZjLRrvDqnO0Bfx59bJT1zwRD2dfsGn5Q78BeDPhv//O+Cf8gwqgSgREquSBGdM22LL\nOUeioKksWaKobENjvEIY9gd87jOf4blbt9jb22uDSnVdM5mOGY/H1GXJcLhLvyhomoYi8409cp3Q\nywuM8dWHpmnY3thEo1hUFeWiYjTsMSt7OBRJkmKdoqwM1gmJTpGOEujlOVoJiYJcK6xTJJkiNYrN\nzU1u3NxnYzTE2AYtPh1nnGE2mzHsF5wcHXDw8KFXSnnO9OwMSYSTkxP6vSGpVnx4957virS/S1EU\nHB4ecnx8zMnJiW+KErIkJsRHnDPnZsl1M78r3ZleB6ozoOVGWAf9aDzbsBahWdmQ5wKQYKT41K5f\nL+IZEAvGr6DVkmDFhtSoiC/SSjQropIE2zRtNeWzIj8IJeCA3xFfffJfO08lft0tGYfv4/sVroiI\n/Brwaz+A/X/qEum0bONZfpwIuAZn6sDY6y9jlqY4a7lx+ya7O9cosozx8Qmmqrl58yblYgrA6fFx\nyzMw6PUosoxaKXLtgTepaAY9jwNYTGfYuiHvFQwHfYoiZ5GV3L5xEyfC6WRGYl1gFAZEk+gUnEIl\naVuMI6LQ2r+yJEEnlu3BiFu3bvHcrdvkacrJieclcPhzTVPN9vY2dV0zHo8ZDAYkScJsNuP4/jFZ\nltHoBccnx2xtbzLa3MRay/Xrwssvv8C9e/f43ve+x9HBQ2zT0FjffdnYBhVaFjl3McAnShcy3KZf\n3eryNri31hfyo6QFGjlfT9DNHogkGGdpTIU0HizlFYoDQvFUS03mMQmmaS41/5dcR0+f/CCUwL/o\nnLsrIvvAPxKR73W/dM45uaCvgHuG+g742cbj4TcGQx4dHXp8vghbW1u89tprTMdn9Pt9IOLxNZlO\nUKlienbGcZZR1QsfGByNqA4P2d7cXOk5ENF4eZ6H5hmepzBJElwTKLXSlCIr2N7dRRc5d95+l/m8\nJEsTkrTAOhVYg3XLFIxz9PKUVGsSJeS9hMEg59bt6+zv7VHkKYvFnKpekKSaRGkqceR53s6CReFb\nnlWVL02OcOIYfNzaGDIcjRARamPY3tzk5s2baK157733PDS5KHDWokUFmrJlT0ERz7YksqxPWM/5\nX/b/ZTiCiySSjYo4ZC3o09YcGDAusD4laQh++v6JPlPiQWGtwtHa9zH4cUUMOufuhveHIvL3ga8C\nDyT0HxCRm8DDJ93PD0tibXrklDk6fMT49JTpdIpSir2tTXY2RuSBrtuFYJ6zDZPpDK01O9ubnI1P\nGI1GmLrh9PSUIsvJ0wwJqDasQ5TD1HXbJMOaiuGgwDY+92+MAe1rCnZ298iKHvOy5sH9hzTG+RoE\np9BpRhp4CiC0QVPe3L22u83GxoDnbl9nb38b1/gehdVi0cYztMD25iZpluBsg7MNWaqxpqauFjR1\nSZZqzsYniAhZqqmrBZPxCVmW4ZRwenyISjJ+4qUX6eUZeZqA881Ia1uTqGXLr5hpv0xaU98F/r/W\nIlgG7daVRpSLlILSQqI1RvmBrbUGrbAon2lwDtP4GoRUfPYhUSHrowBnfMo3btCYpfnf7u7Z8Qme\ntAPRAFDONyQdAP8K8J8A/yvw7wJ/K7z/L096oD8s6TIAOef49rf+gO3tbYaDAXmec3Z8wlvff4O9\n3WskSUK5WFA3Nb28IOn1EJEQUTeMx2MAhsMhi8WCXvh+Pp+zWCzQvZ4vMAr+ZxlKj3u9ni80SjJv\nKRQpSglbW5t89rVXvHVyeIS1yncmcp6MU+GtC9KERHuF9tpnXmVzc8De9oiil3F6eop1DVp50JI4\nA+Jz+JEZudtGLKYbbVNj6gpnYXf/midMbSomiwVpnpMPBmhx9PKcV199lePjY27cuOH9dCfBunIr\nLEdw8aCFtUH+mNjBR8mq6xCITjvbqaoKCb0ZsBbtLBpPv2asRacJGIvWkKZqCSdfO7blDnnqMwRP\naglcB/5+uIgJ8D86535bRL4G/B0R+feAd4FffcL9/NAkotN0CDa9885bPHo0YNQfsLm5ySuvvMqg\n1yPPEt+/bzLxZm/oOTAajbh77x5ZltHv95nP5xwcHHD9+nXS1GcK5vM5JycnHp0X0otV5Qk9kiQh\nLVI2dzaxhpYn0JgKY4QbN24wGAzYu75PUxuMhfmiojINRZp701VrBn3POfDCC7coshRrSpp6gRJL\nv8hxaYKxSfCJl/XzVVW13YVFIFWanc0tnDOkiSLLCjY2Nzg+OiLTCanSGGc4Oz0h7/cwjcWJr45U\nWJ9ZUApjm4CnEERsO06WhUEWt97vz8UEvp/BvcK4AErcNdW5wGUwtadf62AUIuZDQjcnjaC0gqYB\na+hlKb2i4Nbt2yRa01QV0+khRHq5duJ/ykf8BfJESsA59xbwpQuWHwL/0pNs+09aLisdXpqcAXte\nVkzLisXJMcf3P+SN7/wR/8B5Ag+VaG7euMVXf/7n2d3d5fkXX+Ltt9/mZDzm1q1bnJyc+MKeukIl\nmt//1jcZjUZ85StfYTKb8uGDe7iQahuNRpRNRTboYecNxaC3rE7EcTY+Jcl7DLKMxXzCC7f3wQlv\nvfsOP/n5l/n8F7/oB1sgMdUiJKmmLhdMZ2f0i4TRcMgkVSjX+Nk9Mg4FarRoch8eHmKt9TyJzvmM\nwvVr5HnK2dkZ49NjBoMBg8GgRUjmWeEJSXqa6WLOwlruvv8+k/GY/ZvXyYoCK7HZh21RlPH3Ufk6\n51r6NueWlkI8N68wTKu41i2JdQXQgphkmVVAK1SSkOQZUlY0xlD0MlJx5EXKn//X/zV+6c/8ApuD\nAYnzCuD+/fscHH/IP/7tv0NtGhSK5jFhv5aB7in0EK4Qgx9DPEjEi4ivjEucINaRKEWCdxdOj0+Y\nTWYMh0NefvlldIj2F0XB0dERzjlGoxFpnjEej73/7JYcA03T8MILL/D973+fhw8fsr29zWAw8JRk\n0ylpmoaXpjfo+UFhGq7tbVGbBcPBiM9/7lXefOMtxmcnbG9usre/z83r15lOp5ydnoFrEGeZnJ1y\n8OgB4/GY3b0dEEWWZljnuyH5VmUZWZZ5tuIw4CIc+vT0FOd84HI2m3F4eNieX+RW7BUFw9GIZDzG\nGr+utZbFvCTv9dChPwA2AVllCY5iA334irsgnJv943s3a9BdtnI/rfjmqx3FALSgoV6WkSoNruEX\nf/EX+Yt/6d9icnRMXVakacH45IRhb4C12z7eIorGWVKlqa3hWZMrJbAmjyOEVHgcfuoCIYZzAT3o\ncMbQLwpwwp0332Qxn7O3vw9a+U5ExlA1NbVp2BhsICIUgx7OOe7ceZPpdEq/3yfNMpI0ZaA1DliU\nJXXT0B8M2NzaaDMHR4fH/v3klO3tbU9G0tT0+32eu32DN+7c4fTokWcYdk074OqyZGNzCEVGU5fs\nbG9SLeboXg+UYKqaIvW055VbUBQF165dA2A6nTKbzz3Y6fCYXq8X4hYZmoqmrEh3PKW5LpIQ71hQ\nhy7IzgqVaZjNZugsoTcckCgJJKZ+Ro/0a93CoLYJcCQzZT1+EIu5gwSqt3XIschqgZGvJVBY2yxB\nRYnCuAbrfDzjl3/5l9vS7N3NLXKdYaqGRbVgOpmi0RhX4XkUfJxjeUwdeQotgChXSuATigeX+G42\nCqibCqXTYGaCVppyNufo0YHPx6cpjXXs7u8zm82YlwuMMfT7PWblgr29PT549z2qqmJzc9MTim5s\nMJ1O0VozmUxYLBZcu3YN5xyPHj3yqbnUR9erxZyidwOdKKqqIi9SNjYHfPlLX+Tg0RHvvP0GH0jC\naGPAzs4Om6MN3n3nbX7my1+m38t58OA+sDST42wNS0jwYDAgTVOKomAUOhafjcfUdc18Pmdvb8+n\nQ8PgevPNN9na3GZ3d5fpbM5kMmE2930V0iLnbDpHZyl5v+c5E0NsoDHev1436ePs3r46SuCi1+M7\nEEe6d+3LpMWs4BDKsqToD5hPZ+xsbfpzyzIGoxHT6ZR5OWV8MmU+n/PZn/oMNbGbcWAvcmuWwDMQ\nIrhSAufkcudt2eMekgBYsSIYU3sIqYOmXpCkKdViwYcffsjLr7xCuZjTmBrrDEWe0TQ14/EpAPVw\nQJan6ESxWCwQEa5fv+4BOmenDIceyXd0fBh6FjgGgwFbW1ttj4JHD+6zt7fHcGuT8ekJ/X6fWVWy\nuTHANAts48uHHz64D6bB1DV3794lz725XxRF24Q0yzLqum5hspHhyFiL0posuASDwYijoyNm0zmT\n3Lsqg0HB1uY21/Z8kHI6mXE2mSGi6PX6TGYzD8nVitlsRm8+IB1oD71eG+hR/OfwHngLbNts1N+v\nSzEFTqEkQakYTzCtRdC1BHwJuCNRJrg/ZRuPeOvdd1DyPAfHRyQNnDw85Rv/39fp9Xrs3t4GdKhW\ndK1lGJ+fpxEYdJFcKYEL5NzNW0n5+hutxNfX2+gnO0eeZ5CmWLzZ/cb3v+/ThiHV1jSNp7ZSyqeb\nEh/c6vV6GGNYzEvef/993n77bV588UVu3rzJcDgEYDKZ4Jxjb2+vhSGLcuzsblEUBRsbG1RVxfHJ\nERsbG35fwPX9fZIkYTwec/DwIZPJhOFwSFkuAJ/ym8/n5LnvnBybjm5ubvrgYJqEdl6eBDWmM2O6\n0BjDw4cPeeGFFxgOh1hr2dvb4/RkTG/Qpz8YcXB0RFk3yzZsSlPVDfP5nNFggDUW1eKazivfxwGB\nzpv8q0VGWmuStq5rGXPQKg38Bg2JqIBgJChrYTAacXBwwNe//jWq2ZSmnDPKB3zv9e9z5+132drZ\n4d6jQ2zkEUgSbFOvFBM9K9wCV0ogyPmbdbFF0DbCjJHrxpJnKVVVUS1mJFmBShKMNdx9731vuuc5\nJ2dj8jxnuLFBURRYa9nY2gDwmYCypKoqXn3tFd577z3uvPUmt27eZHx6Sq/X47nbt1eOzFpLURQM\nh0Pms5I8zzk8PGQ0GnF6csJiPm8JTlKtwVp+/ue+yptvvsnBg4dkyU2Gg8L7tcHtiIHAfr/PcDhE\na00VTPQu/XcMaOZ5zllwV1577TW2t7d9WTMKi+Ps7IxEZ2it2R4GRiM0DsOjowMmZzNu3UgC1mbJ\nv7A+oJ1dxgdEpC04WjIBnTf9LwoOtu3GrJAkoBvb8iRqQ5suVFqYL3zz1nfee5ciyxjkKWrvJjef\ne4EkKbh//z6np2ftc2KbZYWCFU+8+qzIlRL4OOKWXPfLirQAJNLK9/ETIVUK2xiPaBMosoz33n6H\n0fYWu9euURQFk/HYz4AjTxp6Np0ynU7JiqKNTm+MNtna2mIxW2BSb8LGzEB0AbIsYzI+wwlotVwO\n0DSNL0jq93n06FHbYjzLMm7fvs3B4SPu37/P+x+8y80bt9nb2yMJA7ssy9Y12N7eBqElFYVl5D5m\nBUSEl19+me2dHWbzBVqlpFnBzu4+jXXeemggSXs01pKlKccnJxwenoJYXnrppUA75mdnpTsztvPo\nwET5IqDWZbAGIxfXD3QHfzTprV0u93iAZlUxpAm6cb5Fu/JdiyKk+Tt/9D0ePXjIKy++yLC/xbXt\nW4zHC2oOaPDwbL/h1VHfTio/BmChHwFZn/EvDkpZCfR6zhecCOCUhBZbPioc01fGeMrryfQM4xz3\nHt5n9+iA29MXcErY3N4mLwqcCLNygWssNza3qOuGhweHaJVAwK1bC6axvr9AeJATBScnR74+IcsQ\nfBHTzFqKPGc2m2GdCZBYRVWV9Pt9Do4PUcCLL77IcDhkNptxdHTEvXv3SBLPLLy/v9+a7ZFH0OCZ\ngMT5weqrAoXJZIxSitu3b7OxscnR8ZisyBBJyftDqsmM6bxkUTmOjh9SW59+fP/uXd5++23Qws/8\n7Fcpco9RUKGS1zMiSFt0gzQ4cRhrMM56DkPjSUO00pQBW2B9f3X/q3CtYldohaNpPKdiIopKGnSi\nQvZBQKmWKDUqocZ6oNODgyOa2nI2rtjZ2OP0eMbB4TGzchKelzDSxa3BhsPxOy4zLJ8KuVICa7Ke\nIjwHPrEQ2OdBeaXQ7UXYAl0AZR15kXNzMOC9D+/y3vt3eeHll+gPh1RV5c3QLOXw7IiTkxN2tncx\n9pS6LNE6D2auMJlMeOONN3ju+dttPcDWxgbzsm5rGJRSbGxstLz7W1tbaITt7W0/kI3xgceQF9/Z\n2WFra4vr16/z4MED7t69S7/fbzEJG1tb9Pt9X4rc61Epvy9jPGtRU3uacRGh1+tT1ZaqMaQkoDOO\nTibcf/iIw4NjyrqhXFTUgXK9NorBaJvjkyO+/d3v89WvfNm3TtdCrn25tqfz8FkY65TnZhTxkOP1\nvP+5QGKkfbcrn1s24g5KsHURwijN0oJFaA6jtUYrn004OD5lclYxyI/o90Ycj6ccHt0ljmrh4voh\nFQJKT3Ns4EoJfELV3Kaooi8qgHLLDr34aLY4D/7JdJ/PfOYzXLt5g9//5h9w584dPvv5zwdIcMrW\n1g4Hjw65f/8+tjbs7OxgQw1B7EqcasW7775LkmquX79OMRp4GG6YtY6Pj9na2moRfr1er8X8Dzc3\nPOV5aFX25ptvMhgMPBFpWXLjxg2++MUvcuPGDfI854MPPuDhw4c4EcbjMb1en52dHZRSHB4eMp3P\nSdOUzc1Ntja3OTkdYw1MpzOGgw1ENFXVcHoy5mw8Zb7wwbLG+X4EziqSpEeWD9jchrfffo/PfeY1\nslQ8FwMedBM7GDmJVlgHQmysL/l3S7LR+O4JRfH0Z9FFCNZUF8jje0DQUpH7eIP2tQMh7iEorAFj\nfNrR4K3A3d1rfOazP0Wi5nzja38PCAhGZ57Kmf6j5EoJfAzxfmS4u9HkkzDYO+tFJRADVXmeU4ZB\n87M/+7Ps7u3ze9/6Jnfu3OGll1/2nYRDIdLp6SkfzH2J7u7urgcOpSnvvfceO1ubaK158OABdV2z\nv7/HbDZjMpmxubmJiDCbeVqvqqrQWrfIvcViQTVfUJYlAGdnZyvf3b17t42iV1VFURR84QtfIMmy\nYBXMOD4+buHHSZKQJAmHB0dsbe8y6I94485bfOGLf4rJbM69++8zmcwwTliUDcYKxjrKylIbR101\nzGYl07KiqS1HJ6eUdUNe9BE0IhbfxDik29oej0tpQhNU0zH5u4qgbZEWlEDTGBZ1FZqweveuMd69\ni6QkCk8UohEan+3zOf+gN7TWOBTGCW++/Rbf/u4bFLnvZKRVgjGXcwk8zVYAXCmBjyWuM9ojF53p\nEkl1ctgtfYTzXX3jjPrcc8+xqCpemfwE3/ned1mUN3j99dcRETY2NkiUomma1j/f3NxkNpt5hVDk\nZFnGfDHj0aNHvPPuu9y8eZOXXnyR4+Pjtsqw24Irz/N2QEzms3Y/+zdv8PDwgCLNuHbtGmmaUjUN\nudbUVQXAxsYGk8CEbIxtrQbnHCkK01jKsmY2m5FnBWdnM2bTOePJlOPjU84mC0hSnNM40cwXNbNF\nDU5R1TCvDMb4wTaZliwWDVlWk6UaYxyZVhjVql0flHXiiT9C0NMrgXCdrcUF/8yFCkXnAtGHsZRV\nw2JeUZYVKIXDeAQjQtNYjFliETwHg6UxAbugfXSiMVC7ClvPqGrQktGENvImcEyKAozDXqQMnmIL\n4UoJ/DHEg0zknBnqnGfeRfugllYKSRLu3btHLy+4trvLyf6+Ly1uGpqy4uHDhyRJwsbGBvPZwtOP\nTSZtbCHiBLTWFEXB9evXuXfvHtPplPF43LoA3Wq/SHueZRnvv/8+zz33XEuCMggdik6Pjrl37x77\n+/tt9L/X63lGo6ZpXvhjfQAAIABJREFUCUSSJGE0GrWFTU3ToMKyqqxRScbO7pDTswmHx6c8PDjC\nOkVWJNSmxtiGsjLUtcMJlLWhtor5ogERpuWERwfHXLu2h7UVaZb+/+y9WaxnW37f9VnD3vs/nf+Z\nh5rvvX37dpd78tTdNnYcNyEPRCiWiRIRSwyBBx7IAxIPBAkJpCARIRBCYhACRRApmAQIAhHeHAds\nWQG12+2+t7vvXLfmOtN/HvawBh5+e+9zqvq2+9q+tqtwLal0zvnXGf7n/Nf6rd/wHYTl19z+l5yN\nG/OWpr73oa79n6n7L2cBVVVRliV5WVLWAVJWEMq08/jS4yuRdo/eo5QmtUacj/yFyIk0ZxWdXhdN\nSsfUDtTKit+CrzEk8fLt/xyf/nq9DALN+oTd2xgjIQZiazRaq87UUwMtGNh6nq0wUVMVBaPRiL29\nPU7OzthdrVgVOYPBkCovePjwITdv3iSxKXme45xr9QaSJEEZxWq+IrMJG4MhXIGdnR0ePniAc47h\ncMiNGzd49OgRZ2dn7Zw/z/O2kbe5uSnaAZeagnfv3hXhjFo9qAENLRYL9vb2KcsKkFKhKsVFWdei\nG0qJXuJ4PGUynTPc2ubRkzOWhWN7+wBcIC8qgrK4EHHUhqoe0Ias22MxH7Nel9y9/4DPvvEZfFWh\nYsSqIM32mr3ZcglihOaQBy4Fg2cS7qjqPkCkrAJF3R8R2/ILEVKFxvtQw5/Llm3pQ6TytWmpFsSk\n6DOITqMrChKjCUY2TogBrfQzkOEXYDZYrxddMv2PZT0LSW0cdWKMLS891pBRpUTi2iglTr/1Y5PR\niNViSa/TYXtzExUi6zrlXq1WzGYzer1eq+NXliWz2azNCJrOfFEULcvvypUrbT9gMpmwvb3NlStX\n0Frz0UcfMZ1OybKMs7MzkiRha0skxReLBcYYXnnlFXZ2dgBYrVbcuXOHk5MTjDEsl8v2kK1WK6qq\nYjgcsr8vysNaC3OuLEumiznfeestaW6GwHy5EEGSujsvjbqI81EafMoQQMxMUHxw5yMm4xlJIoKr\nPipCvGjs/V6H6eOQhM1Y09XlUVMeRAXBx7ZM8q62KXeOqszxVYWrChQBoxrGqLzeGkF4hujQhvoS\nCO1zC/F5r/x/+PoDBwGl1OeUUt++9G+mlPo3lVL/vlLq4aXH/8Kn+YT/JNYPg7JeNsZsRk1GqTYl\n9GUFIZAv13zw7vuEENkYDNnY2KDb7bJcivBokiScn59jrWV7e7vF64foefDwPqPRSGzG0gSdWAKK\nyVgOeBMI5vM5Z2dnbZAoiqINIk0qvbm5yc7ODnt7e5L69/v0ej0ODw9bK/QGdJTnuRB/ViuWyyWT\nyYRut8vBwUHbjGyCY6fTEQUjo9uphKu5Bs7/4N8phIA1qXgk6ITR+YTz8xEhiKzX5Vm/1lpgvUjT\nTscL+/PLKMLLTtDN1zZ6A0qbNqg0h775euccPtR4iKrAWA0q1AaxEKhIEkOv36WTGZQOJKm8FQ2D\nT3r4n2E6PkfrD1wOxBjfAX4cQCllgIfA/wr8NeA/jTH+x5/KM3zOllIKFS8srH1NHGnqxgsarHSe\ndWKJPvDhhx/yudu36W8O0VqzsbHBKi949OgR127eQCnFaDTi8PCQg4MDmRY8vN+qBW9tbbXd/+Fw\n2KIHvffs7+9TliWr1Yr5fH4hAFqz4vI8Z3d3t4UaN+Ifjc9BURS1/dmgzUCKQngCjZxYnues1+uW\n1WiThG63I5yDlUxAlrmwCvsbwrMXn4CntfmttaBS8nVJ2u2Qlh3m03O+9e1vc+P6Ed2uWK7HoAga\nTNTE6NoJhjEGU4OKNBd/92YFfhA9eDlIg5ChXOVp/KOkj1KJDHkQdaYQK1yIeBcJrFFKU7lA8Ipe\nzxNdIvbmBJrZkVLq48ECz/n6tMqBPwd8EGO8+yl9vz/+1QC/fo+lng3k9Y0VntGpIyqiMoCirDza\nGo5PT/ngoztSp7tA2unS7fXwRMbjsdyuGt7/4D3mixkHh/uCzZ/PAdrbOM9zhv2B6P8vlyL4UXfL\ne71eiwfQWrO9vc3W1hYhBE5OTnj8+HF7Q6bGtqWMqslBk8mkVSguipwYJVBMp1Ocr1itlzx68oTJ\nZNKOIvv1iDNJEjpJinOO2WyGrypiCFhz6fBeskPr9fp0Oz2Cj7jK8+EHdxidT8jXZYsVhIvb+7IB\nqdZabmr19GtyGRh0OQAYrbDmklFpPUFoMoXEGBIjPokheiqX432BUhXaerpdTb+f0O0a0o54NkTl\nqMo1PONQ9PEb5xNusD+h9Wk1Bv8F4FcvffzXlVL/EvBN4N+KL5gF2e9nhctvo6SuUddmVfXmaDaf\n3Po3KVzVHraqqmoXnzW9Xo9ut8tHH32EtZYbN25QVVVLLmoO7NnZGQcHBy30d7FYUJZl2+FvNuVy\nuWRvb68FBx0fH7e8g+iELXhwcEBVVe1BbjABjcBqc6AanYHVfE5RFISo0MqgtaWbZi0SsSxLysmE\nNOuTdCHTlsQoDFrm/1rhgkGrhKoqsVlKb9Dn8ckxH370EVeufh1jFTE4VO3047SrE6+nfQeeJQ4B\nT4mWGqXwTZlWW49dDiYCSRZNRaUjEU9ZrclrSzixWhNp9TTNcJXHJhmKEmPE2xBC3RC8lI3Ii8/z\neuifXZ+GF2EK/EXg36kf+q+Av4n8Bf4m8J8A/+rHfN0LYz7y7Lpcd1Ij4UQFK6IbYouSQ6KspXQO\nZSxFUVGWFUbbuimGuPj0egIc6nY5Ojri0aNHvPnmm/zET/wEN2/e5O2330YpRS8TktHZ2Rmr1Yok\nMezt7bG9vc18Pm+9ArXW7OzskCQJ0+mUYX/AtaMrHO0f8NFHH7U34O7uLnfu3MF7z3A4FFLSYiGi\np6lMKhruflmPBjudDjFGRqMx08mMyou9WEsy8oGyLCjWS3FH0hkmNYgEoFCvrdYsC4+2CdaIP+JU\nj3nw4CGuCmLV5qPU6miij7gQxb9QG3T8eK/CZ1WDUEEo3/XjYkOqUJHaZuxCr0AQ2pEYHEWZs86X\nNdZAHJ0Tm+GDjAON7ZIl2/Sz2g6twQwrRXgBy4FPIxP4Z4FvxRiPAZq3AEqp/wb4Pz7ui+ILZD7S\nLLk86ohfR3pf/wsRbH34jbJobYh1PY8RDcJlvubJyQnXbtzAx4DN0nZu75zj9PSUNE25desWb7/9\nNt/85je5fv06G7WqTTPu6/V65HnOvXtPmE6nHB6KwVMjCFKWJefn522fYNEfMBqN2NwUpZzFYsGT\nJ0/aKUEIgSdPnrRTikZbQFCGUir4GJnNZmxubmK0bRuQJ2cjfICN4U5LPNI1Ei96jw8VJiQi5EEN\nuFS1nh8Km3awWnH9xk0ePHzMu++/zxdvfw6llICBSrE4j144Pr8Xc7A5/MYYTN0klFJCXrKnAgSX\nkIbxwp1YqYjRAfE2jCRKAZ4YS4yxlMWa5XJFJw3QTWghhe0G4RkSUXwGN/D8rU8jCPxVLpUCqjYd\nqT/8ZeCtT+Fn/BGu3x+96ymySh35G5px88+3pBJDiBGbJhA80/mcD+7cYe/oELRoD169fl1Gf1VF\nMZuQdFI2d7a4dvM6v/PN32axmPPqq6/R7/fBizx5AxpKEtOOAnu9HkoJYWh3d1e6+9MZ09GYpDb6\nKMtSJM+M4Qtf+AKj0YjpdPrUSLARGXHO0el0cNGzLnMUIl82mU6JEfqdDTYGm/igmS0WgliMJYRA\nYhLKokDpFJtmGJ2Kk6upPQaCTESKqmRjMMSXK4JPePzwLh9+eIfPvf46vW6KUYrgS5SiTs2Frali\njdFoggChJgUFycZqw1HvvUwrfN2zUbG1bC+KkuA9l+v5EJwcfg1GNyaktapxDGSpEdOVeYGrCvJY\nAhGt4QXUF23Xp2E+8ueBf/3Sw/+RUurHkVP10TP/99yvZ22mnxWokM9ppgMCSonRyKaLRrraCMwV\nFbFpBx/BRZmVn5yeMxnP2N7bFry8MUzGIjVmjYwK8zzn1Vdf5Wtf+xrf+973uHv3Ljs7O+xsSpPv\nwYMHaK3Z3ztA1bDkpi/QZAy3b99m0O2xt7dHr9fj/v373Lt3j363i01TfN1ga3oSu7u7XLt2rf1e\nTY+iof/GIJnGZDrl/HzEeDym0+mTJQmbgyFnowmr9ZLKgaesR4UyDWiERXTU+FqLx7lAYizrMqBN\nCkS2tnd59PiY2XxOkm5KTR/BoNFaEX2UOX2dccGFlHeMjXOxaDIEpPnnqvq2r7MAbRQ6WHEZCk2p\nEAjRSWZAaDMIrRVKGaJQR9EGqtKTJRavI74GFLXbQ5sfiAa/l8X987L+sL4DS2D3mcf+xT/UM/pj\nXz+YAVxO3drjXvd5jE7AlUSs1JSuQitL5RUuRJSRm1Z5hKHiKmzWwUeN0glVVXF2MmZ7a4cs6/Lk\n9IT1cs1g0GM+ndLpZqwXK95/5z1+7Itf5LOf+zzf/va3GU0mLJfLuiG4wZ07dzg/F93BXm9AtyvN\nP60149GE3/7mt+h0OjWVGK5evca1a9cwxvDo0SM++uguB0dHZL0uaVcmCk+ePKHf77cNyH6/T39j\nSLfbxXnPxsYGWdbh7OyM+XTFg/uPRE3YBcoaUbhaLsjLCpASJ0mkWVkViqxn0MoIwi96ghcMv/cO\noxI6vSHzxZgnZ+fsH+0TfEHpHL00gaikMWc0VSifSuu1MkQl/H+RFNBEDD4oilKEVkwic/+owMdI\nkmXQeBcYQ9rNUEhzJ/rmIKt2GuGJNb04IVpP9AXGCpApXkSij91Xz3MpAC9hwz9yNUjAyy+vMgk6\nCrBFm5Sy9LigMGmHTq9Ppzeg0+mASliXJRFDXhWs8xXBRb7/9nsMt7fYO9xjPJqyWiwkhU9WBB/J\n+hllWfLuu+9ycHDAlStXBM+va4HOtMOtW69wdnbKhx9+yM7ODru7u/T7fcqyZNDvs7u7y3Q65d69\ne6wWi9ocpNeOCL/0la9w9epVykpwBOvFksFg0KIWl8tlW0IYY9C16lGMkVu3blHkFbu7u8xnS6ZT\nsVdr/AbKsqTyJY8f3QNgsLEhtu7B147EFhUDAYW1idB5daRyBUVe8e3vvMmVoz0So+l1bKvhmCYd\ninJNoEb6RQEWRRQ+ekItOhprM1ZrpEcRaBqJkqEZg5QnoWnsxbaX0HoQIKVeA0AKdRCwxhAJdDJD\nWeQIvtlCdC8kRgBeBoGPXR8rEPkxIx8fA1UZ8Eqzs3/A1ZuvcnTlGlvbu/S6fdCGRycnTGcrRpMR\n773/DncfPqYqV7z+uc9y7ZUbHB1ewV69kPpudPcb78IQAm+88YZAd2sU4GI64+DggBuv3OLWa6+2\nVmb9jugIANgk4erVq/T7fWa1PPgyFwu0EAKL9YqyKp5yHk6ShLOzM8EdIIIoy8WS0WjEYGOjlj8z\nTCYTrBG35I1hn6qq2NwScdO8ylFW0vHeco01sFouKF0gaoUmIUklQVYxiIehjxjViH9a3vzOd3nj\ntVf40hdv46oKmyUYIsHJ6NIkFk+sR5SRBrHbNPkSa4gppJ2CpCyekkdTlw68ChGPgig6jEmSEP0l\ndOOlpqOONVdBCb4gtQndLJM98YkO//MrLfQyCDyzPq5+a1WGuDAa8XXdWPhA1u2ztXfIjVuf4cq1\n6wwG21hrmSyW7OxZVLbAG0v/5JSdoxXXDvf4/Be/RCfrCaBnU+S7t7d2Wa0XjM7HbG1v4mvm3vHx\nMYeHh5Rac3Z2RnSe4+NjSu/43Oc+R6fTEVgxqg0Co9GIIs+Zz+ctkchay+7ubotAbPAJ1lrKtXgb\nNBDc0lXiUzDcYjqdUlYVJycnZFmHRvMweBiPx5ydnrPKSyLia+iHfSoX2dzaqtmCgaJYkxVdOpmm\nyNfEKMIfQuKR9NtoS783YDYb8f57H3Lz+nU2NkSJWWnVTlRCrFqpcG2MTGdQ0uVXoC+ZjFweGzZZ\nXajHiaa2gvcutKxLgX7rVklZSVypeQQQa4dnV5VoFWgyCZkUXtKdeIHWyyDwIwJ0fBYKGmXT+Bhl\nDp5l2E4XbIfcw3RZUcYV1iSsq0ARDMvSUwbD4Y2b/Pw3foE3Xr+FtZ7FTLQAyqKi0+nQTTPuP1i1\nFmUHhwIHPj4+JssyXnvlFQAW0xk7OzvMV0u+9/bbHOztcXR0xOHhIX1jmE+m3Lx5s934VVVxfHzM\nZCqYLWstW5ub9Ho9QEBFTxYL7j180MqVWWuZTCbs7u6jalWhoigIQZSLdnZ2KIqCk9MTzs/GtWxY\nwPkKrRXaBqpqLcrAQbMx7KOVJ/gS52KtNKTpZF2itoiIiCHLuuzvHfHg3mN++5vf4hvf+DNopfH1\nbe5DRQiS1oeo8PGy+rAcwaoqKaoSV3khDAVEl7AZ2elIaiwRCeauFO5AYuwFFVtZ0LUpS1TSMPSO\nGMWbIK9yBr2ezC2D0KLjC0oiehkEfh+rcZnxAFqhVIJRKSbtoozFeYWLGhc1kQQXoCISSHFKs8wr\nesNNdg8OOTm+j0JunHe+/312dnYY9LpsDDa5fVs0/1frJdZarl+/LkYfiwW3bt3iYHeP2XLB/v6+\njBaLgrfffpvT01MGgwEHu3utklCDTEyShOFwyPb2tjD/JhPG4zGr1ar1Mliv13S7XR4/fsyTJ0/w\n3pNlXba2tlqyUwiRsix4/PhRm2L3B128i6xWK0jk58VSSpR14SnmMw6OrpCkGZPRHK8M6AzvK0LI\nWn6EIpCYDoMeHM9nfO/773FwcMAXbn+WLNU12SeitExgROnHXzAG6/rd1WSihoHZ9DKg0YKgnYwU\nRXHpdwttKRZCQCuLMjUDUbjNaCXiK71Oh1/4+Z/j7777fdkcL2gAgJdBQGq9T0juCqoe+WgNWhFr\n6avgocw9ZeVxXlEFRVlIs3C19hTOo3RKiIrReEbUiqzbxRcrqlI2XJZl9Hq9OsUVw8/1es2w9inY\n3t5mdHbGvXv3eOXGzZZw1BsMxOykBhIdHx/z6NEjDg8P6WWddmMvl0ucr54SHt3b22uFSTqdTlsa\nHB0dsb9/2GIGhsNhSx/e2Nhov8Z50SLIshSCsAnLsmQ6X5BXOWmayE0JVEUu2ct0xmI+pzuwYt7i\nHIlNBW0XwBiLUikbg03KYsVv/MZvkmjFG599lagcSSomr9Kj0RfmokGUn13wF8IhWtyGo4/4Wo5d\nK/Fm1FpTIbBtQUaKJgQ+4ku58ZM0lYATxCY9KkWaJYzHS64cHvBnf/HP8Hf/9n8L1BwFJepHL9r6\nUx8E4FklmB++2tukcdOtm0VlWTJbLhjOlwy2KnQSicpTeYVJUozt4NdrtEmYzmdok5DYVKDAvR63\nb99uD2tVVZSrXJh8ZdE6/m5tbXH16lWcc5ycnDDYHLZw48Vi0fYFQgi88847nJycsLO51eIE5vM5\nebHm9ddfb1WIer0eIYSWOLS/v992yItCKMFJkrTIw8Zh2VrL9s6WPNdCDpErXfv7NCCbdVESoiZE\nzXh8xrVr19jZ3mQ0nuLKAmXrxloNI5TRpMa7SLc3xFrD6ckj3vvgQ46uHJB1bAt59kQqJ5RlHwCl\nUTWe/9ks4FnyUYwXFGSgJRM1ehAt96Bxi1KiSWC0JlSOUDn6vYxumsnsOMZWVOZFXC+DwI9YLVDo\nUm+g2UC+xqIXZQnL5YVxh1qSdQZ1fSqNum63y3SqOTs9J7WW0O0y9p4kNSzmQgnu1jBiP69ECLSI\nAu1NxPB0f3cXYwynT46Zr5bs7Oywvb3N7du3uXv3Lm+99RZJkvDlL3+Z7373u6xWK87Ozjg8POSV\nV14hEjg9PWVjY6PVDsjznCtXrrQKxWmW4b1nMLBtyixinY7FYsGDBw+EqmwMSim6nY5QqZOsFT/p\n9TuEKBJlLhq0TeqJScrR0RUmkyWnoyk6cXQ2RUgksWnrdZCYTAKQ7bA53OHu3Ye8/tlTbr1ynbzI\nAWH7xQBV5QghkqTCxSidE3XjmnnY4AlaQVGtCUERgydNLMRAWcrfWxFbNKbVmulsgtaa1HZZrUTU\ndb1esbO7xauvvlrTomn3xYtKJX4ZBPiEYI7L3PTYEEM9BgtRPOobFR6b9liv13idiNhlK0Ainner\n1YrManq9DvPpmslkQoie7v4BNtEXI6xG9KKGv85mMwaDAf1+v8X2F1XFxsaG2I+Nx21q/6UvfYnp\naMxisWhViyKh9RLUSjEej9nZ2WF/f78VIikKMSoxWppkja36cHhhmXZ6eoqrOQrNbZmlnVaLcLFY\nSHMxiXSSDihL1umjYiAxms/ffoPFt75DUXryfE2adAlRlH7SpEPwFVnawVUKbRMm4zFvv/0eg40N\nBv1uDRk2VK5CGwsqkCYZeVHVhqJlmwE02UwT0EJwrVxaMxZtfscQQ6vspJE+ymw+rXsjGcvZnBA9\nr756i5/92telp1wHmhfx8DfrT30Q+MQVXD1eMroJ/iIt5qqKa1du8uR82d6Yq9UKm3Qh0W2zqkHh\nLRcLyjynv9WVgxlKdna3xTUoBIILNb9dmlkNfDetu/W65hykaYrNpKS4f/cuZVnSy0Tk472338EY\nw9bmJtevXaMsSxbzOcuVKAWlacrB3g6d+vs0GoT9fp+qknQ7z3POzs5aNqJSgmUYDgVBeFqbm1If\nslgHKu9kVGitoXTCyLNJRpolxAiz+YTN4Ta7O1s8ePgYowcCBQ6aJEkpy7yeyYEPkCU9UAnvv3+X\nwytXuH71CtPpmBjlYGqr2d3dJet26Nd/r8VC5M2WyyXz+bzVMdDaYq2mCoHJdIwrRQQFJGNzRdn2\nOWw9Iel2eoLZmIwZTUd8/We+xs/9/M+yvb3N2dlZuz0+Dl7+zAb6A+7QP/r1pz4I/EGWipfUhDTs\n7e1x79Ep63xF18s8IKhA5QT2ClAFj9ai+1+WJUUhsuDrldB+e70Oqq5Nk8S2dW2j6LOxsYH3ntVq\nxaDbI01Tsm635foDlOtc/A4XC4qiYNDvMx6PUUrx6quvMtzc4Nd//delix8E2Xewytv+wN7eHsNh\nh8lkwnw+b6XCGsVhay3L2jtRrMj7lDUG4Skqb5TgmCUiMmqNocxzUGJ8OtjY4tr1K4ynU2IQKfJo\nTI0m1EK8CqLuq9IOve4GZ+fHfPDeRxhj+P533yJNLUdXrpCkBh+hu+own0958uQJSWqpqorRaMRo\nNGrZl9ampKnFu5LRaCSwbnlFJQhUFZWrIck1TqDJyLz3XL96lV/5lV/hs298hne+933yXEqTZjT5\noq6XQeBHrBY9WL8TQgDvcdHJZCDodsy2WCxIenOywSauKlmXoTUxzUvZMEopHj86pt+9RjczolcX\nUyGjKEVVlU81sppAEEIQVxyl8NIJo1zn7XitofGWZUmWpvzY7dv0+33u3r3L8ePHnJ+esrk55Ks/\n+VP0ej3KKufOnTsMuj3mkymPHz/m9PSUJBFpsiRJ2NvbawlGnSzDaE0MgSLPSbQm290VEZGyxGrF\ner2mqsqWm6+1JjEaZRRlWaBtQggRhaff6xK8iHOUVS5d/AiJzYQLECMog3MlJknJuj0mswUqWm7d\neoXFYi7WZpXiwYMHbO9soVRkMBgwXc6E/hwcNjFoI4c4Xy0o1gqbCDqwUWEKNVgo9nqsa5dmYm3b\nFmSSMp3MWgr33bt3BTiVprRCo8jvy8vpwIu4np4Pho+J6Q13QGpAh3MNe0wiQ5JafvynfoLf+ubv\nkpdrzsZnQihSCT7WEtl4XLkkLwr+53/wD/gP/4N/F19NGQ6HnB4/4f69j9jZ3KqdbgJKg7WGLEtb\nqfArV66wublJJ8lqMouUBsvFgrIoWg3BTpry+OFD+v0+25ubHO6LVFmer3n33XdJkoSjKwetlkGS\nJGS1C+/GYMB4POakxhxcu3aNDz74gO++9ZZImW8IDHlrY8itW7fY29lmOp22EulZJ0HpSNJJRHLc\nRzwBYw0uOLq9HuPxiP2Dq/y5f/ob/Orf/5/Y3j5iND4jsR22tvbkbxuAqFDR0s0GsAmnpyd863fe\n5Od/7uv0+1OhOCthNy6XS3yM5MWKyXQsDVrvyDqpSI2HgOmqttTp1C7Q1lrKUNHt9RpHOcnU1gXB\nR5ZzCShJkvDRRx/xzjvv8IUv3n4Kiiy7SL+wUIGXQeCp9TGqwroRE5GPBUASRDMgaDRaUtODA3a2\ntjg7P2cjaJyymG6PEBvx0QpTN/wWyxmn5+dcO9xivZqho2qVfysnzbask5AVCVntMnxZYqxR940x\niL9AXdc2VmFJLTwCsFgssNbS7/eZTMbsbm8zGAw4Pn5MURRsb+2Sbm3R73SZLuYcP35MbLr+wGw2\n48qVK1S1Rdnm1lA0CddSBkynU2KtviOTEE0n6QjlNk1ZrwuyJKEMkJgEYmC9mlMWS7zSdNKEyfiU\njY1dtFbk+RpNgwOoSUmVF2ViY5hOpyQ1L2K2WGCsoqxyMm9Z5ktsMgAlo9bU2FZoxdXGIs45tre3\nKYqidWvSNf24KfE8EV1V+LIUe3XvWpXjqnRiv5516XakDEPxwqIF4WUQEF35Zx+8xBVqnHdbNqFW\nQieNjtSmVGupGz//2Td4cjbj13/j/yW6iLLCMVBa41xF8CVWyZhKKcWjx8fcvLLHxmCTjrEoDb4q\nIfeUVcRaQ5ol2ETXo7OydQTSNbRVa8tsMmu5/qmRUWJjud1NM5kGrJYYBcV6TWYMnTTlcG+f+WKG\nip5VrSCsrSgI56WIfYQQmE+lh7Fby5hJgy8yH08JlWsBRdPJGWdnZ2RZRr/fZzjcZDKdo5SWSFpV\nJJmlyNesK8fjR/fp9HpcuXLI/YdPiMrhfEm5dCRJH2tSKYeiQxHw0RHxTKZT3nzzTTY2hRHZH3Sp\nXEEksFzOGY/HpJn0KwpXtI2/xjtBa02v28cmGd2OBMpuVus4ugplLUEporaUwbN2FUoZZguRaUts\nB2O6ZP0BZVWCUbX5zNOgM13vn/AcE4ea9YmCgFLqbwP/HHASY/xi/dgO8PeAVxDxkL8SYxwrQWD8\nZ8BfAFbAvxKEimF1AAAgAElEQVRj/Nan/9Q/vfUUa/Bj0IORC2KRUgoabLkyJJnhyekJMUYOdg9a\nS+tOt09BxEUPUYAoRim8E+DJ2dkZ3W6XYj1HmYRer8dy7lqDEW1oZcMbQFIz3tsYBHSSCNElTdvJ\nQ7g0C29qWW0Ubu2oikJYbyHKSNNqBv0+iU1J0pT1OsPHiDEao2Axn7KxscH+7i7z1aKVLENFijzn\n/OQMg+bo6LBFNA4GA6rK8ejRI6bzOdZaBsMt0ixD9UWAtUgK1GJN5UtGZ0t+7p/6Gt/+zvf4zpvf\nQ9sB1nZQmPZ3ijGia+ZfIxYyGo0kaIaK+WKKsYr+oIcxRrQSM8mgXCWN1khosyejbT0ytNj6RTUi\ngIirSyKMPFdfC5WE4KnKku5hn93tA7RNat5IKvoDUGso/oi99ZyuT5oJ/HfAfw78nUuP/Q3g12KM\nf0sp9Tfqj/9tRHPws/W/ryPCo1//tJ7wH9v6IQE8hCAilUHhlTAI799/xP/1G7/JYPuQ/f19QJxz\nVWpIlRX7LVfgg6Pf7bJanBODe6qrvlwuWwuyGCNl4dDKtLP6hqe/XC4Z9tckxggfX4tklzgd1eAm\nH3BliatEdNRqjVYiiDnoi65/N83oZglaCS3XGoVBYY0iSy0hJpS50JO3N4cCr62kVNnd3MKvJSit\nl0sWs1krcTbc2mJ3dwfnKqaLOeP7U7lhuZAbV8biAJMmJEbxxhuvce/ePU6Op+zt9wihwpKgojQi\nIxGjNWnSIU1KQi1PtpwKCtIYjdKwVZcqGxsbrSBqY0rSSKY1fYAkSTBK9BOLXMxc83XBfL58SsPQ\nWovzAaU1t27d4vXXXwcFoQoMhl0pW+ogRYzP6At+zAZ6DtcnCgIxxv9bKfXKMw//EvCL9fv/PfCP\nkSDwS8DfifKX/CdKqa1ndAdf2NUg0bSSGb4PgdUqpywrfvO3fovPvPFlhpvbVAG8URChLGsab2LQ\n3lNW0rDyNRJPKemqP3j0SEZqVUGaZjKeq1xrCtLciuv1WpSGjSW1FmqCkFGKKkaCczKiC54kSUis\nxmCoCjE7HXQTitxT5Mt2tFhU4jAshB95v8ilBIi+agPAxmBTWI8+SGlgZft0OoJPKMuS5XxOWRUk\nxoAPrJZzfF1SCS7C0OlqutbSGQw5OXlAxHL9+hHj0YTVcopNenJQTUew+zHUQcSS1H2ByuUopbCp\nwrmK4ycnPHz4EO+rFiqta+WgoiiYz+ftyK/T6cikJUZxXKonMnlRtkFDRrUJKkhJlXW7fPWrX+XW\nKzd45733atWkpEWS/rCj/rxnAfCH6wkcXjrYT4DD+v1rwP1Ln/egfuy5DAI/ULNdjI4vvb2I9DFA\nUCJFXXmYzKbYbJNuf6Oe7Wu8F3HR3FW4Ug4fsSIzUJU5/X5X0lnvcVEMMzcGQzaHA05OH1PVKr8N\n1j1JEqxNCJU4GVdlQV6sCS4hrfsDpfe4soAYxcUnKoKOFOuS0dkZ48k5WmsW0/MW2ddMBxpknasq\nYlURq4IsNfhqzej0hO6gT2o0xWrBbCKWaL3egEG/15YqRqv246xjGfb6XLl6VNf1NQlHK/J1QYie\n5XrNcHuD4/MRxnY42N3kK1+6zVtvvYvz4LUh7VmMsYQgozeDQiG8/1du3qxhux7nKypXoKxuXZNi\nVFR1OVBVHtAkiW7Rg42BSaohqxt8ybrABWmmNhlF6KSs12uuHB7wjW98A2MMq+VcpMoaGDlPC9DK\nvnr+tQWb9ak0BmOM8fcrG/68+w60jZ06GDQvqtBZ5fHKK1bripjPuHGrJ3NuY9CJZVWWFMUKpaQG\nX6+XVHiMDuTrNVePxDwkRs/cTNna3SHVikF/yMLP0D1BGxZ5BYjLkKtn8kVRYLUmmISqzgRcUaJU\npJMKem9drBmNz5mMzhiPxzhXiv/h1iYbwz6ZzVj2O1hl0YlmMBiwv7tFv7eBMtKMLIuKx8fH6ODQ\nSINve7jBwcEhSimKXLIZvSHz8wbuDH1AjFJL58QPIa9YN7j/EMjSFO1LDna2yMsKpTwbvYRXbh7x\n8PE5REcMJdooEQrRkGWiAzgdn/LggWEwGOB8QdZJUToyPZ+148IG4HNZUCRJTNtjcc610mqhGffV\ngaMBCCXa4I0Eg5s3b3J09Spnp6eU9aREVIWaAfLzn/b/sPWHCQLHTZqvlLoCnNSPPwRuXPq86/Vj\nT60XxXegLfXqlM+FiHYyJYhBodDs7R6xtbFF6T1ViHik0+1cTuVKSS2NJlQFk/mYxMKNm9efQuMV\nZc5qJkYk6/Wa9aK4qKO1aPnHEAje46uKXClIRNPeWgsx4rxjul4xHY9Zzqfcf3CP87MTlIbhoI8m\nsk41IRQMun1cKMQZiMBsOub87KTVCSzyEpumWJNy48ZNdnZ3qUrHYDBg0O0wnS3QBJI0odfvYjaH\neO95//33+c53vs3773/IaDSqqcXzNtvodftglECeteYrP/1TGCuaDDbpsrPVZzKeEWIFoYIg4qRo\nSBODIqHb7ZLnOTFGjEUkwq30VsRePWmnJ3Lz0waEJvNRSrVTlLL2eHSVR2Poplmb4YTaWDXtdDg/\nP2c8HqMTQ5rZH8AJPB0Mnp46NZ/5PJYHf5gg8L8D/zLwt+q3/9ulx/+6Uup/RBqC0/8/9ANkqRon\nANrIhvz6136C3b2r+KBZlR4bIueTOVgwCvKqrCGpawgli9mEP//P/CJH+we4en6dpinr5ZLz83N2\n93awNmkbgZdJLlVZAnVAch5Xq+52sgyVGGbjJY8e3mcxm7BczFmtF/iqpNPNEM6jZzWbElwP5Tyw\nQTfLRKevKpiuhNcwrz0IXv/MG9x+4zN89o3bALz15neZjUfkecHZ+YTHjx8znU5JM0uZ50ynE05O\nTlr/xBgjWZbRtQoXFZ1OH62E+BTWjhLPN//JbxExdDeG9HpDst4mRhm815IJaKEb++hxrmxZmc45\nvvKVr3B4tMfJ6THjyTmdfpfBYECSSPPPGAkGZZm33Iz2lVSiPqyUIjaW76uc5WLd4i1sosEZlIYk\nS1kVawpXkqTiJ6G1OBgTQWRHanmxF8eBDPjkI8JfRZqAe0qpB8C/hxz+v6+U+teAu8BfqT/9/0TG\ng+8jI8K/9ik/5095PdsEuPzY00uhKCtHgtSqP/6Vn+Snv/ZnmE1z7t1/BHhKHxlueCaLGev1AqMi\n62pNvl4Anq3tTX7mZ79OklrmixmJFjPM/BIGv8oLirrhaIxBWUmFq5q155xrDUUaIIw24nX46NEj\noq8gBrpZhkoTMePwgXKd0+91yNcLYlUQosNnHTAagxLeTgx0M5lG3Lv7Iffv3uUf/sN/yGw24+x0\nJCo88eLWzfNcmpe9nmAbtOZwdweFr5unQjzqdIQyHEIg29sm63ZZ5GvOphPSrIP3Beenj1FmjDI9\nCqfYP7iOHQwoqorgHc5X+OAYbA4ZjU/p9HrceOUWSSfl6NpRTVwSBSLnnBCavMfqDokxFKVMX6oa\nJiyTGDEuaeDdPlSEGHBeph8uBKbzOTv7u3gdWJYCKzaJJWrhkKj6+IcXUmHwk08H/uoP+a8/9zGf\nG4F/4w/zpP7k10Uob/o9WmtiTThZrNbsbWxy/carnJ6cM5utUcrgXMG16zcxZ084m5wSfUVRFaSJ\n5vx0zqCf8Zf/0l/my1/5EnmxwipNVRQ4X7KxsYFRsTYzkdvfRaldfT3a6na7Uj70xAnYFbLJHz16\nRF6sGY/O8L7CAFEFogsEAgQoAwRfoRBCk6tVjUMlvH+bmDa9bTANeZGTrwvy0lHmOSp6Bh0R47Qm\nZaPbISJd9NQKUMkHERfppF3x4oi6Hck1K8lSbJKxs7tFf9DB+0AZoFc48lIxX+SUuWc5m7K7c8Dt\n258lRk1/Q+jMi+Wc7373Td577z0ms3Om0wlJasg6KbPZBKibrvW41TZ9AaTz77zoJIp4SkFZCXow\nugvD0tVqJWYq3lMFh4uO0ldUeKKWTLB1pCOiX7Tr/9L6U48Y/FGr6QnI5jCkWY/oC7a299ndP2B0\nNuPs9Jyyitx87XUOj45IugnvvP82pyfHJJlmNptxsLfLz/7MT/OlL/wY9+/eYXtri1h4siTBVTUN\n2Ki6ps0E9JKL/l3uI2maoaC1CsuyDKtM7WF4zHg8Zj2fE4KvyTceQhTHXIXYpfnLvn0ixZ3nuQSB\nesqgNDWUVrT4ut2MTqeDGg7EVSlcWIU3Ogci9e3wPpIEjU0MWZbIiDJJapRj8tTPsUmHYCJKB6pK\neimlV5SVotcP3L33hG6W8Yu/8PPcfPWz3Hv4mO+/8y53796lqCrORxOicgQVyDopLgSMc/T7G2gt\nqkC2DmrPYkJtDc5ytVR7WYmoiy9da022XIvte+FKZssZw+1NcldQBDGe0VjCpVbWi5kDyHoZBH7E\nkjOj6mggZhlJr0Ovs0FVRUJQFFVFXnh6vR6bm5tgAkeH+zw8/pDgKjKj+dwbn+Gf/+W/yGw6YWd7\nk9RoQiKElzJfUxZiMe6c3MxASyduG1l1CrsuC3Z2dnBIk2tZqxq5WidPDqUg3SJiliqq2AGtLwBK\nzU1ZVVXbEW+supqA06TV7bjSphiryWyCVpAmCmmLpYToUSG2z18rT2IT0sRircHWgQEQ5KGr6CSa\n4CuKyqODRquEzX6XreGQv/TLv8RXv/pV/oe/979w595D5sslLgTyvGC5WBEQGPDNW9c4ONjHqEiv\n3xXyUPRQP3/nHCH6NiNp5MpVjbBsei4xCXjnCMHjgiPtZqS+JOmndPsdVuWKPBY1EzIhidL4Cf5H\nB4DneWT4Mgj8iCxOUfve1aXAbL4klIrxW29zPlqxt3/Ek5MzZtM5V67dYPdgl9Vqxfb2Np959RXu\n3v+QvCr48L13+a//i/+Sw4NdPvfGa1y/fp297V0G3R7jfM3p8Ql5ntMfCCa+uZFanTsv8tlV6Xj8\n+DFpmnK0f8CqWDOeTAh1wDCNNXorwR1rOWyZ1ysfQQUpGbzIZAt3Rl0EgYBgBuKFO4901iVAGKMJ\nUbKYNE2xVrfAoYZt1SgiKcRi3JeVvK0stSQg2loIJfl6LnwJM8AoWOcFO1vbvPXW9/jOW+9z/8kp\nNu2ytbnNuizo9TfR1uJ8xWw+5u79ByRZRidLmM7ndYlVoULEWNWOBRWxNVBJ064wO50jL6XhGL0n\n1tDh0lWk3YwqlFLWqMhsvaDC40NBrAy23Tctx/TpfdX8V/1AePqB52a9DALwewaC2EJBNYoE7yPR\nw3K54PR8xOe/+GVGswXH73/EKs9ZrlZkWUYIngf371LlayAwm4z47ScPSazmd765yf7eDkdHV/n8\n5z/PwYHQZ429mGlba1Fl1dbpTTYQY2Q8GmGtpZd1mM1mIleWNoSbCwtvjEYHhVKxHnOGVmsv+Eiw\ngViPzRr0YnvglaXyRSv0YYwmRk0InhAj/U6Xbrcr6LssIav1DFQEVGjRjWVZ4l2kdBWuqNCVblWB\nXCgo8pLgKjRGSgqnMDplo9NndHoGts/hwRGr3JF0MryyLFcr+oMhwVdUVYkrA2dn52xvDolIA1Qy\nrFyeb03lTupMIE06ZNm69RXIa15GcA5VbwSdaHSqQEGSJXS6GZ6AV5HSVxDXWB/4WP7wx8SE53m9\nDAI/ZD0119UClAkxUOQlBEtiMw4Pjuj1h9x89RVs0qXT7TKfz0mzBBUj4/MRgYpeJt3pze1tjIm4\nvODRgwe8+/13+ce/9o+4ees6r732GptbQ65evcrewQExRlbrvM4KoCwcwVetfFae51R5wWQyoaoq\nstrGTPhbtdZ+UG3dGqkl04NoI1qlUV5RBckEQqzn6IDSvjb6uLDkkjJB5vHGanxwGKvp9zp0u1nr\n3iMQWnkeaZbUQSBQVlXbrfdegQ64skJp4Sq4tWexmLEqFIOtQwb9DTZ3r3I+LSgrz97ePuu8ovQK\noytxHXKOXn+A0YrZdMH56Qmr9RJXlKCa0kh8DFGNA7HAqNEaF2pdiAZMZDVW1zDs1LBYz/EmsrW3\ng6l7Gy5EXHAQFCmmJm3wwzUGX4B+4csgAD/kRXqGTxwRj5y0gy8U0/mSs9EET2Rv74B+b7OV/F6u\n5swXU2yiydIuvioJPuBcPU9WAas0gw2RCVssFvzu7/4uRsHO/h6vvfYavcGAGGCVyxhuuVxCiEL5\n1Zo8z3n8+PEl/bwmnZdb3/tQz66pjTqgkfWOKIrgMTFgsQTtSH2KsaHW96tNObW0QsDX/QXd9g5M\nXQp0OmmrQShNxwtVpKYxKOi92Jp9FGVOCCXGWMr670KsQEWsTcmyjL29PeargtFoRNrbbOXOyxBR\nakVwjjTrCnKxFCNXlLAEdcdgFBClvje1l0OjAamj3PSWDF0TiuT3FZShsRqTaNZlzny1xGTiJp3E\nDJSoRQUNXscffuNfzgZ+ryDxHKyXQeAHXhsZ99R3YK03cLG5v/iVn2Q8XvO9t95hWZQoEg6vXGOx\nWDCenJMv1pyPTzg/P0dppDZVER9KSucxoTHE1Vil0UTSNJHRVVly/Ogxo9MzbJYyGAzawzabzVrY\n8mKxkINPJAmGGLwgFH2JQ0ZiRtUWWvVv1ZhrNP4GMQYCmoAXLgQlxuuWFacNbX8hMQpjFK4KWBMh\nrTMNpYhayg5V/yRd4xd8JYq/GE2MAaXAWnFm0hbKMoibUKIlW9E90q5huvCs8xXj8RiTbpImGefn\n59isw9bODkYLiUsZA1qJ54A22CTDKiFbWRNFqDVUEgSM6EYUtfpSWY9cnXNt+ZNlGcHJGDAq0InB\nqpRYLGvtxSGrMscTRB7BRFSWPL11JKW6+LA++KHJFj52v/3Jr5dB4JnVDJXAALJ5tTTbiTGyf+Ua\nDx6+RRk8PojC0Gq14uTkhA/vvE9ZrfGhYjweoaJw2XVjmakgIk470m1HbnYuUm5Ty4w755jP55JW\n10AbVW+qRtpKB08F5MVKmldeMAAKL+IYTTpPbbEV5GerGuGGC2250JCi2p5EUIQ6EMSosQGMUVSV\nw5YWlwiqrixcPfaTDCEGatbfRS+D+lk0jc6G3++DISDQ6SRV2DyyrgpOziYMt3Ks6mATQ3Aly/mC\n7e1twUpoTeE93U4HnyQUy5zgRUwlxkiaZBAd/cGANE2Irmxp3B7xkdRai2JR/b6KYsOeREtQgWgU\nQUn2sbOzw3A4xC8Duc/BKKKxKKvBgJY2S/27Xk4Nau/DZwRHnrf1Mgj8iPV0Fqf4zd/8TXypee21\n18jXBfc++pD7d+9wfn7O+ehMsOwmsFoJXh4VUHh0HUQuy4+bminYoNUu5tryuY0zbqOO42rYMNTO\nR8RWZqysKmI9BnPBUxUFpnbY0Ze4Dz4Gog8oHWUiUP8spQQtaLU8J691+7tLbQ0+CH3aBU9RVdiy\nYJXnKGOIqULpKEw/Ddo2/oL131HVYic1e887meU77yEJKCvw3F6uyZLAaHzOjVsHbO3vsipKZosZ\nxhjy9ZqyyAkKrOqJdJm1RCNTiRCk76BVbEuXCC0+IcaI87UBacdg6uAbnSe1htw7oo7EOhsqXEWv\n08HU8OLMZPgkErTBKvNHtu/+ONfLIPAjllKgrMFVHoj8wp/9eQ52r7O3f8AH799hXpNjdvd2SNLP\ns1zNufPR+5yfHwO0t7wmtAGgaTq2N3p9+H3jUVBvzGZM6Gt+ATXKT75fbMsDU6vpSj9AoKwXTcIL\n0opug47YZsUQ0PXnNDgAF+XmcpXHRA061uIc0hjUpWvHlmZdsLBrgTpXVavVnyWGqHWdclzAaNoG\nozLoJBOGZVWinHxGmhoGG4b+MjCeTTk63OX2l3+K6XTJbH6X4B3j8Vg8FgZdkkRTFIHEapzXeO/I\nUplUlFWOq6R7b5TBaEEMVlUljc3abamxc5cMIsHjUdYQlDRBXfQMBxsk2kAIpIkmGE3UVkaE/mKf\nPI+p/idZL4NAe1XVafGz/x8B5+t6T26zBw8eMBgMSBNDka9YLEWwoihzFosZo8kp+WqJTeQ20arG\nG8QWtSO3jwKPdK+lNhUUuo+REAMRRZpmpN2Mo6MjtjaGdQAQgMt0POa9995pHXeUqtlyEaxNcb58\n+leJkvL7JkNRCqskAEkqLzbcocYGxBDqWkLmjjGCi1JTkzfZhW7l0FMrTbaqaQjqKM5MqgkAYIzG\n6joQGLEXV9ETQiRVCf0uHB2mTBYPuXP3PbpbWzx4eJeyKjg5fcJqscRXBWkyxJcVrhZWrYqcNLHc\nun6V89Epo7Mz8m6XwUaX1Fp6vQ69bgdrFM6VQh6KMu7sdGS8aVDk5Vokw2JEG8Wg1xML8hjxZQVK\nEIcAVqunDr6UUhcfP88AocvrZRD4oesiHBij8XV35x/9+q/Ry7Z4cvyYx48fs6wZd1rXLja+IlAR\nlZO0mIubn+am5gKYc3k1jzWyWBFEO4CUbrfL9evXSdOUUKMK93a2uHv3TiudlabycsYYWzzAZams\nEGtLtPpjkSSL7QGFiJHLuwbZaEEbKjEKDUAVFcoHYnRUNQ7fx0ivEygTgzWGpcpFV0ErYfPZutTR\nun5cVIYtBqMSVJagPFRBYWNE68D+3hbvvPtd/p/f/h2W68jNm59jcj7i9HxMd7CBK0pKv8RHx0an\nT1ms6HVSDvb2OH7ykPOzM+ap5ewUCI5XX3uFg53PUFqDMd12klOs8hZMFELgytEh6yKnChVJllFF\nKa1mkwnKR1xeSfDMLDZRl1oAqn1tX7T1Mgg8u55J61qzjyjaAZPzEbe+9CqDQY8QHIN+1nLWV6sV\n80XFOq8wCrS6GJc1510Uii76A0JplTBx2dZaKUVSc/vxgelozGi4Kc2xLENrEQJpSogGy29qYovz\nEihC43sQAYI0OLWYpigUPjwTkHQjWnoBV/YKTJCaX/uI96rWLqSem4smYpKI/Jc2ik6aoU0Nyc0S\nolFEHfAuonSE4GuREE1UhkDj2SjBc2M4IBtNidMlP/b5L6B0l9lsTaItttYAKNYr0q6IfYbKEZxj\nPDpjMh6RL1fgDD5UbA03uHHtKp///BtUriBLLCEKVRtPOyHw3pN2OkwXUyrnMGnCqljL3ykvyLQR\n3UbjAddmdc1rXL/3R7Qx/+jWyyDwI5ak8CDa8o7Fcs73vv8m/X5fDklNuAmxZq0FR2IUoQbsoDyq\nTv9NbWmuwgU67+MyApDPb0ZYSilOTk7w3nPr1i1u3bghJppV0aLymiZiVVVPzeeb731BHLr4uO0/\nIFBhoOXJawREQw38EcS9kolIhODEkMN6Re4Cq7zEWk03y7CJoaxE6ThLHJlzFLVyMnVJVGYJQ63w\nFWLaGhRViKzKinUVCCqREWhq2Bj2KQstfodFga0NRIsiRxthFa5XK7LMMDo7YzYZUxZLNJZOlnLr\n+jVuXD1i0ElZ545eNwMyBnsiCvvo4RP+P/beNda2LLvv+o0511r7cc591eveqtu3nt3lpNqV9MPp\nBAsCuGOn/UARBMXwBdkghCUIQooEMeQDShQJBAHlC0GgSIAUTECOEoyQoG3RieVHkm7b3W2n3N3V\nz3o/7vOcs8/ea805Bx/GnHOtve+5fW9Xddv32HeWbp39XK+95phj/Md//AcK586dp523zOYtfQgM\nIdA03mTmnWOzHmjxSFRcUNNkyDoi96NYyL2OB0bgXkfmxM9a05jbbEzCqm290X0zo0ByRZ0TxRUK\nagbJSrqsEVdXHxGpDmQJG7QYhUmGAOD61asGaDnHlStX6rYL2WW1MiLREALzTD02LT0TwaieAiB5\n5SNP+lSMRKYVNpNgtujpuZSPNxnI2A8WDrgAgzM3f7M2JuG87XAeFrMZbdvgvbeKxpTouoZ+0RI0\nsjqyTj/Ot/RJ2cREO18SEvTDmsuPXyL0G959+yaro8istQ5L12/eJKZA2zqOV0e0DVy6+Ag3rl1l\nc3TA/mKGE6XzypOXL3Lh7JK333iFxWLBm9fe4VuvvUrnzdP6ylde5tqNGywWCy5fucJif48XX3yR\nhx55hHW/5tbhIccHK9q2wREJvf2+cT18B/fPd3rD/d6NB0bgOxqloAY0u4OaPJocmovLVYrnkN1e\nbBKVWFHyynvS6r87uqapXY3LuHnzJi+99BKbzYbnn/8gzz33HL/zO79TxUWshNZzcHBQ22yXfYkY\n6FgyCPWsTnge8ue9ZEKOaKYbe5wIKctpOQWXnLXgk2gegCiHHOOdpea6ZsI0FGG+6FC3R9RDVocb\nVCUrOSt9UuKtQyINjRP29xYcH6+4dfM689l5Hn30YY7WPfNZi/edEbLCwJPPPM3xwS1+96UvMgzH\ndK0HHfhTn/gT/LEXX+A3fuNz/MbnPjeWQWdpNwuj7PFqteLq1ask4KWXXuKJJ57guec/yKOPPUbM\nikam49ixWQ90M3/XyX0awMG7GgE5ufHIfwX8K0APfBX4aVW9kWXJXwK+lL/+66r6M9+D4/6ujbFT\nzF2GkNNNRvsVV1g3CsnyxWWCF+RdFMQV0M32Jd8OFJzuKr8/y6W3IQQjEsXI9avX+GpMnDt3hsuX\nL/Pqq69y48aN2jBz6ENu893XYqTCR9BSmpxxhJKeHAviciuuaAeSMgAeNFnBjbPQwbkSKijeY117\nSPV6Uqv2EhtPVfdtnTdSkvccEjlebXJ9hBI0EcUBnigN88U5GudYHdwk9Rv2z7d0Hq5vjkATe8sz\nrDcrvu/5Z2k7z6/9xj/m1vVrtDNHSBCGY778pX/GrZtXef31Vzk+OkSaDEzOZ5U30Laz2sxVfEMf\nAt/61rd4+eWX+fo3v8mP/tiP8eyzz3LjwFquRRJCwuNAqbqFp3XciyfwP3F745FPAz+rqkFE/kvg\nZ7GeAwBfVdWPfFeP8j4arsGMgUsmViGClpQaIGKkF8Halueyuu9oH8UghOy+FyGRlMUy27m1D//s\nZz/L888/z5UrV7h582bVIijUYNAKGgJ1FVTV2j23gJO7I2ZQsGQSihGJ1pQP72v2n8alnP+3EMeL\n4sVlxbePqxwAACAASURBVD3zJBRjE0YiiYFNuAEp0vdW8hvLsaowJEG14bo74ugoADPmnePo4DqH\nt24xiMO3LW++fp1Ljz/GU1ce5x/+o8/wztuvs783J6UATjmzv+CNN17n619/mcViwZm9hWUsspBo\nudZHR0dVu7CdzYmqXLp0ibfffpvr169z/tw5Hn/8cavZGHpu3Lhuasn5CkwB3ftZUPRO465G4KTG\nI6r6/06e/jrwr393D+v3btzrj1XWS1cdvASal8uttJ/d/A6yTHc2AXKCYyiJ6ibImHPWAiQ2pnlX\nVnPIpCBn71krcWshfv78ed59992q5FMMgvVJyDd8Jiopo6cx9UoqaDgpWy7hg6paFWJQVBK+cOTV\nMeTSYZ/BUJ9xCoda3YEo3pvnkFJiiBFcRNT6AsjEEBlHwtiGV29cJw7Cs898H0OXuH7jEFVPv+k5\nWB1xcHDAmbnni7/1Wb7x1S8hcaDfJNrO03ozhrPZbBQezV5VyaTU7EeRJm8Mf/Fty/VrNxn6yJ/9\n1A/zZz75I9y8eZNnnnmON956q37H4qTJPdI0EMKpaD02Hd8NTODfxnoSlvGMiPwmcAv4K6r6yyd9\nSe7zvgNl2Ao/iZdJeYUL2b/PqkM205mqp0t+rVTl3SkTULe9syoXd7W4myXH3m82poQDvPvuuwzD\nwHK5ZDab1Zu7gIXT7RbufjmW6d/pvovgqWZWYdCcYpyQjUK9y2OlJZfahsY5vLdGoo0zcpAdu23D\nN9kUScIJeCxUEBEIBmAOIZpQSYqsV7fwfs5D5/dp2o6vv/IaYbNib9Hwzluv8dab30QINB5aL8Sh\nZ6NWPGRG0WX69cZy/FnmrHhFBXyNMVpPiXxdP/nJT/IjP/Ij1lNxf58+DJw9e5amabhx7d38+zuK\npkAK4bYJdRoMwvsyAiLynwEB+Dv5pTeAJ1X1qoh8HPj7IvJhVb21+93T0negpghh7PnnqDRUnDH9\nPEWQwz57L8Df3UYaRkGPEGMm7ln6rmQMRIRbt25VKi9ADKGi/gJ18k8/UwxMAQQrqWj6OHsOHqkx\ne8q3dIzGtkOlUo9LJ54UI27IqkLOsZFE6yyL0jhHS5k7ynzmabxj3nVWS5ASM4XjdWBv6en7wCtf\n/xoiHWfPniPgGI5X7C+svPf48AbSuEwHtt+kbVs2/XEWQlFWq3UFSBfL+ZaEW7mGMcZc7ec5PDzk\niSee4M//+T/P93//i1y7ds3amolt+9q1a4iKNSEVsTOfiItI/R/3dVagjPdsBETkpzDA8JNZYRhV\n3QCb/PhzIvJV4Hngs+//UO+PITk70DhnkQAeJzW5d/KXco3+NFdvKrjbq/Gu4bB2WlppuTFXF3bz\nOcfHx6OH0La17XbJEJTJXgzAVOSzHEea4AL5w9tZArEyYU2pKuvaWY51ASmZWfDOkTKWkQScuKxw\n5CCJcfHVpNqca2x1ToH5fMasbVnOTZgkqrJeb2gbI2htXKBvImFIxGFF23Y0PnK8PibFiHew6dcZ\niDXcJMUBJ2S9QHP9y7kPvcmzhxgNJFVFsAKmWdOw3gz0fc9P/MRP8MILL3B8vLLmMJsN3gk3b97k\n85//PB989lkaLxVbMVr57QJi97sXAO/RCIjIp4D/GPgXVXU1ef1R4JqqRhF5FutM/LXvypF+j0d1\n20aY3P7sTIwxbjYQsPF+8lGpgJpVCU74ASpV+APyiq5jqe/u2GIUZlqrZBXgIQR8dmeLKzvdrrm1\n9p6bhAHee3zmJhTeQAwJ1VwCq7Y6qzgSFgZsnbcTUI+Jl2YNXymAntbMh1MIGhE8SRNOEs41SONN\nn1DsXBrvuXTpkpGbvEOcqSg1TUMaIkMfmTeeGJOJhmgu3fUNi05YDz2r4w29DsQQad2M+cwakR6t\nVzhndRDOizVJdXOIiUYajjc9jVgLchElxkRMRv3+xD/3p/gzP/xD9MPahEzWx6yOjjg6Pua3Pvs5\nUui5mXsy2kU3Y1Cu6/T2OQ3jXlKEJzUe+VlgBnw633wlFfingb8qIgM2p35GVa99j479uz5OjN+q\nAZD63rhiiynPik1wl72DrYk7IQXZ5tTKV1W3sAYm255O6PEwbjdEU8/BiEttzSaU+oHyt6yGkDX5\nK91Yt5DyVIqdnCDJeAWANdZIQkhFmz+fd8EYJscZscKhqIrP2QQpIiTZIIkI3axjvlwaDdqXQqLE\nvOtMiqw3peN+YxTfFNWMQNvSdo5ZbOi6BjmAw5WtRa33DCnQektFhphZlxOvqeAiEUUUhpg1D4fI\nB556kp/+6Z/m/PnzDIPVCXRdR9d1/Mqv/Aov/e7v8IM/+IPWNboWWN1esXmaxr1kB05qPPK37/DZ\nnwd+/v0e1O/HuPuPp1l/D7rGKs7K2ALXlLziq4WKE4ENitJPNhC+RhETQLCQeSBX7p0w+fPjpoiL\nprFpBoyNN4ribwgQQ2KzXlfQcHR4ZCtMSWLnsQl99mzqods+YjLRELFVtgqklIxGViUWX64JiM9i\npkzwCefZX+5nzMMzaxvarAwcNj3D4BnagRBaxK0YwoYUB0gNuETXNLSto+s69s/sse4Hrl2/xTu5\nn+Jib4+mEfANMSq+aWg64wZ0XYfkkCmlhITAfLnkhRc+zF/8i3+Ro6MjDlcmAb+/v8+vfvrT/OIv\n/iLPPvssH/3oRzk8PGRvb4/NZlOBYf0DzhP4Qz2mk9P+lAo9m9qRUcCyruJZ56+syqKR0qfOtmcq\nQ+gOyYhtUC4G3Vr1S+qwjGkYMB1lYk3lyk2ynDFtWLQAU9mnIfZJikHJZbEp5Ty4gYy2io7qxE1W\nSC4ZgjpUM18CNAnkGouCh5TjLL0AZrMOJxaamJCpmFJyVMwPse5GSkJTLkOWSIym3eScMRH3wsJw\nkUboQyCpMpvN8U2DbzsTcPFWsLTKytA/+uM/zk/+5E/y2GMX+fwXv8jXvvY1S2UOA6+88gqf+cxn\nePHFF3nqqaeqZ3eUGZmk7ZBp6xqckvHACNxl1FUSA7tKXN2IId2l9n762XKzlwKgsnIWN7RMoJOI\nOtMbaYoL7L63u8+TQMWmaapL27YtPgOHCtbpV3SSDShpjfH7Zf8+mR6hfSenLRvrwFObncSRiKSq\nNWMgOoKPJVQIEZwGawHW9yzaFuZNBjbjVtMVI2RlQ6CRqMl4+2rFT4jL6kCOvcWctm3ph4GD1RH7\ne3u0iwV9HzjuezrvaZuG5f4+fd/zwz/8w/z4j/84y+WSr3/rm3zmH/0yn/nMZ2pD0uVyyVtvvcXT\nTz/Nhz/8YVJKHBwcsFwumc/nlWBUcKMHRuAP6Jj+sEkTm37N8WCEkGmb6wRbsbXPJbmz2czSY3ll\nLmh1qfLbHdObaKoOdFJY4BqLe029yNXPFeqCarAJcHy8tS0RSx+qE4TRG9lSOeojXdcxm82ZzWb4\ntssy5hBStFU2JbR4GSRE0ii0WQHRsuL7mu5s2xankX4YbDX2nvmipctpvDLxnbdiJd842q4hRE8K\nkabxRM0BmvOQU3yIeRHzZsbyzB4f/ejHiCK8+urrvPbmmzhnsu/PfehD/PCn/iwPP/wwr7/+Ol/6\n3S/zrW99i9VqxRACq9Uql2Er3WzGU08/XVWg9hYL2kLDzoKnmpmdJW172sYDI3CXMa601oRyNpsR\nmwaP0DVNniBtboXtJySbgatXr9L3Pddv3cA7eOyxx1gsFnUF2TUCux7A9PltwwkpSRUfKa7/dJtd\n1/Hcc89x6dKlmgtfLpdVaFOcIe71hs7hjGZCTXke1ND5FJUQEkMI9Fm1aMqBNKOQ6vaO1yuOj47o\n+w3DZsN6dUjIvQecN8m2oc8GJbJFcZ56Pwbs5euQIuvNCnGt9S4YBmLKdRGSwUcVLl+5wkMPPcRv\nfvGLvP3OVfb393nmuQ/yL3/ykzx66SI3b97kH/yDf8DR0RGro2OuXbtWeyMsl0v6vieEwMc//vEt\ng22tzvtq1DWa6tRpNQDwwAjc8yiu6s/93M9Zs4+mrQ03rBVXgzqT6yqrwuHhIV/4whf44uc/zxe+\n8AX6Yc3Nmzfx2RuITCZe/m86CTL7vxqW8p4RhqS63ym7o+V5kzGBpMLHf+ATfOpTn+Lhhx/Ge89y\nuTTaQjYKMaaRLZfd8Oq6T4yRJhMpjWHkBgzDQCx9CsWaqb799tu8885bvPvuu1y99i7vvvsucgga\nI03TGdM6n1PMNOKUEoeHhwx9TiFmrKPxQgzj9XBeYDBjEIaBqEOmGefMjfMW70flzbde59atWzTz\nBR/5yEd47kMf4uLlD9B0M37pl36JWwcHrI83HBwccHRkZeGbzcZSgr2Bok899RQXcpagenzTTEoa\nUdPTXET0wAjcZZQfN8aEc8L3v/gi89kMyW5v13UMKctv59VDVZGk7O3t8alPfYo//uKL/MIv/AK/\n+Vufs063alWBpcBnunpPV/1C7NHJBC/DOA16oveQ8vveez796U/zxhtv8Ec+/ALz1o51Mwy0mZ1H\nSiTNJcNqhUURa9ldDUNOJQ7DYKQdNXluMKrsZrNhvV6zXq9ZHR1xvF7TNg2bTW5DlkJOLxiLUCM0\njSDqOF5vKoU3RE/X+AJRonFsKFoao5ZKv6QRjSZIgmYdw0z51WSg34WHH+WZ557j8ctP0S3mfOkr\nL/P2229zuDrMcunDFlg5m81YrYwcdP78ec6ePVsne9FimLaD+4MyHhiBu4xq+XMV39/67/57ABaZ\nKFJy7tNW3dZ6y5hpe3t7SFK++corbPqIuBbXRJpOWR2ZlPiUGzD+JacStf4rdQSkSbWaWGlvuSVV\nIahSxLBvHhzya//4n/C5z3/BBD5mM2aLOSRliIEUorUcV7XziJGooZ675NBAk3C82TAMIRubZI1H\n4qT5qEgWFjUuRDViKaAxIlnqDI2se2tG0s0a/GoFGiDN0M6znM/QnG3QNDZX9a5hPhdUHC4lUjTM\nMGXvQpNVP6JC17acO3eOtut485236d8IvP3ONZJaF6e+7ys2c+vWLQvrvGez2fDkk0/y1FNPsVgs\nttSdpiHa7jjNRuGBEbjLKK59SgnnPf/H3/t55q213iotwcpqvisd3rWtpbZCYtis6fuBEAb6fiDl\nyVTGVooxj5O8gOlrMbvVgtzmig4pggpt1iMMIXArBvToEPGe2MfqCagITSmBzvsfhoGk+RidmwCI\nJhg6hLyK4nC5Qk8yCSrFSATUCU4FTc66OAmIE0jGHRCBfkh0TSREi+md7whJsyTb2Cy1eCXAJGSB\nlNRanKXIEHNjEd+wyN+7ceMGrlsgbVuNdcFuyvUsYd3R0RFXrlzh4sWLnD17thq36W8zzez8QRkP\njMDO2K0H31XtPc5prWmO/qSVHKj8/hgTMQxs1r0h3yqIbwjDKE+lpU5pMtm3c++ZhVjy96okjZm0\nk/e/Q/xx0pjqccYXyMbAtTBsemvnlcMHj6eIoThXJoiQNOZuvd4EOQRE1artVFENWyukUzeqF0my\n9J3DPIPcwFNFEG8NXpPY5C+px2Lc4mDh1WazYbVasV6viSG74uKzKKkyhEAYEn2KhGQ4xrxpDaxT\n5ebhAb6LLPf38d5zlHs7eu9JKG3j6bTj+vXrxBh58cUXASqA2ea0LinRtGPbsVo5eRcP4TSMB0bg\nbkOMclpSYatMT9UYcU1TY0UvwhRUCyHgGVeQGvdmzKDU0dsupLr6d8IHpq9Vr4CdCsAdXEq8QG/x\n/WYYkMZbAY2zNB2AkAlFWAhgk1aJ0QqRSuFTEjUXXNU8CO9sFc6xegkdvPrMx8+rZu490DiH5Nbo\nokrjhbZxdL3jVogMmzVDvyTtL5h3LSEbgCFYT4XFYmHGU4TjzWCiozFjBTERYiQqhOwdbTYbjo6O\ncF3Lejhi1W8IkereA2PR1caAwGeeeYblclnxEAMnx7TuVIlpF6M5zeOBEbjbULU0kOWoODhaWUbA\nNxBtJR9iQnY4+KrKZhhLWFe556D3nlnXsdlsbLu37e528lHlpe+kzwqrb0oqsvDAVq9CDJrPFrSz\nOcebDYu9WS67neVtTV3dQmtOzOfLreOoZKfceivmFb2thUltvV5JR/yibVsWi45FN2OesyiNE5ya\nFuH68CY3r13l6PAG8eZN0rBmbzE3LwJh1s1rSFCpy67BhwBuMC+mUXy0cIAUeeedd3jmQx8ygVWg\n73tWhweEOF7DvfmC5WxejcX58+d55plnWGfvbVq3UUK9lOx3FpQ4IUGd9vHACNzLkLGS8LnnnsOp\nNRJdrVa10s5lmrD3bVbRyb0EQk+Mas1Jk6BpoG1KnG4sONMguvNNdSd3c+qKFhDNe4d665EgSfiB\nT/wJHr98mdV6TYqQvE3OONhKJtlbaWucXBiShrqVTkGQFXmSxfqlIGg0FFL1Bc2zyNtJY3fkJsf4\njSd3IUr4FLh57V3efus1jm5cJ8XArcMjex9IKWxhLiIezenN6n14O5ZBA6TIH3nhBT7xg/88N48O\n+fJXvso6JGbzBTFFoip7nRnAktF5+umneeqppzh//ryVRGfKsGTW1S5pa5fHcdrHAyOwQ9qrHrXu\nfsRy+T/+qR/l+OiIq+9e59U3XufmwUHtRzifz5nPFrnhZiktjUa0yfksjQENJnvlxBPiQAyJvl8b\niUiATLhBtg1DuRFL92CXLHvgvTUZiVgpcBh6cA0PPfIIj1x8gma+ZK+b2zG1rrYq29p2OdeCbSTb\nv2SsoHy2xfQCYv67lZpMioivBsC+lLEKLGvhsEaomhVaZt5x8YkPEGPk2ltvE0JPK1hD0Kw1U5qL\neu/N+DghaKBpPa71rDc9GjWHCht+4BOf4LkPfpAvf+3rNN2czifENxCFrrUOytev3+Dw8JBnnnmG\nF174fvb39zk+WuFnDTFEUIeII6pxIiSHAjE3qrcGs4lGrFzaqi0y2/GEcT9rDz4wAvcwpha/9R6d\nz3nkkUfwXcvVq1e5sbfH+ngzuvIKeGd4ggoiCVeERUTAJXy0yZLiuJJWN7+sOnc6jgl5yDlHDCVW\nNc1C15g4x+OXnsgAZCSKkX3CZsB7zxAMA9gt/Cmc//q8AA0TQ1CMgLpxdayf38mjy+SuVwAVExWN\nivNKPwRctJW3D4lh3bM4e4amUTox2TFfshZSlJDVKMbBsgKN87hlg24imuCNt97hyrMDDz30CC/+\n8Y/w0ktf4p2r13nnqlW1X9g/w/6ZPV78/j/GU08/SdfOCCEwm822sBlV0zdImqpqknPWWt28uG1v\n4KTS8NMwHhiB3bHzO+6mg4Zh4Pj4mKE34Oj8+fOI9xy3K1arlQFwlQVILZ/NG6stx1QEzYBamjD1\npsCgL+4+VBIQTFftnJ7MqsZCiV1hb2+PJ598kq7rDBvIE3YICWUkIe1q4mvaKVCqb2xrKOBkAkSO\nxiAJkLerOnZYrp5HKcoUIaUIQhUHUXHMFwsDARnwms9rYpesGMpETJFEHBTn1FSEndJ6zze//nVe\n/GN/nMcfv8Kly0/y8MMX+cY3X+HW4QrvPYum5QNXnuD8uYfohzXrY2tQan1XNGdqLDQSERxWKxBS\nRGNANKGhqAidzok/He+178B/Dvy7wDv5Y/+pqv7f+b2fBf4dbLH4D1X1//keHPfv2RjdZam0XiME\nBcKmJ6K1dHeaR4YJkDfZXiJPMC2rWqwyWNXY7HACTjqmEiOXtmMm2U3eZuLixYucOX/OOAHJSnSL\nQEgIoa6uuyVMu55AGQUtkPyZIFRdg91wpXy+pC2n27VjtMljrdoaEGU+n3PmzBlcGvI2ycVROcxw\nRbLMgVqvRFG1PgaS6IM9Pnv2LCkqr77yOomObrnPE49fZrE8i2LfP7x1i0Yct24eEELYqrAU8Sih\ncj3svKh4xBDWNX3bOFfvi9M83mvfAYD/VlX/6+kLIvIC8G8AHwaeAH5RRJ5XQ7/uz3GPv1/5oW0l\nakEtth76TZXMnv4jG4dxA7YFW7RthUzYjV4097f2p7ly4A7gk3kIVjk3jcGHYWA2X/L4448D1JTk\nNIOQUiLpNvpdt3uHdjmiNp/LX7JnYtmEyeSvRqGItJcKzGwYdVQ9ahrL5c9nM2v5dXzEu2+9Rtua\nZHgjjsaLYQMyXv8U7VwaV+TUrKipcY7lfMGw2fBrv/qr4P4prpuzWJ5l7+w5Hnr4UR5++GEeOn+e\nbjFj5htcrn0YYkTUms+a52XhWyEpVY8L89wckLyv9R/c4Xc6DeM99R34NuPPAf+bmuDo10XkZeAT\nwK+95yO8D0ZZmbafa+b/j69tpfbk9ipByQQW0ugdlNg+5QmG6kSl5tvfWCklfNsyDIG26/AiDCly\n8fHHOXfhAn0IxLzt6SgdiWCyYtdzuH1VN7d+20twIqPLP42Lv53RmnzWjJEBgGA1GIvFoqbikisA\nZMzuk1GVARoxXkbMFqn1jrbJTU5iZNMPbNQREfp4i354i2Y2p2vnnD1/gUuPPcZsNuPSpUs8/PBD\n1ZNzInifiDGQUswAYINrXcYGAiFrDaQYa3eo3ZTuaRvvBxP4D0Tk38KUhP+Sql4HLmPNSMp4Nb92\n25BT0ncAqKk0RceSXVdabNtnxFG180scD9QmH8WVLl5CYjQAdXLs3ES7eMQUYRaxgp9WRo4+Cvv7\n+1y5csVChGg3ckrZnWUUO1UZEYZ6rDBKoW0pHcnWa3YebvRGIGPm1OsRJji4qm4BhABt20C0Dseb\nPiAaQDy+mbHpV6Z45D3JJcR5ullbmYxeDI9ogukKNKFBxbHZJHpJzLqOeTfHt0uiOHy3RJ2n30SS\nOl559Q1SSvzul15m/8ySc+fO4ZzjwrlzfPSjH2G2MG+pHzaUztMpKiGagEmrSiTULtP3ki68H7MC\nZbxXI/C3gL+G3Td/DfgbWBOSex56SvoOjJN6+xC991ZBGDc1Pi+4QIzRgLiJ7DfY5LGSVxPL2GoL\nVj6XH1vse/eKNZPSMvAvIVw4e5YLDz+cNQBMWFMY04rl+EYNwO1tp8mx3ImbkMBqDjSnPhkBP8c4\nMcowI7pNsU7JKMUxWmVh14wYhwl3etq2YTFvObNcsL+/R9d1eKd4fFX/6YfI4eoYvXmAElDvOO4N\n/+jalvn+eVb9QEqO+bxlCErTtLX249bNA66+e4MYA11mgH7gA5e5fPky584usldnWgpD6BlCTwi9\nMUYFxDdoDJzm8Z6MgKq+VR6LyP8I/F/56WvAlclHP5BfO7VjCg6pmifQti2lxVUfRkqpxdqRtmus\nxLWIWebcf2kCGoLd6DEFW2VS3HIpRZKpC+yQVBJZS0BGsM17zybXv7ddx+XLl62Jh6aqL5iESR57\nbJAKE9A/j1TdgpNd/FRVipMZsxIGafFOdliNeYMph0euehO5C5GzQqKQjP2nTohDwrcmFba/v8+Z\nvSVtFiKF7BEltfZmztqOLRctm2FgiND4AuZBGNZ4acwI5uawMUb6zYB3DefPXwAVQrTqz9/6/G/z\nu1/+Mh/72Mf42Mc/yoWHLlAIXQcHN2lDYHV8xBAPx2sjJZPAbRmTewadfh/He+078LiqvpGf/qvA\nb+fH/yfwv4rIf4MBgx8C/sn7Psr7YOhkhZ5KhS0Wi3FSkDnlItQkU75J1JloZslBxwkfHezGdiJZ\nIMT2uYsp7B6PQq1dCCnx6KOPcu7ChezCZoQdJeaJOGX4nZQKvddrYAZJmfpvu57DSSQky0aU/WuW\nNydLlE/ag/VjvYX3Dtc4nDcVZ581BQPQqEcdzFDWjadrHSEpIUiGEab4xqTISUb9RI3gvWPWzZl1\nc7quY7U64tVXXufChQscPnrE/pk9los92tmCdX+AiqPp5rS1+YhJoaV0/0/4k8Z77TvwL4nIR7Bb\n6RvAvwegqr8jIv878M+w9mT//n2dGfgOx9TtLyXGbQtt6+l7c/Y1A3vGs98BCCWnupyjL6Wx2UOw\nXIDdUJCJKYWwYjuvjUTG8GIMN2azGZcvX2Z/f58UE2rJvC21IhWpFODdNECZ0NPbeDqxd+myLjcr\nObFzCqMWwbQVew0l8v5c2UdKSOvp5nPmiwVhOMa3Dc3MlIjbtrVio8Yb1RjB+9YoyNGM6rpb0zWe\ndUjVu4op0GqqHsAUp1Ed5dw1Umnbs/mSdjbj5sEhv/T//UM2mw2XLj3GpUtPMJ93pJQ4e+4Mjz50\nFmkbkAZ0qAbgjszA+9gx+K72Hcif/+vAX38/B3UaRpkMQy45LeFAIQnBpN8fBmaVG6NwDaYaAAV3\nKADhbu5ddg2ACN7lNmWqXLhwgfPnz1cgL8SId1JTcoW4M7IRt1WMk+odvYFdA7BLajrptZO2UfZl\nGAG5OYnUMMeETWcc5zCqbVua1pv4SOOZdR4vhuKn5HE+qw4lapsxT8ZVopKGADNjRTrnLETL178Y\nwWLYNRnIOQxDTas2vuU4rvna177B17/2LZoMtu7tL7lwbo/Fwpv/L86aEO2WcZ6S8YAx+B2McrOX\n0tIieTU2+QiQW2xN4fCxx0hENeVUU5/7EViu37ZrnzOc1GrjC0GmZAPA0mKSU3QhBPb293n00Uer\neEhp/2UYvY5gH5L7AhprUBDzALJxsM1vi2dUYHQnxVdd/zgubfnrtq+83TQxNM5ZUVMhHhWjl1Ii\nhoxVTCr4CtBasI+mafCS+x7qiKN4n3s/CPm6myGshilvI04MUSRWwDIVyrY6VE3FuYCXFx56mBgD\nw2AqxM55jldrjg9vYY22DAhIOS18GscDI/Adjmlt+a6az26Dz110vdxYU+9ha3Ipt632dfLIqFdQ\nRuEpXLhwgTNnzliJsHPEEJG2yYKgur3KV1nw3KePbZajsN31aHfynzS2Pl/+Jr3tPMr263dkNAIh\nKKJhXJl1xE+cM0yg9eU5kBzOqfWAmDR/8SImtOpSZTdWlmY+OueFFLfFQMw7MOBXkyCeybEZ7nL2\nzHlW6zVNl/Ayp/OR17d+38kFOEXjgRG4x1FWxOlENL6A3VS+cVWeq9TTS1bqETd+vgiLlGYdQiEJ\nSNAo7gAAIABJREFUWbWc5cLvLGVVwgYntlo99NBDPPLwo3TdbOKlJHzjK4BnnADbblmqi9FR2Y79\nJef98xtlp3e8t28zdIUhWPiEumNkKviQ+RJlEmpEJtJfqop3WAagcWOnZTHOhhPBudFb8ROGQ/m9\nyvGl4rJPwoFCPCraAYblyCRtm8uWk5qHkEwhqWtnJI14ibSzDnIfqnyZTqUz8MAI3GmcCOSYy2hl\npllkYxgzBuWGKgq9pUFJuUmDJGuHHUZueiEQTd1vuH0Fds5V46L5/a6bcfHSJc6ePWuNQYvwReOr\nTBdQOyCVVXV3TCdpndS6/X55uvu5272dne1Oi4smKc8SdqRMM4qquLwSRz3B+8igqhUvjR2QEWM5\nlu7wkiZ4SsVYEkV51URUEqrc7okBmrY9kdLIdcR8HKIWjoQhjie9cx2spnN6EW+77PfNeGAEyphO\n+tvMeVlBBaEBjbTNjBAP8TiSCl07w7uGENZ2YzrD5knRmmF6Rwwm0V3ceHGQQqSkmEpK0eUVxbvc\n1ca7rAbUZUwhIaJcvHiR/bNnca0HbxyAoAnUbr9UXO8S8wMeay6SJkQkEanpNAqKnyfTNI6GbXWj\n7R4J+XHaKaLKyaGyTodi1LKHoF5JIZBcwmuC3K0pBMNammZJjAPedyjRrlNm8CXMczAvTPGN5IxM\nyoVJ1grO+TYfkzcjHHN2I2c4Ck+jGBUzHBNNiMl5SgVUO4TcfLsAgmp8CPM49OQu1/fheGAE7jIk\nA2aKIngaN2cdA0E3aDJuueQ+eQXRjtnVhkLXzUpEB0ccHR2RchszwfLdYw49f2cSejRNw5CsJVjS\nskrBmTNneOSxx1js70EBvZzF4ilP3kIRno6pJ7HlAeycd10h7/D6tPR5ywjsehTl/CbnCVQjk0i4\nfLytc4j3tLMO7WOt+rPJabX85UglhwKKkaGmjM3KR5iGcDKu+F4s6Jke9+gNaPb26hnffk846qJg\nL2x/LAk0mg3Alkd5f4IGD4xAGdXf3X7ZjMBYOx6ikFKD0uIcOLem62bEzcY65Bq5LKfwHI33EBOb\n1TGrg0P64zWpNCjRSePOiREoj8qNPSQDpqzKLXL2zFmuXLnCuXPnaLpukm7MjTIyYclYfW7rlEIq\nikfjCj/NAtR8vhZasEyuw3aWoLj31nY8bRmc3TBBdft9V7Zbz9mDI3MCOvr+2Cr4dNuoaF5lp8bG\ndP/GcKxkIYqxoxqt8Vx23feiAm3vJ5hwMLbPY3cSfycowP1nAOCBEbjzKCDS1G3GI6ll1jRsotKH\nHo0WP4bB3MxGvGlP5bRfyUGH3KmncOOtAu92IZHpcM4xZFc1pIRgclfnz5/noUceAe8IKY0detUa\niIQMsEU1ItJUKadM8mktwe7qPX0ea9py2wjATsPUSUu12y6l6m1Zh6JtCOZNFXCtGD5NYpoNIZBS\nR4pKTIJMVu5K1Y6jVzPFYKKYmEnaMV5onvQyeXzC+Ha8h62b5JSPB0bgpFFdN3ui9WZxHBz0eOmQ\nZs6sTazDgXXx6RMkj3OJkKK5qzGhwXT7yz+NEacOzSAhZE3+nSwAkFV6oPGtTfYUmc/nnD/3EG1W\nC07ZOIiMLrpJX0nuFDxODNgmH9lpmtscOdkIlNUxTV7b9QRSStUIFOBxGm64iTdSnqdYuhuN76Wo\neBxOGpKQawFSZuYWjMFQ/sLL2KrCJDdmZeznUM835UxJcfnrB8bQTaxmqwK228BksYawzbbcMQSn\n0C48MAJ3HBVuZpL95uUvfxNSw945x/JMy3LW0S5bVE2x99bRCiTRdg0Ja7TZZ2Vizei3BhPVcMhW\n1x8orup4FN57Qsz56hT5wGOPce7CBcsAYG23FLZaoVUOwmSl3131y2TdDQemw9Jm2WCc4DGUx1vp\nuB0WJBRDNTk/Mn4nOYU44VapHRxOPDGk2icgASmXQI2pUBNxLdt1zuFdYx6bCB5nsb9mNuaEkm14\nx7YHMJ6L/QYnna8dYwT1pzMfeML4Q28ERq73HUCbDLgVqPeb33qNzUrplon5QnnqymPs7bWmQpvs\nZo6ZH9BnTfvjoyO7mfOmTFgkA3eMN1vJCmgu/rF24Obep5TY2zvDhYceZbFYWGGQYjUCQg03+hAI\nIeUOOzamE71M/tYXY9DkmH4cJVyYrrAVK8if8ThTVHI7GbISu0/CBzMwY5bAZYJPUmUYEuoFUkQF\nZgLOeVzToBIJUVHxGdnfJv0YB6HIjlvvg8aPvQMrMKjJUpFioOquERstUOV2Zm5HOffx/G7HBE7/\n+ENvBMqoxqD+xjtGwZYoVB1N0+LcQIg9L7/8MsNwhAi0nSeJ0s6sq82N69eMHdgPufPOuAo71+bW\nXON6pC4Ddjn9HIqacIJzFx7mj/7RP8pDjz5ibrMIMQOGIQTEe1brnuPj4zopSt+9MozLUJ9kozB2\n5DFwcuwgVLwKl3sM1CsjQirdlSaTYytboOOqO/2eagYtJ8i9k1IWLARRnDpm8wWNRlQ8CTHQtTWW\noBOHV+shOAwDKQ40TcO869h0keUsEtY9oXgMKRIRgipRRtlwO6g0evqSKn9BlC0jON4GuShbTggt\n7lP0/27jgRHYHfV33DEAAmiytlqtAX+b4RjChhiG/LGIejWNe5R+M9Q8uXMOKblxtZ59OUodg42C\nYieq8pBrbFVs5zNc24wTzTm8MKr57jTNqKBkXYk191WcdAvO/7bbn2luIjoKnpSWXFMw0cl2RuMk\nr2H3tSlAOMUVnBjuksTYlQ0JUVfz76paDeQQEq7ZJjyZwIsQBqVtA973Y51C8YLKf9Nwa6evg6pO\nyox3xF7K52Tn3ti6cU7n+ENvBCYR7J0/pFQqnDil6xxBIv3hMYRjRHvrsRGEVlqjBOdGngCighNX\np7tTKWGnhSF51Qm5Bbkdl+WrFVu9F4sFs26O4kwrwIkp7EwR/xjZbDZ1wnVdZ4dfJptCTIo66yRc\nRsmZVxCvGIU0Niwt9/90MlkBUmEAWipul1x0+6XcbvCqZPaeWuFVyhiHAkGT6QX2gcWsIzmTF9/+\n3UY8YKtfQMkcSCIlA0mtAeoJsfyEylxX/p2wYbqvek/8ARl/6I3AnceUDac5TlCcD8yWAhFCWtNi\n6kBKJCk434IoMY4rMtx+Q9l7k71Ni4OcIGJ89dIvoOk62tkMafz4+cnNb1mBQJ9VhopXsBUOIDhv\n+w4TYk1Nq+XPWqgxWQm5fdLtuvnTsetG72YmpmCieUgjvXiyF0IIrNdr1usZm3nLrM31AyWNmLX/\nLVNgIGIpA7ZNTMKTXDQ1xRSm5zc9dntw8rmNh5dOOObTOd5r34G/C3xf/sh54IaqfkREngZeAr6U\n3/t1Vf2Z7/ZBfy+Hq/du5cBNrL4iTaDpEsfrDVHXzJqEc6DRbkbnLVSIMeLF2m+XklkHoFmXL6e5\ndl3n4uqrFCkwAfG4ph27GmHiGklSzqu3gKuTQJLV0hdXH+xmbtuWbpaBwJRonbX1ouTSQyQ2fstw\nsDNx02RSnMgzyP+mRmOaNizn6vN3poozBcTDScVCht60BEuWwHQDTBREGk8a7DoOQ2AYNoQ4sKtq\nWq5tQCeZAurvUhUgVHC54eoWTnIbyHkvbsDpwQfeU98BVf3J8lhE/gZwc/L5r6rqR75bB/j7ORyj\n8GaBiFUGgq7YDIck6ZHWatxDiiQdcN4osSflsKeprRJrF5UiLfG1G9Nx6s1tb7qZFbGo4hkr34KG\nTJUdBUxSShDTlhx6Sdt1XQcyo/HeaghcrF2T63EGV2v3a0ZgetPX4pomX5aTyUElTCnPp8YCRs+i\nwC0xn1sUNY9qcuzTSWfXy7yzGMdW4TFGhjSGGkkjKXmSCwT1pIyzJOKIiezyBtQMw64BqM/de5jW\n5QTv4/G++g6IXZ2/APzQd/ewfh/GiIud8FzqC0Ncc7xRjjcHiEtZejz3zFPHbGZtx1OIt93AU7Bt\nSqSpBgBsZc7uedvOaGcz2tnYnrsKl2JUW80lud57WudpxJlmf7ImGVKMlyoxBDZrZXCudlFu27aq\n8ogYw84paIioH2Nsg0UEp2q6ehm0CzWNtn2nG36mNVVYXy/4RRYFUfFbwOh0lY4xMvFJ8nYc3jsG\njaPx2+mJWK5VjDEXUXnUKaJFlyEYhqPbRkDYLn4q2xxTjjtcgu+kPGj3/rqPxvvFBP4F4C1V/crk\ntWdE5DeBW8BfUdVffp/7uE+GwXjDsAFSrnBrDDDL8bRzjtnMmlsqt3sBRaZ7mq+X7HpX8Q+KTkFD\nN58j3sQ3yTdi0zQMMZJyzrwAfq3zdTKDTfAo2ww+8yDGNup3KisuHorERHLb8Xx5XElBqlvNTXZX\n0bLNKdLunCPEkOP7jA3UTImCCEOM9CHhMcWllJSo2SuZHPeWu54PxMKDgT4Ey7R4QWkM/0uBpDrq\nHewasQISilavYEqJlpxeFJ189oSJfVsZ8X3sDbxfI/BvAj83ef4G8KSqXhWRjwN/X0Q+rKq3dr8o\n903zke3Yrdj2gg1sxYBimoKbzQDS4HxDTAGkyUy2yKzrGIYNknn7wybQdR3OOfrQI2IqOWDcFO/H\nrsKKZzMMNOLZWy7w3YzZbGYSZhkIjKpojHjnrAGH96Q0AJH5vKVpBCiy6K0ZqHwHSl5Xt2PatAWm\nTcHCYiSKXHh533tP47vbvISyDe89yZXCogmekJJxH9QEQ5ImNGyqIIhNVdgQcJqIUVnHgfVmQJNN\n7vXxBgiWVtRxwpdziJNuwTFGxCU0WucgFYc6X1uqV3KQWXJTNhbN6c8R43Di8rpvv3FKicY5SCXk\nsuyPSbrZ/VQN4yR7cr+WFr9nIyAiDfCvAR8vr6m1H9vkx58Tka8Cz2NdiraG3m/NR+5grbcmTHZH\nBYgxEcOAV1uJfXYRS4PQ/f19Dg9WmSdvrnhF8omZfGOrv9ryj28a5l1LN18wXyzw7QzT2h61/lWL\n9kCuGFRj7XVdx3w+N08hy5d577fSZZpi1Q0IpUbebYNd02zBFCuoIUg2Aou5bJXu7gJnqiU238ZD\nRr3DbcygJAyVLNiZPxc1syGHgc0QaBxsNoHGCxozuQefU60jH8IAUyFimo5CAVsTGsr5FEXkEU+x\nECUiVi+cw4C8rk8kxV1NZGb5kLuAhXdo8XhfjPfjCfwZ4HdV9dXygog8ClxT1Sgiz2J9B772Po/x\n93lY665EAi3xpkPVJlpMkag9s6bFeeiHgeVyyXL/DCG9aQBanhCS1X9iCHjncM5bjz+n+Lal6eb4\npqOdLfBNM5l4nhjNA9BY1GzGCSdQpblTSqzXx9seTJzU/2dvoKQKKy6x4wmUx9X4TBqNWN++hq7r\nxr6Gk/2lZHJe4+QeR2Fgm1xX9opimUS2nSndWZOy3gysVmu61tPKjJQgNA6iMoRAnwVf+75nvRkI\nmsVGEoRo3AjrW6i5RJrKCCz7MwA04jPByNkB5DuAasC0XpNJVuGUj/fUd0BV/zbWffjndj7+p4G/\nKibDmoCfUdVr391D/h6NbxOziUjOZRWBi3GSJLUWVcEnfFRW6w2z2Yz5YkHTdHUCucbnyVYAMfMU\nS33/rJszmy/xXYv33ZZoaUnZTSe2qkli2+o1utt937PZbLbYgp7tSQ6jmk5hGm6lKGUEyOr+2EbK\n+77fwhWmIUEB0YBKNz4JKyjn4QowugMg2rEJm82Gg4MD2ga8S8xnniZ6RK2EO4TIEJQ+5MpCy8BO\n6heyj5HMA3FYWDUqBk04DBPx0ymeUv5q1mtwArn28l7urvt6vNe+A6jqT53w2s8DP//+D+v3ctz9\nR5xWxhnbX+rfhNQUX0iRg6MjAM6dO8cjjz7KjRs3Rv59dv3F59ZbIYBzdO2c+XxO23W5eEjrKgWM\nJB7X5gq53O1IA4gV3JgbnLvp7iDcMbdBNmp8LuTZmYy76P7uNsprZUIUTsJu6FCOWdN29KsTMG86\nqYxxmIXQ1FiCbZ6U0nSoRmIYODpc0TggRfqZpVUFiCFxfHxM3/dZhMTSk5rK75bxDc0hkOQSa0YX\nXXJ9oiQhiU1s8/a2nfixFtHwCpmwHCbkb07beMAYvIdRcUE3rsjOOWu+6b1NahR1DSnB4WqNdy2X\nLl0ixsjh4WF2jWNmmSkRxTUN8+WS5XKfbj63QpkQoJKExph5GMYa+RTJfIRxtZrG12UU47GbqjyJ\n8LK7Ok8n/O77ZZthgnPsahZMdflg2yjs7gsM9PRAle2SrDysDXHTs+573JESU2DWOSM6QRYf6en7\ngWEwYLCIjNi2TeEpJK0y6E4x2nXjt45Jk9Qy7Klx2zoPobZkp+ICO+M+zgScNB4YgbuMXMFuMW8i\na/t3NE1H7IPF1s5IReIExDGExI1bB+zt7VvXWjEabombU24W2s5mLPfPMpvN8sQE8FVOvEqEZWCx\nAF8hBFyyeLqAbyXdppLTjWjFD8qEsJt3O6SYpivthCe8hp0QYhcrKFWGuwbIVniLmZOMuXsYw4Pd\nbU+9CLwb+zTGXFOhifW6t0aug6drmhzXm1cy9IGYMwhWf+Ez+SinVp0QUw5bdoxWmbXqlBi08ioQ\nqWEO5feQ6TfqlbrtldM0HhiBex15xer7nlnX4NuCjDty0Imot4dJCTHxzjvvcHx8XNNXvsnodMog\noXcVwe9DBIqbm1f3CthpLQsuSHaMpmKcsnGZrsiQb9zdtB+MIOUUmd/yCsZJO0X9mXyuKAVNMxYn\nbWsKDO6GF7vHUPZskuB5RR56CD1xGBCiaREopDAQm8b0GdVqDGIwpmEYTFWp9B90qRhyaPIknpZF\nl5BhXPVvP5f6nnNoNIynKTjDZNQF45SNB0bgLqP+qM5B9gT2lo1VpEXFtQ2zeYvmCr6kBc0PXL9x\ngGKS4agSUrSYUsyFDUnZ9O9w7tx5lsslZLHM2tJOPAnFN6YZoCmZ8VChac141BZledXfDRGmN7PW\n/1GNyhbduOw2I+VTlzhNynJR2Vr4SmggIjg/tvAqbdHLZLdWYYJmshNYYxEhg5NZVaUcy2YYCOsN\nopGGCCGS2oGlb6BwK0rDkKi5LbpUJSPjHlgoYhkBhxdHnIQoTqxGo5zHbt3BeMmEGEPOrhSDsesP\n3NkAVOXh+9BGPDACdxnVuuf4cr1e4y44mqbh7bffxLUNL7zwJ2md57XXXuPWzZsgyhAhZa07QUEs\n1jenIREVjo+PaXxkNrOW2G3bVGTdOUfCGIJ5xhBjZDazOgLvPJrZ8FXwU3dW2hNc1KlR2K1tqOc8\nBfrGC1FDh12kf4tPMAkxdt/f6lMwMUbluJJam3KPkKKBfiklRJPRkyVBr6yd0nk3hk2qKI6kzlD/\nCGgkRsEaCJk5MKVwa1UW9Xbgc/d4y3FNr5tkI5V2aMOn1QuAB0bgrkNzLkBzi+vicnddw9HRER/8\nvuc5f+4hUko8/OhF9vbOkFJidXjEwcG7DKFnCGuiGpc/JjWVnEzgiYxVcrNZ7mBUVvNkdQnlhi0E\noBKHW+hRACsj2Dic6fdld3XLE1CZ3My3qwfvpgftS0VrccdFxlHznDqR9yZPlPzXTSaHiGki1tCE\nnHmVshKbsIjiTVg1RmsAgsl9xczTSNFarbpM6ClbCsnUkft+IIlDaUhirctKyIQIMef4Rz5C+a0F\nKYpLunvtdIR0NXdMmhCoXL7W9yMj8G7jgRG4h1FVaHNuvW1bbt26yROXH+cTf+JPsT7ecHBwyHy2\nZNktGUJP13Ro6lmtDwhxQwqMQheF+Sd2+fu+Z71es1js07ZtXdGn7n7BDmDSBWiSTizafRWnYFzF\nKmeAcQWfgoFTfsBttQa5tLa49beh5WX/u9kBRsxgCwuoF/VkIC2lRBSXwwmtKUNcg/diTUljNshl\nRVcDD0PUqr2IClEU552FVRkiGdOv5TDGTIxVBrB1zco5pkx3TmCgp0jtMXnaxwMjcA+BmqpWTKDt\nGrx3HBze4od+6Id45JFH+OY3XqERjw5KSImhj7lNljCExLoPDGFAMeTasmBCGuyWW6/XiAiz2ZLZ\nbFYn/NQtNS1+av5bRCCJqe1mspCTZivOL0ahKey9yWS/bRLLWAQlYu74llEojMEJaAljkszdlmXY\nTldWoDHv208BzJxBKI1ZVTOttxoVj/fmfc3bhgbJ+owwxEgcBlQDEaNRz+ZzhqioOLxvSOJNyzGN\naL+IHfN2Kna8toUBULkE5WM6SRG7SahwL7fafToeGIEyvk2WZ8wJC08//TTDJvH000/zwQ9+kNde\ne4cYlK6dc3S0gqQMfWC1Wlcq6zAMxLSTStPtVXedZcnPnDljnW9Tqo0wYVx5p+2/RmR+jMO9a6vI\naAldpkZgqkQ0/VeaftSY3++s7JJr+V3WH4A7GhYgC39svz8VLN36TjECaTyepjFassZNLsyxfgQ4\nT9KUadeOtmmMMq3KXEFxHByuqteGN21HSxN6VBxDjAZA5uMoE7hqHOyESGWUjMt4PreDg6dxPDAC\ndx3bNv7SpUu89ebbfOwHPsbx8TGHt26Zik+WA0Oh7wOr1YphiMb5n6L4uU+ZOMFlfXywgqTNek2/\n2dA23Rb6vJuf30Lfi1fgpU5k71qrhvMlXi1ouPVGcM4R2eYQVCOSY+LSebkaLnFb70+NQDm2ba2D\ncRQPYJdCfNKwczQDKLMZKayJQ1/TosOQ8Gqy7o7MAszViTFYhiCpsBkCzje0ncX5TfaU1Ak6iHVs\nrp5KPi5GcdYKmpYJPzm+P2jjgRG4R0dOnEdjYrU6ZG9vj4sXL/LyV77K8Wpt3YajrdL9ZsN6vd6K\n/y2lNk4AX1bFNNUIDFUjcLGwSRBC3Jr00zHdfo1fdbsEuGlzWFBO0dl54JTOd7cBg1uTPG1vK02m\n9dT9naYjTQehGLU4+e62IdvlCxRPphpEVWa+wbUtg29N4ESzHJu6XMw1/m6jobJioRTzdfE5Lem9\nXX/nLXvRWN2BL+c/ObfC6SjXdvRWyr62sYKte0Rk67hOy3hgBKZj8vvVJhuuIaaIKYe3vPnmm3zg\nA0/y2quvEoeEBiFlkcsYI+v1ms3GCEIOapmxJishduLwTQ4FCicgwXI2J6pwdHTE3t6etecSOyib\nnA0hRVzjIYyT3tb50b0voKLJcLnbblTNSHkSi+t9oUHAFi5QQcj8/hRAU7VCmrLyF+QcGTsqk5F4\nwyRkRM4zHlDAtaLjqApIbssuwmYYmHnPfLkkhQFNAU15MoujaRtKBXoNi4pQiSoiY1OSkrY0DcgW\nvHV/2r1mYG3QJJF1IHPVYdLaPdrnZi0uk5Ek/4Zm6LLB3bqPJk/uU/vwwAiMv/+JI6aAE58ng4Fw\nb7zxGuv1muX8DDEZY60IWwxhTUwBJeKb3Ti5iFiYa+7EZMnG9+z9YRiyStAo+zXNtZ+U23fi6bqO\nrus4Xu+48vXzSmHk3XYZdlbounKXUKJcpp10osj2Kl/+bgF/WH6+GJoiveF2ATXDOulcRxw2RI20\nbctsNuP4KBCwrIBXQWIEUtVCjNE+qyEQMy17lE1zljIcEuuhB3/nIuBiOMrjEoZMcRNVq+UQn7Zq\nIiZJh1M1HhiBO94Nk4cOiBFECWnDtetXOTw64LFHH8dLR8glrDFGhjiAi3bDNw51J9BPS+mvkMGl\nnILDbub1ZkPTtsxmHnHkfDioJmIMxBjqsU8zCEVTYJsXT933FKS77b28yu8agqK7N30NLFuwpY24\nAw6W7MH0cm4Zi5T7C0wJRJZ/Y7PZ0DgjDkkpxc6rL2gGWnOs3jgabwZURSALrJYJG0LIjU0czjW0\nbuz0PN4CWq9nCYGK/mIN6aqoae7MVGmd9+ny/h2MB0bgLkMEA/Oya973G5KahuDx+hDUb1WtxRTN\n7W8AUu3VB1JggRo/x8kkNqqr6RP0fb8F2JXvlBWoUIQd20h/jcsr2DhKmhdPY5yo+fXJxL2tLJjx\neGVS2ViAsl3ZsSmGsFsoVPYz3VdZXauRVKv9b7sOQkRIeOehidzcXKf1nksXH+PsmSWXHnuUs2fP\nAvDKK6/wla98hb7v2Ttzhs3xmkS0xqbOGRaQMr8y06XLjzFlLJbjq+BoHsUImMeR8N6RksdYoKd/\n3IuoyBVMbvwiZvb+B1X9myLyEPB3gaeBbwB/QVWvi129vwn8GLACfkpVf+N7c/jfjbHrwN3Bsmcj\nELWnaYWmFRIDWuoBco455ueoIM5WZxYLm+hqMuTicpmv5vy/3k5MCZpoMmQluaw2SqJPA0EDLokR\nYdhehWVyc5dw5KRS33rTs/3d4hEgkvP/RZzEvBahWjWj4U4Uh6b7mKoM7x5bea1ecR2FPKRmPSLz\nJvMcujlnzpzlwtlzvPjih3n++Q+xmLe8/PLLfP7zn+fNN98kIcwWS5bLPdrZnIPDQ7sOQNs0xtbM\nrcW8a+o5lP0DeCYCrDrJxDDWFxTZsRRjFUk9aZwm5uC9eAIB+Euq+hsicgb4nIh8Gvgp4JdU9b8Q\nkb8M/GXgPwF+FJMV+xDwJ4G/lf+eyrGVRUpZxTdYd5/5fEFhrpr8VEQp9OKsxbdYMO/MrRzCphba\nqINGChrfbMf6E0Bv13WvxsIbeOV0MvEm3oDqqEg0HXdLz+16BRQDlVf9GpqMXzoxxDhpf7s4xnQ/\nVd8v8xqkaZg3LWFY0zjh/IVHePLJyzz++GWatuPtd67yTz/7m7z6yjcAmM/nDMPAECOL5ZJNsPoM\n8QbIln1574kTsHNXj6HJ7dmKt1+vZ4n91eTSMzE6f8iNXziF416Uhd7AVIRR1QMReQm4DPw5THYM\n4H8GPoMZgT8H/C9qv/ivi8h5EXk8b+f0jvwbT13e8jxGm/xFmnpKummahuQFYsQLtY0YgOBrbbv1\nzcuv11V0NAwGekc034AwAagcIBZGFHfXEPtMNZaRYFS2P12xEcHLdsFPoTQXavJYQFSqCpmcx/hf\n5ePrmHirYODEWO0yIqcTshHHMFib9dZ7BKWbzXj4kYvgHfP5HNd4Do4OSWoTewjK0eqQGwfgg1wY\nAAAXtUlEQVQHPPLIY/Qh0M0XFtcrNA5Cmhiyyf6YHGc1fm4ajglOnRnnBKoNMXliGra+j54uD6CM\n7wgTEJGngY8C/xi4OJnYb2LhApiBeGXytVfza6fSCEhJ/WZPQDA5sKbJUl+4rDeXdeeK1HaybjeF\n1BNTyDH6KAYCY/4/pQR+ElNPcvi1K3CcNjTJktshGyAdjcAW6SefxG5IMF0BLcbfiekTO0aDrW1M\nJ/R0MpVdnsQk3PUKdr0H5xxe7Kp6t0A0EUOgDz3L5ZJm1vHKq29w48YNjg5u8c7b7+K8WEgWA+Ia\nVAPvXL2KirCIiTPe45yn6Tqboc5lQNVvXes7Aamj95Kl2xuPbxyqHUNY242haes7p23csxEQkX1M\nP/A/UtVbOz+oyncoGy73Td+BOxx2AYyL65hLd73raNoOTTDr5vSbASeeMKxR1awLYFp5MUSctx6B\ngss9Aah5dtOqi5Pafks3em9dcvq+r2q+U4agyXopqGPTj6Kix+tVzTxUXULva6HLNPU1pSRXenHT\n4JJ5JVONbBGpIGA1JFJoy8VQZo9FsyHJt0f5nmcHGyjNQrEqSVXrTyhi8l9t05DCgHiPX3Sgwm//\n9m/z8pe+jHfK2bNn8G1br9F6s67Hqmo1BOv1muXeHrPZvFZmSsZi7PZNE3wkn2tRY9YRDynXSDJO\nklLCIyxms63759sagLukon8/xz0ZARFpMQPwd1T17+WX3ypuvog8DrydX38NuDL5+gfya1tD77e+\nA99mCKYoQ/YCwmAqN8vFGS4+dob1eg16lSH0XDj/CP2wybqCLd4L0lk5q7jSQXe7T2Fd3bWw//J+\nZcx/i5iBWK1WNqkksBlSLegZhoHj4+NacwDU0uMilFEmv5uEIFPg0HuPVz9KezEeh7htAHHqCZQx\nBTdLSNJMDEjZljELx2tbRuERtM7//+2dS4wd6VXHf6de99Hvttvz8szY88hIyTgaJlGIRJQNEZAs\nmLDLBiIUiU0iwYJFIJtsIgUkskBCSKBECggRIRGUWYAUQCi8FIcQHCeZGU+c2O6xxx5Pt9vddvd9\nVNX3sfge9d26t909DJnbV65jWfd23dep+uqc75z/eYFo2kmbUuWUgwEb27fp7+2x2++ZhqPgoyiF\nbb0WxbbBCNWu7CIprhksuiQmGctiHD+H0XvAuzDYduOiGRm9NMN0mOiAAF8GXtZafyl46UXgk8AX\n7eM3guOfEZGvYQDB7SONBxyooS1qbnv/tbI2xXCPzVtbLC8d48yz72Vubo7duz3+4z//jcWFZUqV\n02l3uXrtNdI0I01T4iTyfnuSRqRZTK839DdgWZZEShNHYv6LIFqTRBFJFPmZA8aijRiUJSjxDUid\nUBsB0xarGC1BNgU3pkoxTsabgUZRZIxeYWRcsMaMNXf/HPIfSVVDICLENnHHfJdF1HWVJOR/w7oX\nWpvc/LQGzrnFyLKMUpmRZHmes7OzY5QqsNfvo8VYHMpmCsZRjCrzygpRyjYhHZK2zCBW1+Ld9geq\nztG5L2NTQsy5xi4PAZsVGMq/9xlnkw5jCfwC8OvAD0TknD32+xjh/xsR+RRwBTOYFODvMeHBi5gQ\n4W/+v3I8BVLatfg2wnXy5Ekg4urVq1y5coX3vOc9HDt2jEcffZSy0CRpxHA45Oabb/ib3pjI2gug\niNDpzFMUhU01Hvg23qVyQlyh2m53D3PbdckIBgDO5I7MGPIs88fdTZ7EZmCIwyXqgCG6sgpCXCKu\nhRKLAA2v5yiEoJ/Wo7ule5/SVevz+utxZEqeohg0EcRCmsUkaYRSoEtFkeeVNRLE+k0otoqM5MMh\nvV4Pba2gNI5RuipmCn/XuVF1s965OSKmf4FZE1dF6PIfZ5cOEx34d/Y/y1+c8H4NfPpt8vXO0QEK\nPI4jytJj3vR6PRYXlnj22We5ceMGL7/yEtdvvM7TT72L166u8+ADD7G0fJz19XUee+wxhkMj4Eka\nk2aJEWypGm2Y2YZt+v0+/X7fNCbNle0QFNFK2+jS9CdURb+KRujKz3d/58XATgVq+XTaECB0AlhX\nDKHwu3Cdcwl8yqzGWxkiQhqY/iHCr2y/QPd3XaBMuoXr0mPGeekqZmfzE4yFMRwOARgMBuRlSZym\nlP2qcWulxMz2XShbO6Bc0RUUubEiWoFCpTZPwLkGoZvjbw9/jQxuIC5TsUqXmGkrAJqMwQPJ9QEw\nCUCKRx59kOGg4KeXfoyIsLy8yMJil81bN3nwoTW0Krh0+SJFXrK9c9vkCXRapJnxxTVVdR2lottq\no7pzgHEx8zxnOCi88J08eZKrV9ZZX19ncXGR+fl5P4G4oPD1Aq1Wi62tLd/deH5+3o8dd0Lvfjfs\nKQBWWNVoolGSJCP4RcR4L/56LkNZlmZ0eRRRFlXf/1BgNXYAiMMJtMY3EsFFSiKULigQ0ixhZ+c2\nG5tvggXktNbeMnL8aK2JVWyTsUyyj0v5HVprIEkS6xZY/m2yT+wapdg1DxVB6MZEUYSU1Qg3xLae\nm8nAYEWNEjgEVbuZZmFhgaJTkMQp29vb3Lm7w9btW+R5jqYq7S3LktXVVd+JSOkCrUar9MQ2Fo2V\naYuVJQmdTod8aITP/fbS0hJra2u+8cjKyoppuhFn9Pt9tre3TfGMNvzFcTWmPAn89ElAmKN6KM8J\nlueVUcF3z0OFEDY8mYSUh8Chm7RkPm8EylllRWmxkogRq2JYKCSpiqogaJ0mQpZlvoZDREgtZlHm\nBX3p0263zYwHi0VENWxP13IbQvJgaqlM34h6ueAMU6MEDgIGXX6/RKAU7TQjR4gXM5aXl8kLE5vv\n9/sM8/7IzWMEUWyijw0vaY0owY0OE4mQWOxC2LTWRIjiBK2E27dvk+c5iyvLzOemrflwaPzhlaUl\nOlmLhe4ce3t7tNttAFqtFlprBkXuIwIhX2bHDq+BIBIUvVq/WoDYdi1VquoXWLcGQvfEYwJRuPub\nf2ZEg/2V0n2HmwxsFkPpgkRMWLWIzPcVZgYJpRYKpciSmKIw48qzOCa1YVQHpKZxbLoHgffhdakY\n9Pp0u10i0SCmujCRCuhUSpHsgxX4eYnuuNamVBvT39FbA3X9qmuPR5AaJXAIcuE7R7EdPRZFEVnL\n7MCdbgulFoDq5g/DbGVZVrX59QYd7kaz5rpPINKaVqtFq9Uy1oXtWOS6E1+7ds1bBWtrawwGA9pt\ngy+4MN2kikIjuFXD0xFsIHhP6B6EuzyMWhVhEc6kx1Bh+HwCGb/1XHqva0gyzA1Y+vjjj7O6usrF\nixe5u7NDmcaIViRRYjs24wU1TVPKsqSdZWgx0RMXESjLkt07e8zPm6al2l7zyLpLDmtwVAc5QzKu\njGArKMbOZZaoUQIHUP0G8GWobkMrS6LY5K6LDSF5BN3605VvXW9jbcAlBzI5gMsLVmKn45TW9E0T\nFhcXvEAqXXg02+UEaK3pdDqmP5/9HSVV4w1Xu+B89TALMXQDnCvgeAknDd0rvh5et7oCCrsgTQLi\ntI58MpTDJESEM2fOsLy8zNmzZzl/7hzbW5vkRYmkEbGY3T612IdLHiptCDWOUiR24cICkT4iMWm7\nRSfu+N8LlXCoxML119pMNL5nLCCsNZkRapTAWyER8nxIkqRENtc+zeJaeEzZrj7VJJ5KuIIwVi0Z\nZ6QCT1cZgoCv6a+X+iZpxGAwMJGBPKfT6ZjhKFFk5xi0AFOX7/PybaagKO3bmYXJQaOoew3UC47V\nhaNuTXgzOjivMPwWvs8rqwBPcT6+U6APP/wwH/nIRzh58iSXf3qRSz/5CW+88Yb31YuiIKkVI2HT\nssViI3mes7u3R6GhY/sYdjod0gnt3EMaaTMWSLdfL9+ldjYtgkYJHLBuGm3X1/iRw+EQhSZLhdTe\nRGVZIlThKpeqG0cm2CVxTBLsMqVmonktFjEXpwRcqWoy7oe7z3Y6HZ85Nxj2SdKYKBaSJPaxeBeS\nM7MJTMddSSqQ0g0WdcrHKaBQQOuIed1VcMfrRTnh++uFV+5cwnNyiqAoCqQ07byuXbvG6uoqjz32\nGM899xxPPXGK762u8u1vf4fBXo80SejlPfpDY0Eo7WY3CnFisi3zPKewbsbe3l5gEUGSZZ5HNy8h\nTHACm0Vtr2Nk18o3H2XC9KEZ0geNEjgMefCwZLd3l6xsm37/mJ3VjAUTb1qWZelvkCiKgpp880WF\nCurnJyiBCEZ2JlfMUxewwWDgw3+tVothPvC+7yQcQGs1ItiOP0fhLhjufmGxkftsiF+EwOCkyjyR\n0crKuhUR8hhaLLlNCBoOh1y/ft1bBwtzHd73vvdRFIqzZ8+yt7tHK8u8Qmq32/67wmasbq3KgbF+\ndnd3iaKIBduRyVzrEKis+MLxrVz6cPD6LEn8BGqUwBjdO1xgdl0zVGRYFCCmaEiyzDetKIqCWGnv\nEoS+PkAcO4tAe6GfBMxFtuo47BkQdhlO5ru2lNig4920y3A49IKbB1l1fre2p6XK/QtenNA6PiZF\nBMKcg0lZdu597vsmfUf4GGYbaguIpmnqezdubGzQ6/WYn59naWmJ1dVVnnrXu7hw4QKv3LjByuKS\nTRRS3NraYn5+nna7TRxFLM3Ps7KyAhjFOcgLdnd3ubmxwe7Nm5Ras7KyYoqLgmtQfy5GS48pbDhM\nCfFBYajpUaMEDkNu3XyM2gBqg8GA26UZMOJSdFtpZkeIl1Uuv4zeSP45VfnsyM85gXKFP2p0B3bg\n2tD6/Q7gi6LIx8rzPB8RLGeheFeCcbPdkVMCYezfHXePThGESUeO91HwU48d3y96ED4Oh8MRRbS9\nvc2tW7dYWFhgc3OTS5cu8cgjj3DiwQe5ePEiO7t3EaVpt9t0u12DmSQJJ06c4Pjx46RpSq/Xo93t\nUhQlJ06cYOXYMXZ2dkZSsusJUeE1ETFTl8P6DMHhBLObMNQogbdCRcHKyooxgQt8Qs9gMCAf2Ju2\n06Hb7ZImJlQlSswNE/rRdneNxYS1oDL3TVzdmPORdqbAKBtGkKATtyoBTEwLbq01KolQWeKVQ57n\npheCtqAbAKVtXYbvjmT+trMHa5iFM/tdA84Q9HNgXF0Z1KsRQ6EPgU53LHwMpygVeUlZKspScWtz\ni73BdXZ3d1laXOaFX/04P//+D/DSSy9x/dpVtNbMzc3x3veawq48z9nY2ODOnTsUXikrBnnOqVOn\nePLJJ9nr9zl//jxbW1uAydqMbPKVAw2dYowtABhJZCdDz37SUKMEDiCJbWspLRAJrSwDqVqMDYZ9\nI2iFAeGUjTVLt0sW+KnhTe8q71yvABg3naMo8gk9dR+62qVGm4y63cgpExddcJ+NY3zY0n2ve91/\nxspsWD8QRgOcbz+pJqHuEri6hnte35rw3+t9TtlkOvPPT5w4wQNra5w5cwZUydzcnG81duPGDS5c\nuECe5x6v6ff7REnKYDBgfX2dLMt4+plnOHXqFDs7OyPX312nLMsAc+3iJPVKUOmSJI4oyuq6T4ou\nHHVqlMAY1SrInFRoDcq0wxbMHAKlFLED/YKqu+FwSD8wxcHcxGVt91O+cGY0/dYlHNXDUXVFAWac\nN3Y3CkG3+nurndWFIMcFL0weKkrtowbhcRf+rHflqfv7o6E6/PH68xEedDikVHl3yBxUSByjRNHS\nmkQiNjY2uHz5MlmS0G63SZKEvf6A/zn3PdbX122bspxcmaEwDi/JLSC4tb3NxW9+k5deeYXFxUXv\ngpgcA8N7YRu+OD69S0UQzrTWgVLqKLv++1KjBA4g588rbRKEtBJKVXiwD8SmBtsbWJuY/a4VoMQO\nzAx9bH/ja9sSPKrv9k7xTAao9qP9wDb3PBROV+IbCm5owovv9R+N4QLhrl836Uctlf13+nqehGFi\nVLHUIw2uA1OSdrhz5w5XrlxhY2PDtio3n9nd3WWYD7hz5w4njh03yk/wORHD4RC0mEYwkelXuLy8\nzDPPPOPzKoz7ZCy4vbt3PX9pmiK2zDuKjWL9+otfH7kOZtbkbFGjBA7Q3FqNhoBcb3wzElxVbbzc\nF2mL3pclheQm6V0LOgGxLcRK67snYkNqytz/Og4LbEzOfn2nDXfgMURejGM/Im8aEuyYLx358KNi\nHNALQ33oyVaI+9s9TsoLcN9Xxw3q31eBlKNdkavEpeq73EKZGL5mrtMhiSI2Nzd588032d7e9mPd\n08wkRL02GPi+i67AKs/zEYus0+nQ6bY5/cQpTp8+TZqmxuwXU3NBaT4r1n1zr7vqxC988QsoXVqL\njOp+Gruvjq5p0CiBw5KITRaJiHSJEkEk8QLnIssOPY4wN3Oe5wxtGmzaapl0XptTEKbzAqb7EMGu\nHRTc3EvgJkUe3N++tBZwA0tNeHJUEB0I5y0VXUUJ6kIb/lbd3A9BvxCvmAQAut8NLYAw/AjBe4Jz\ncgKcZRlra2vMz8/T6/V8SLTXN/UVrhWbizZEUWQiB1LlLSSJSUb61re+xeuvv85TTz1lQpDLywaz\nKUbblbvfNhZJ1RzlMPjHUaVGCRySTHy9uoETXGde5ZF+MOE8JMyAMw1B8mFJ7pqKZilgquIAlLaz\nCFCVWyHid5dQYOrAk69zr/njUPXs8+nsEuAUajyFeQSxD84hRP/rFkgdZHTP64rpXm7N+N/jIGN1\n3PCRRKZBaWaxgLm5OfLCJAHNF6Y/g0upDq9Jq9UisWFUZzlordnc3KTf7/Pqq6/S7XZZXV5maWmJ\nhx94kLm5OTM2LYgSIIper+cVZzWlavaoUQIHkPeJMTX1DilGx4DzD/GpvroY76lfWjN0WJqbNFNt\nX+8PoxGBSQIysmvWXht9PrpT1wV21LUY/57Q39fBZ8LP162HSZmFk3jbzx0IrY7qczL2ntDCkFKT\nBFl+LSvI3bjD3t6eR+9hdBSbH5duz9EVGoV9F4qiYHt7m53bt1FK8WrbpIVr2/DV5y9I1SreVIFq\nJuitmSCZpHHfcSZE3gR2gY1p8/I26DizzT/M/jnMOv/wsz2Hx7XWa/WDR0IJAIjId7XW7582H/9X\nmnX+YfbPYdb5h+mcw/65ow011NB9QY0SaKih+5yOkhL4s2kz8DZp1vmH2T+HWecfpnAORwYTaKih\nhqZDR8kSaKihhqZAU1cCIvIrInJBRC6KyGenzc9hSUQui8gPROSciHzXHlsVkX8UkR/bx5Vp8xmS\niHxFRG6KyA+DYxN5FkN/bNflvIg8Pz3OPa+T+P+8iFyz63BORD4WvPZ7lv8LIvLL0+G6IhF5VET+\nRUReEpEfichv2+PTXYN6Asg7+R+IgZ8ATwAZ8H3g3dPk6S3wfhk4Xjv2h8Bn7fPPAn8wbT5r/H0Y\neB744UE8Y+ZJ/gMmD+6DwNkjyv/ngd+d8N532/upBZy291k8Zf4fAp63zxeAVy2fU12DaVsCHwAu\naq1/qrUeAl8DXpgyT2+HXgC+ap9/Ffj4FHkZI631vwK3aof34/kF4C+0oW8Dy2JG0E+N9uF/P3oB\n+JrWeqC1voQZkPuBnxlzhyCt9XWt9ffs8zvAy8AjTHkNpq0EHgFeC/6+ao/NAmngmyLy3yLyW/bY\nA7oaw34DeGA6rL0l2o/nWVqbz1hz+SuBC3ak+ReRU8DPAWeZ8hpMWwnMMn1Ia/088FHg0yLy4fBF\nbey5mQq9zCLPwJ8CTwLPAdeBP5ouOweTiMwDfwv8jtZ6J3xtGmswbSVwDXg0+PukPXbkSWt9zT7e\nBP4OY2q+4cw1+3hzehwemvbjeSbWRmv9hta61KYTy59TmfxHkn8RSTEK4K+01l+3h6e6BtNWAv8F\nPC0ip0UkAz4BvDhlng4kEZkTkQX3HPgl4IcY3j9p3/ZJ4BvT4fAt0X48vwj8hkWoPwhsBybrkaGa\nj/xrmHUAw/8nRKQlIqeBp4HvvNP8hSSmtPHLwMta6y8FL013DaaJlgYI6KsY9PZz0+bnkDw/gUGe\nvw/8yPENHAP+Gfgx8E/A6rR5rfH91xiTOcf4l5/aj2cMIv0ndl1+ALz/iPL/l5a/81ZoHgre/znL\n/wXgo0eA/w9hTP3zwDn7/2PTXoMmY7Chhu5zmrY70FBDDU2ZGiXQUEP3OTVKoKGG7nNqlEBDDd3n\n1CiBhhq6z6lRAg01dJ9TowQaaug+p0YJNNTQfU7/C3a3GFbj5S5SAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-xTQ6HjV_RsI",
        "colab_type": "code",
        "outputId": "a89b4bc7-ff78-4c6a-d918-f6b70e372f48",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "loopx = 1\n",
        "for loop in range(900,930):\n",
        "  plt.figure()   # create a new figure\n",
        "  x = read_image(df.image_path[loop])\n",
        "  plt.subplot(5,6,loopx)\n",
        "  plt.axis('off')\n",
        "  plt.imshow(x)\n",
        "  loopx = loopx+1\n",
        "x.shape"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:3: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).\n",
            "  This is separate from the ipykernel package so we can avoid doing imports until\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(224, 224, 3)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 92
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nMLerPlYw/wQjVlxs5Nh18wAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nDxXMPwG5GDeIHNbN2AAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n/wErVx8SBRZ7dQAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n92V2a95TMv8COMuYOEZyrB4AAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nib+4OIl4iwAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nRK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\ngg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n/Bt34ajzXRhbyAAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAADMAAAAzCAYAAAA6oTAqAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAJFklEQVRoge2aa4yU1RnHf+ec9513ZmcvswOyuyCr\nKwIqoFKqpfHSmBhsk6YfrHipsZrWS0NT0xqroU1qY780mja1tth+0KZiWqrRampSo+IFBKooKCKg\ngFx3Z9nduezOzrzzXs45/TCwraki4cVADc/H2bk8v/k/z/95zpwV1lo+LyGPdwLHMk7CnKhxEuZE\nDedwfxRCHNbqhBC0tHcglUvKcYl0A2Eg35oj7bpcevlFvPHaRmadexE11WCfWYvyJIFfJxqPmJU5\nn11bBqiMVxgdKzFeKR9R0tZa8bH5HM6aPw0GoD2XA2FBSkBALGjT3WRyEb6tEWmNA3T19TE6aT/S\nCuLxEN8PmD5lGsXdGr/SoFYbpVouJYI5rDJHEiaOEcrBWIMUCiktsVOlbmJ0bFDCEmLwVJq24gx8\nPySf6ibdIajX9tDaVaUxFpFyEqeSvGeybgueVEhtyHdOJq0cpAqJ4xiLQVvL+XPmEVd90mGOabl5\ntKTypPw8U7MzqO9N4VqF64jEySSGueSyi8mmXO664TruuWoxOROBiZCAEoLJHTnmzp5Ld3c337/t\nKianRwmqQ1g1grENjPSw2S66z/gChlSiXBL2jGDpTdcz1WulUCywfeMG5s6bz45qjU2FQYyxnHZa\nL91TpvLG+vU0Gg2ksCy9aykr//kir+/YQmmsgpeSxFHE4L5+4NPXq8+kZwSCDAZFxFsbN3P+ly9i\n/ZYP2DxQoFSv4SrFuF9jwztvc+t3b6E94+Gk2nh0+V8JxitkXIe+U3sIajXGa37TSDgino+NRDAW\nQ8MP+KBSIW7N8uTLa6mZCNdRdHZ0IAREUchttyzh2X+sZMbMbrZu2soVi77OunXrKKt2rOegUuDk\ngA/3AuFR55PYQraOjLJ582ZyU7uJpMVqizEGAKMtFs2rq17mwgvPpjYWMnVaD0FYomdynnd3lmgI\nQ0smC5kcIEBw1MokMgAJ9I9VqUnF3oECYRzTaDTwg4BIa4I4pHPSZHbu3Mlzzz9PaCz7C0XqoeXt\n97eCcpE2TRQaqvVa8z0TnEiSlZkQREFAEDYQSCIbNR+3tmnN1qKkQ19fH7l8nkWLLkM3fBbOX0Bp\nqMTKd3eTzvcSxzEtKY9RwCTIJxGMlJK+M89gf6Efay1RGCFlU2xjDEIIgrDB+9u305bNEgcx2zZv\noVQZpjrm448WSOVPRXgpAgFHXV8HI/E609fXR7lcRimFEOI/EEEAwKxZszDakp/UieukUcbFj2uU\nhosMFPaBsAghiGIYrYxgjqBnPsmaE/WMEII/LFtGq5fGdV2EEGitCYIAYwxaa8rlMoVCgQODQ8w7\n62x2b9/GpQu/xNyZZ+NISRjHlCtjBHUfg0okTuIyOzA4hLAKGwXYgxV/yM0ASqUSqVSKRqPBcyuf\nJxARO/buY8uO7UyeMgWhFNlslt7eXv72+Iok6SSD0VrjOA7LH3uMb11/LVEUo7VGSom1dkKpOI4p\nlYu063bOOP10Rktl/FqVu356J6f1nk6hv590Os0Tj69IZACJd7O/rFjBK2tW8efly5FSToAASMeZ\n6CUA3/fx0q1cd+1iLrhgAe9s2IiUko6O9o+oebSReGg2Ap/Vq1ezZs0a5i9YwLp164BmP1mtuXLx\nYkaGy/T372NoaAQbKx55dBU7dm7BUxUWffVrWCNZv359YpjEyhhjQFiM1egooqOtjVy2lYzjklEO\nz/79aVa99AIYw9xzzmLTprfIT+ogn++mXKrg+z5B6LNw4cLEMImVSaWaa7sQAmttc4IrQTqdQlmF\nReN5LgP797B/7x6stry25hnasx5KKT7ctZMZZ84iqNUS9csxgTk0V6xt7mSxNQhtwdqJfpHGTjxX\nOQ7fvPJW3nz9NYrFAi+sXMmLL73EcKUKCOSEJx5nmJGREay1eK4LRhMGISnPQQiBIyRWNd1taGAE\nHWm01hOu15VrA+wRDc1PisQ9I6VECoVSimKxiNYaV0mEtcTEjI5Xia1BSokrBY5UjFV30d//Ju3Z\n1qbzaYs9JEeCoZkYRiCb1msFfr0BgOu6OIcsWgikUhgEjpQgDRveehERxaScVLMMpZyw7ySRrMwE\nBGEDrTVKOjhKoCONKwSRaZaPkpKZs8/CALu3vY9jDJHVxNLQCOsoY9Eq+YyBpMrYpjJKOhhjMKZZ\nTo0wRB+sGyHlxHHADwKsFBMqGNPcGI5VJC4zS9MADiUshGC8XqcRxxhjmD59OobmGWf2nHPQWn9k\n2vf396O1PiZQyWFkC1o5jBSHkRZaMh4pxyEElOOQbWubcDtXKpRsrjhKuQjhMlIu/Q/gcYNJTZnG\nxTfcweBoRKY1i2dU09Gk4pxzz8N1PBzHwZGSPbt340lFSjWPC34YEB9U8LgrI4GsLTOw5ilaZIwr\nJDEGo5oL58z5FyDTWdIZD9fziOP4v15tMFGzNE8IZYyU/OjW7+GEEXGtDsISG4O1lq6uLt5b/y9o\njOOXRhnuH4JIE5lmf4RhjBHNNcjzPI7F3WoiGGUt5dExrv7GVbS7aYSxE1M9m/aQUhI6kutu/Da6\nWsNaM7GqHFJJCEFxeJi06yVlSTZnDOAHAf5YHeVIjI3RB7/gJUuWUIsiFIKHH36EWiMglhbXKiwG\nKQTIpjEMDAwwWDiQGCaRMtZafvvAgyz70zJ+/eBvSDstNG9pJHf/ZCmlwUHK5TJdnZ1YGTbnizCc\n0t2FMQYHgYMg35Gjd9rUxG6UeNH88Z13EAQBG97bRrHi0DHlFMYrRbq6epjeN5vqWJEtGz/ASoG0\nhtg6XHPN1axes5YvnjefZ555GpnyJo4SSSLxLcBTTz0JxhCGcN/PXuFAfTexGWNajwYaOFIyXptN\nEAgivYsWxrh76RI0MZ5oAmgMUjh857abiQ//gcBn9lMTdPX0MLm7m0yqA9wyrnRw6KRUyXP7D+/l\nB7ffQ2vWIAxINZ3Im8fv//gErR2d4DrItIuXaSGdSSU+nCVSRgjB5YuuQGvNQ797iFdfXct99/+S\nsfE6vVN7sZGkVqvyqwd+zi/uvZ9G0EZQ68GRHqQHyHgHkEIzZ84cLrn4K9x0841HlPRRXdD+v8Xn\n6v8ATsKcqHES5kSNzxXMvwEoKZXyo4LS3wAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nCuYfxylQNO6lKHsAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nKz5QZP4DowH8jYN1CuQAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nrkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nquPIU/Fv0gAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\na/CLOgAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAADMAAAAzCAYAAAA6oTAqAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAHiElEQVRoge2aa4xdVRXHf3vv87j3zr0znTsvytxp\nh0xnyqMt0AIiilVi0FACysMYIioREpPGVKKCidHwhUSTxi8EovGDEnlJEBR8NIG2KTQibaGI09J2\n2tLOMENnOs9z79zXOXtvP8yAYoB06CaOpP/kfLg5d5+9fvestfZaK1dYa/m4SP6vDXCpMzCLVWdg\nFqu8D7ophDj1VCc9Wv/yBusLBdYdH2f4qUFu/ea5rPtkCk9K6jFs31rlpR0h1eIsE/Y+RHoCIQS/\n2Lx5QUZba8WCYRYmzdarCxSAJRe0wjWtWFNHCEtdxwSezxeuTjEydJhXtxUQfhekp7DWOLPAnZsZ\nWCOg2YLEIi0IIShOTHPrDTdz9WevwpiYr9+2Aq0janEKhcBT7/kjfyg5gxEIrNYIMfcJARNjJa68\ncgODJydJ57Ks7O3FSoP0hxHZcYx8+/tu5AzGYsEoiC3EGmJ4dc/rfGfTPRwcGOaFv+1CaANVifRO\n4jVMI4SPEO6cw2HMWDRAkmBsgrAe+w4Pk2/tY2pyloZszERFs23LUbJnj2OpklIBVlqEUlitT9sC\nhzBQqSQoNLVEYExMpTLDM394mtaOTorTg4QBbHnmeWwGamqWYnGSiclxJyDgEkYKavWEMAX9+w+R\ny7Vw05du5qUX78XGBiU88o1LePK5zRwd6mfthevoWtpOU1POnQnOnmQkAwMD6GqdnTt38tboGPf+\n9D7++PTvyKYzdHYU+P6muwiVwMSWV/bu5vJPXcHg4DGHgWvt+16APdVLKM/ufeV1e+TwsN25c799\n/Ild1vNW2c9c8S27vOMy++wTf7dHdg3bsUOR3bplh92+fbu11trbv/E1Kxewz5zJ722vMzezJqFe\nKTJaj2hsaGM8jLjtjltYtfJi+nd10dOzkqz0iCsxu1/czQ9+cicAUzPTeJ5HPUlO2wZ3bmYhCABt\n6Oxs482hY/zw7ruYnp7mR/f8mHK1ypFjx5mOIr77vTsxZu7kn5yKnICAQxglBOVyGV/65FuzXPqJ\nizg0cJgvXruB8ckp3hybILOkieJsBV9JlAGSmOXLOsHRwenMzbSF7u5u4liitWH1uX387OcPEoQZ\nqGtGjg3R27Ocyy+7FK01UhqU79HU1IQUEuOgRnPaAjz02J/Zd+goNrH4PvQsKzAy9BbHj4/Q07eC\nlArISI305mL5V798AN/333G505VDGEVzcxdXfX49XqiolauYpIpC09tdoL2lmZ7CMvL5LFZapBLc\nfse3+eottzizwCGMZe/Lu7E6QRvNow8/TtqznHjzIOet6GT50jyj0SCpnMILfIQfIJTHuksud2aB\n03KmtTkDxjBb1ry2fzcnhkdI+yH1yhAm08JvH9xM7/kNtHR9Djzf5daAY5iBg3vBJOjKLB0tjQSq\nzgtbt/FyoYnD+/Zz3YYreePAPoaGRrn2xq9gmY8VwdxxeJpyl5qxeMrie4JcQ4gtV9HlGiMjI/zm\n1w+z5x/9FIuaAweHePChRwjDkFSYJhWmnYCAwzdjMfipAJlKI0lRq9VQQqCUIkznqCUxf92xg7dG\nT1KvJ9x///1s3LjR1faA0+ZM0t7eDtoyOzNDvu0stAiJtaQh20ylmnBg4AjLlp3D6tVruOmGGyhF\nEaUoQjhqN512mr3nraIURZhEYsMsqWyOupFMRxHtS88mCALGxkY5MTbGk79/CoxG8k5Re9pylwCE\n4Jobv0xVGCYnyqQbW/CjCcBQrMwSlUuEvk+xFFHXCb19K0DK+aXCCZD4oIcsaG6GYCKKqGrFdQ88\nSV5ZPj1zhHxriqf/tIXX+vsRQtKzopvnnt1GXSdzExxryTXnFwTz0c/NhEVrzYmqpD9upS2usl6F\nlGci1qy+gM6lLWy68276+vrmkoNSSJwlMsAhjBBzjd7JUomaCqnnGqnMHKY5lSa2dZrS7SzJNYAV\nGGNQSs2vW4RzM2vBFwkjY2Pg1SgLTSI8simBLwUNfkCpOIWUijiO/2vtYksACBA+vY1Z7r6og6Yw\nRbS9zERUIZNKkQnTVMoljNFY6XDy9x9y2mlKoNXXrPemuCKcoburjcGRYdpalxDHMdZoEBbPc1pF\nvSN341kBUkqsrREIgy8tay88n1RoqcxOU6/VmBwfRwmF8v13bbzoDk2Aar1OIgVaKoqzZdauWUfG\nb8QmBmtiqqUIAE9K9PxEJSqVFl/MWAteEFLo7KLzrAKeCijZGuVygo4FofColKoIKZECVCogTupk\nlzS/nQpP2wanzms0CGkQQqJNjFSKoLGZcpImCNM05M8iyKTwLIh5p6jFsRMQcFgBCCTP79yDEDHa\ngjGaXFOWqbEp0n6GvXteobvnHOqUkVLSkMmRz+eRQrF27aoFGf2RVwAWy9RsiUAKUumAzsJSPHw6\nmpeiAp81l1xMUq/S/8+9yDAgSRJKFXfxAo5rsz37juBLePyxR7j++g2s7O2lIdXA6MmT1BNNoLy5\nonL+nJEWrITOjrZ/d52noPd7M05hDg2eQEmD1RolQRtIh2mMMQgh5lOw5V1TPwmd7S2nvg0fEub/\nTR+r/wGcgVmsOgOzWPWxgvkXwtqKPZbpm9EAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nUDD/BskifxYTKmiEAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2pMDGat-Ghow",
        "colab_type": "code",
        "outputId": "f4e78986-0538-46ec-9183-f9cdac22f494",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 151
        }
      },
      "source": [
        "# get number of output units from data\n",
        "images, targets = next(iter(train_gen))\n",
        "num_units = { k.split(\"_output\")[0]:v.shape[1] for k, v in targets.items()}\n",
        "num_units"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'age': 5,\n",
              " 'bag': 3,\n",
              " 'emotion': 4,\n",
              " 'footwear': 3,\n",
              " 'gender': 2,\n",
              " 'image_quality': 3,\n",
              " 'pose': 3,\n",
              " 'weight': 4}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "15UQZ02GuCSV",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "max_lr=.35  ## This is taken from LR Finder\n",
        "epoch = 100\n",
        "\n",
        "num_samples = train_df.shape[0]\n",
        "num_epoch = 100  #@param {type:\"slider\", min:0, max:100, step:1}\n",
        "end_percentage =0.1\n",
        "scale_percentage = None\n",
        "maximum_momentum=0.95 #@param [\"0.9\", \"0.95\", \"0.975\"] {type:\"raw\"}\n",
        "minimum_momentum=0.9 #@param [\"0.9\", \"0.95\", \"0.975\"] {type:\"raw\"}\n",
        "# batch_size = '512'\n",
        "batch_size= 128 #@param [\"512\", \"256\", \"128\", \"64\"] {type:\"raw\"}"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ySDKBqErC83P",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from keras.layers import BatchNormalization\n",
        "from keras.applications import InceptionResNetV2\n",
        "from keras.layers.core import Dropout"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "03W8Pagg_Ppp",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "backbone = InceptionV3(\n",
        "    weights=None, \n",
        "    include_top=False,\n",
        "    # pooling = 'max' ,\n",
        "    input_tensor=Input(shape=(224, 224, 3))\n",
        ")\n",
        "\n",
        "neck = backbone.output\n",
        "neck = Flatten(name=\"flatten\")(neck)\n",
        "# neck = Dense(512, activation=\"relu\")(neck)\n",
        "\n",
        "\n",
        "def build_tower(in_layer):\n",
        "    neck = Dropout(0.2)(in_layer)\n",
        "    neck = Dense(128, activation=\"relu\")(neck)\n",
        "    neck = Dropout(0.3)(in_layer)\n",
        "    neck = Dense(64)(neck)\n",
        "    return neck\n",
        "\n",
        "\n",
        "def build_head(name, in_layer):\n",
        "    return Dense(\n",
        "        num_units[name], activation=\"softmax\", name=f\"{name}_output\"\n",
        "    )(in_layer)\n",
        "\n",
        "# heads\n",
        "gender = build_head(\"gender\", build_tower(neck))\n",
        "image_quality = build_head(\"image_quality\", build_tower(neck))\n",
        "age = build_head(\"age\", build_tower(neck))\n",
        "weight = build_head(\"weight\", build_tower(neck))\n",
        "bag = build_head(\"bag\", build_tower(neck))\n",
        "footwear = build_head(\"footwear\", build_tower(neck))\n",
        "emotion = build_head(\"emotion\", build_tower(neck))\n",
        "pose = build_head(\"pose\", build_tower(neck))\n",
        "\n",
        "\n",
        "model = Model(\n",
        "    inputs=backbone.input, \n",
        "    outputs=[gender, image_quality, age, weight, bag, footwear, pose, emotion]\n",
        ")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SxWVxcbi_y6V",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# freeze backbone\n",
        "for layer in model.layers:\n",
        "\tlayer.trainable = True"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UWcBvoA_HYBJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from keras.callbacks import Callback\n",
        "import keras.backend as K\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "## https://github.com/nathanhubens/KerasOneCycle/blob/master/utils/keras_OneCycle.py\n",
        "## https://github.com/nathanhubens/KerasOneCycle\n",
        "\n",
        "class OneCycle(Callback):\n",
        "    \"\"\"This callback implements a cyclical learning rate and momentum policy (CLR).\n",
        "    The method cycles the learning rate between two boundaries with\n",
        "    some constant frequency, as detailed in this paper (https://arxiv.org/abs/1506.01186).\n",
        "    The amplitude of the cycle can be scaled on a per-iteration \n",
        "    For more detail, please see paper.\n",
        "    \n",
        "    # Example\n",
        "        ```python\n",
        "            clr = OneCycle(min_lr=1e-3, max_lr=1e-2,\n",
        "                      min_mtm=0.85, max_mtm=0.95,\n",
        "                      annealing=0.1,step_size=np.ceil((X_train.shape[0]*epochs/batch_size)))\n",
        "            model.fit(X_train, Y_train, callbacks=[clr])\n",
        "        ```\n",
        "    \n",
        "    # Arguments\n",
        "        min_lr: initial learning rate which is the\n",
        "            lower boundary in the cycle.\n",
        "        max_lr: upper boundary in the cycle. Functionally,\n",
        "            it defines the cycle amplitude (max_lr - min_lr).\n",
        "        step_size: number of training iterations in the cycle. To define as `np.ceil((X_train.shape[0]*epochs/batch_size))`\n",
        "        max_mtm : initial value of the momentum    \n",
        "        min_mtm : lower boundary in the cycle.\n",
        "        annealing_stage : percentage of the iterations where the lr\n",
        "                    will decrease lower than its min_lr\n",
        "        annealing_rate : in annealing phase learning rate will be decreased to annealing_rate*min_lr\n",
        "                    \n",
        "        # References\n",
        "        Original paper: https://arxiv.org/pdf/1803.09820.pdf\n",
        "        Inspired by : https://sgugger.github.io/the-1cycle-policy.html#the-1cycle-policy\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self, min_lr=1e-5, max_lr=1e-2, min_mtm = 0.85, max_mtm=0.95, training_iterations=1000.,\n",
        "                 annealing_stage=0.1, annealing_rate=0.01):\n",
        "\n",
        "        self.min_lr = min_lr\n",
        "        self.max_lr = max_lr\n",
        "        self.min_mtm = min_mtm\n",
        "        self.max_mtm = max_mtm\n",
        "        self.annealing_stage = annealing_stage\n",
        "        self.step_size = training_iterations*(1-self.annealing_stage)/2\n",
        "        self.min_annealing_lr = annealing_rate * min_lr\n",
        "        self.iterations = 0.\n",
        "        self.training_iterations = training_iterations\n",
        "        self.history = {}\n",
        "        \n",
        "    def clr(self):\n",
        "        if self.iterations < 2*self.step_size :\n",
        "            x = np.abs(self.iterations/self.step_size - 1)\n",
        "            return self.min_lr + (self.max_lr-self.min_lr)*(1-x)\n",
        "        else:\n",
        "            x = min(1, float(self.iterations - 2 * self.step_size) / (self.training_iterations - 2 * self.step_size))\n",
        "            return self.min_lr - (self.min_lr - self.min_annealing_lr) * x\n",
        "        \n",
        "    \n",
        "    def cmtm(self):\n",
        "        if self.iterations < 2*self.step_size :   \n",
        "            x = np.abs(self.iterations/self.step_size - 1)\n",
        "        else: \n",
        "            x=1\n",
        "        return self.min_mtm + (self.max_mtm-self.min_mtm)*(x)     \n",
        "        \n",
        "    def on_train_begin(self, logs={}):\n",
        "        logs = logs or {}\n",
        "        K.set_value(self.model.optimizer.lr, self.min_lr)\n",
        "        K.set_value(self.model.optimizer.momentum, self.max_mtm)\n",
        "         \n",
        "    def on_batch_end(self, batch, logs=None):\n",
        "        \n",
        "        logs = logs or {}\n",
        "        self.iterations += 1\n",
        "    \n",
        "        self.history.setdefault('lr', []).append(K.get_value(self.model.optimizer.lr))\n",
        "        self.history.setdefault('momentum', []).append(K.get_value(self.model.optimizer.momentum))\n",
        "        self.history.setdefault('iterations', []).append(self.iterations)\n",
        "\n",
        "        for k, v in logs.items():\n",
        "            self.history.setdefault(k, []).append(v)\n",
        "        \n",
        "        K.set_value(self.model.optimizer.lr, self.clr()) \n",
        "        K.set_value(self.model.optimizer.momentum, self.cmtm())\n",
        "        \n",
        "    def plot_lr(self):\n",
        "        plt.xlabel('Training Iterations')\n",
        "        plt.ylabel('Learning Rate')\n",
        "        plt.title(\"CLR - '1 cycle' Policy\")\n",
        "        plt.plot(self.history['iterations'], self.history['lr'])\n",
        "        \n",
        "    def plot_mtm(self):\n",
        "        plt.xlabel('Training Iterations')\n",
        "        plt.ylabel('Momentum')\n",
        "        plt.title(\"CLR - '1 cycle' Policy\")\n",
        "        plt.plot(self.history['iterations'], self.history['momentum'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d93Gu8S1ICVI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "epochs=40\n",
        "batch_size=32"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a1wJkUqyHfDK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Prepare model model saving directory.\n",
        "import os\n",
        "\n",
        "model_name = 'person_attribute_model.h5'\n",
        "from keras.callbacks import ModelCheckpoint\n",
        "\n",
        "save_dir = os.path.join(os.getcwd(), 'saved_models')\n",
        "\n",
        "if not os.path.isdir(save_dir):\n",
        "    os.makedirs(save_dir)\n",
        "filepath = os.path.join(save_dir, model_name)\n",
        "\n",
        "# Prepare callbacks for model saving and for learning rate adjustment.\n",
        "checkpoint = ModelCheckpoint(filepath=filepath,\n",
        "                             monitor='val_acc',\n",
        "                             verbose=1,\n",
        "                             save_best_only=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M3SlAgN6fACQ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from keras.callbacks import Callback\n",
        "import os\n",
        "\n",
        "class EpochCheckpoint(Callback):\n",
        "\tdef __init__(self, outputPath, every=5, startAt=0):\n",
        "\t\t# call the parent constructor\n",
        "\t\tsuper(Callback, self).__init__()\n",
        "\n",
        "\t\t# store the base output path for the model, the number of\n",
        "\t\t# epochs that must pass before the model is serialized to\n",
        "\t\t# disk and the current epoch value\n",
        "\t\tself.outputPath = outputPath\n",
        "\t\tself.every = every\n",
        "\t\tself.intEpoch = startAt\n",
        "\n",
        "\tdef on_epoch_end(self, epoch, logs={}):\n",
        "\t\t# check to see if the model should be serialized to disk\n",
        "\t\tif (self.intEpoch + 1) % self.every == 0:\n",
        "\t\t\tp = os.path.sep.join([self.outputPath,\n",
        "\t\t\t\t\"epoch_{}.hdf5\".format(self.intEpoch + 1)])\n",
        "\t\t\tself.model.save(p, overwrite=True)\n",
        "\n",
        "\t\t# increment the internal epoch counter\n",
        "\t\tself.intEpoch += 1"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-kjuSAX_Vbt4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "epochCheckpoint = EpochCheckpoint('/content',\n",
        "                                  every=5,\n",
        "                                  startAt=0)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Z7qRAN6FHx9E",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "sched = OneCycle(min_lr=7e-3, max_lr=7e-1, min_mtm = 0.85, max_mtm = 0.95, \n",
        "                 annealing_stage=0.1, annealing_rate=0.01,\n",
        "                 training_iterations=np.ceil(((train_df.shape[0]*epochs)/(batch_size))))\n",
        "# callbacks=[sched,checkpoint]\n",
        "# callbacks=[sched,epochCheckpoint]\n",
        "callbacks=[epochCheckpoint]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RfPG9C2eA1zn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "losses = {\n",
        "\t\"gender_output\": \"binary_crossentropy\",\n",
        "\t\"image_quality_output\": \"categorical_crossentropy\",\n",
        "\t\"age_output\": \"categorical_crossentropy\",\n",
        "\t\"weight_output\": \"categorical_crossentropy\",\n",
        "  \"bag_output\": \"categorical_crossentropy\",\n",
        "  \"footwear_output\": \"categorical_crossentropy\",\n",
        "  \"emotion_output\": \"categorical_crossentropy\",\n",
        "  \"pose_output\": \"categorical_crossentropy\",\n",
        "}\n",
        "# loss_weights = {\"gender_output\": 1.0, \"image_quality_output\": 1.0, \"age_output\": 1.0}\n",
        "loss_weights = {\"gender_output\": 1.0,\"emotion_output\":1.1,\"weight_output\": 1.2,\"age_output\": 1.0,\"image_quality_output\": 1.0}\n",
        "\n",
        "opt = SGD(lr=0.001, momentum=0.9)\n",
        "model.compile(\n",
        "    optimizer=opt,\n",
        "    # loss=\"categorical_crossentropy\",\n",
        "    loss =losses,\n",
        "    # loss_weights=loss_weights, \n",
        "    metrics=[\"accuracy\"]\n",
        ")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zw2ZRIQ7BW-Q",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# # model.fit(X_train, y_train, validation_data=(X_valid, y_valid), batch_size=32, epochs=10)\n",
        "epochs = 40\n",
        "# lr_manager = OneCycleLR(num_samples=num_samples, batchsize=batch_size, max_lr=max_lr, maximum_momentum=0.9, verbose=True)\n",
        "# callbacks = [lr_manager]\n",
        "# # callbacks = [lr_manager,checkpoint]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P386JE935ivm",
        "colab_type": "text"
      },
      "source": [
        "## Model Training and Testing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rpxv41EyNmN4",
        "colab_type": "code",
        "outputId": "5b021b4e-186f-4061-b587-fe341d3fb1c2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "epochs = 40\n",
        "model.fit_generator(\n",
        "    generator=train_gen,\n",
        "    validation_data=valid_gen,\n",
        "    # use_multiprocessing=True,\n",
        "    workers=6, \n",
        "    # callbacks=callbacks,\n",
        "    callbacks=callbacks,\n",
        "    epochs=epochs,\n",
        "    verbose=1\n",
        ")"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/40\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 9.6399 - gender_output_loss: 0.8452 - image_quality_output_loss: 1.2219 - age_output_loss: 1.8035 - weight_output_loss: 1.1892 - bag_output_loss: 1.1021 - footwear_output_loss: 1.2775 - pose_output_loss: 1.0982 - emotion_output_loss: 1.1022 - gender_output_acc: 0.5683 - image_quality_output_acc: 0.5457 - age_output_acc: 0.3911 - weight_output_acc: 0.6348 - bag_output_acc: 0.5591 - footwear_output_acc: 0.5193 - pose_output_acc: 0.6190 - emotion_output_acc: 0.7084 - val_loss: 11.3552 - val_gender_output_loss: 0.8981 - val_image_quality_output_loss: 1.6978 - val_age_output_loss: 2.0914 - val_weight_output_loss: 1.3308 - val_bag_output_loss: 1.3374 - val_footwear_output_loss: 1.4232 - val_pose_output_loss: 1.2630 - val_emotion_output_loss: 1.3136 - val_gender_output_acc: 0.5739 - val_image_quality_output_acc: 0.5526 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6389 - val_bag_output_acc: 0.5660 - val_footwear_output_acc: 0.5382 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.6949\n",
            "Epoch 2/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.9229 - gender_output_loss: 0.8077 - image_quality_output_loss: 1.3259 - age_output_loss: 1.7743 - weight_output_loss: 1.1700 - bag_output_loss: 1.2733 - footwear_output_loss: 1.1914 - pose_output_loss: 1.0563 - emotion_output_loss: 1.3239 - gender_output_acc: 0.5759 - image_quality_output_acc: 0.5372 - age_output_acc: 0.3921 - weight_output_acc: 0.6349 - bag_output_acc: 0.5505 - footwear_output_acc: 0.5440 - pose_output_acc: 0.6187 - emotion_output_acc: 0.6954 - val_loss: 14.0216 - val_gender_output_loss: 1.0488 - val_image_quality_output_loss: 1.9037 - val_age_output_loss: 2.3506 - val_weight_output_loss: 1.4584 - val_bag_output_loss: 2.1240 - val_footwear_output_loss: 1.6243 - val_pose_output_loss: 1.3482 - val_emotion_output_loss: 2.1635 - val_gender_output_acc: 0.5878 - val_image_quality_output_acc: 0.5531 - val_age_output_acc: 0.3963 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5268 - val_footwear_output_acc: 0.5441 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.6538\n",
            "Epoch 3/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.5222 - gender_output_loss: 0.8292 - image_quality_output_loss: 1.3110 - age_output_loss: 1.7951 - weight_output_loss: 1.1553 - bag_output_loss: 1.0974 - footwear_output_loss: 1.1954 - pose_output_loss: 1.0764 - emotion_output_loss: 1.0623 - gender_output_acc: 0.5807 - image_quality_output_acc: 0.5392 - age_output_acc: 0.3911 - weight_output_acc: 0.6353 - bag_output_acc: 0.5609 - footwear_output_acc: 0.5516 - pose_output_acc: 0.6187 - emotion_output_acc: 0.7119 - val_loss: 8.4655 - val_gender_output_loss: 0.7028 - val_image_quality_output_loss: 1.1323 - val_age_output_loss: 1.5563 - val_weight_output_loss: 1.0621 - val_bag_output_loss: 1.0059 - val_footwear_output_loss: 1.0072 - val_pose_output_loss: 1.0082 - val_emotion_output_loss: 0.9908 - val_gender_output_acc: 0.5833 - val_image_quality_output_acc: 0.5655 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5655 - val_footwear_output_acc: 0.5784 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 4/40\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 9.6665 - gender_output_loss: 0.8564 - image_quality_output_loss: 1.2752 - age_output_loss: 1.8182 - weight_output_loss: 1.1829 - bag_output_loss: 1.1297 - footwear_output_loss: 1.2585 - pose_output_loss: 1.0853 - emotion_output_loss: 1.0604 - gender_output_acc: 0.5859 - image_quality_output_acc: 0.5431 - age_output_acc: 0.3891 - weight_output_acc: 0.6345 - bag_output_acc: 0.5621 - footwear_output_acc: 0.5374 - pose_output_acc: 0.6189 - emotion_output_acc: 0.7125 - val_loss: 8.4849 - val_gender_output_loss: 0.7176 - val_image_quality_output_loss: 1.0249 - val_age_output_loss: 1.5713 - val_weight_output_loss: 1.0748 - val_bag_output_loss: 1.0135 - val_footwear_output_loss: 1.0888 - val_pose_output_loss: 1.0121 - val_emotion_output_loss: 0.9818 - val_gender_output_acc: 0.5605 - val_image_quality_output_acc: 0.5739 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5620 - val_footwear_output_acc: 0.5322 - val_pose_output_acc: 0.6062 - val_emotion_output_acc: 0.7068\n",
            "Epoch 5/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.5812 - gender_output_loss: 0.8145 - image_quality_output_loss: 1.2253 - age_output_loss: 1.8064 - weight_output_loss: 1.1781 - bag_output_loss: 1.1077 - footwear_output_loss: 1.2063 - pose_output_loss: 1.0773 - emotion_output_loss: 1.1657 - gender_output_acc: 0.5779 - image_quality_output_acc: 0.5470 - age_output_acc: 0.3911 - weight_output_acc: 0.6347 - bag_output_acc: 0.5601 - footwear_output_acc: 0.5511 - pose_output_acc: 0.6183 - emotion_output_acc: 0.7044 - val_loss: 9.9539 - val_gender_output_loss: 0.8537 - val_image_quality_output_loss: 1.2310 - val_age_output_loss: 1.8704 - val_weight_output_loss: 1.2545 - val_bag_output_loss: 1.2237 - val_footwear_output_loss: 1.2506 - val_pose_output_loss: 1.1457 - val_emotion_output_loss: 1.1243 - val_gender_output_acc: 0.5903 - val_image_quality_output_acc: 0.5789 - val_age_output_acc: 0.4033 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.5650 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 6/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.4598 - gender_output_loss: 0.9123 - image_quality_output_loss: 1.1884 - age_output_loss: 1.7868 - weight_output_loss: 1.1456 - bag_output_loss: 1.1069 - footwear_output_loss: 1.1758 - pose_output_loss: 1.0947 - emotion_output_loss: 1.0492 - gender_output_acc: 0.5887 - image_quality_output_acc: 0.5484 - age_output_acc: 0.3899 - weight_output_acc: 0.6352 - bag_output_acc: 0.5637 - footwear_output_acc: 0.5661 - pose_output_acc: 0.6175 - emotion_output_acc: 0.7124 - val_loss: 8.9943 - val_gender_output_loss: 0.9523 - val_image_quality_output_loss: 1.0984 - val_age_output_loss: 1.6340 - val_weight_output_loss: 1.0948 - val_bag_output_loss: 1.0434 - val_footwear_output_loss: 1.0809 - val_pose_output_loss: 1.0728 - val_emotion_output_loss: 1.0177 - val_gender_output_acc: 0.5818 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4062 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5565 - val_footwear_output_acc: 0.5650 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 7/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.3920 - gender_output_loss: 0.9129 - image_quality_output_loss: 1.1772 - age_output_loss: 1.7857 - weight_output_loss: 1.1372 - bag_output_loss: 1.0964 - footwear_output_loss: 1.1657 - pose_output_loss: 1.0489 - emotion_output_loss: 1.0680 - gender_output_acc: 0.5932 - image_quality_output_acc: 0.5479 - age_output_acc: 0.3885 - weight_output_acc: 0.6347 - bag_output_acc: 0.5636 - footwear_output_acc: 0.5680 - pose_output_acc: 0.6189 - emotion_output_acc: 0.7127 - val_loss: 8.2653 - val_gender_output_loss: 0.6971 - val_image_quality_output_loss: 1.0584 - val_age_output_loss: 1.5304 - val_weight_output_loss: 1.0579 - val_bag_output_loss: 0.9778 - val_footwear_output_loss: 0.9854 - val_pose_output_loss: 0.9811 - val_emotion_output_loss: 0.9772 - val_gender_output_acc: 0.5972 - val_image_quality_output_acc: 0.5794 - val_age_output_acc: 0.4058 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5660 - val_footwear_output_acc: 0.5853 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 8/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.5082 - gender_output_loss: 0.9411 - image_quality_output_loss: 1.1796 - age_output_loss: 1.7559 - weight_output_loss: 1.1244 - bag_output_loss: 1.1009 - footwear_output_loss: 1.1848 - pose_output_loss: 1.0577 - emotion_output_loss: 1.1639 - gender_output_acc: 0.5953 - image_quality_output_acc: 0.5481 - age_output_acc: 0.3927 - weight_output_acc: 0.6350 - bag_output_acc: 0.5671 - footwear_output_acc: 0.5646 - pose_output_acc: 0.6192 - emotion_output_acc: 0.7047 - val_loss: 7.6579 - val_gender_output_loss: 0.6559 - val_image_quality_output_loss: 0.9592 - val_age_output_loss: 1.3906 - val_weight_output_loss: 0.9899 - val_bag_output_loss: 0.9190 - val_footwear_output_loss: 0.9057 - val_pose_output_loss: 0.9150 - val_emotion_output_loss: 0.9226 - val_gender_output_acc: 0.6081 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.4082 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.5858 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 9/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.9981 - gender_output_loss: 0.9978 - image_quality_output_loss: 1.2269 - age_output_loss: 1.8940 - weight_output_loss: 1.1722 - bag_output_loss: 1.1446 - footwear_output_loss: 1.3349 - pose_output_loss: 1.1455 - emotion_output_loss: 1.0823 - gender_output_acc: 0.5645 - image_quality_output_acc: 0.5482 - age_output_acc: 0.3852 - weight_output_acc: 0.6343 - bag_output_acc: 0.5612 - footwear_output_acc: 0.5227 - pose_output_acc: 0.6184 - emotion_output_acc: 0.7114 - val_loss: 18.9959 - val_gender_output_loss: 2.7480 - val_image_quality_output_loss: 2.1358 - val_age_output_loss: 3.7768 - val_weight_output_loss: 2.0335 - val_bag_output_loss: 2.1053 - val_footwear_output_loss: 2.6141 - val_pose_output_loss: 1.9244 - val_emotion_output_loss: 1.6580 - val_gender_output_acc: 0.4876 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.3690 - val_weight_output_acc: 0.6339 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.4841 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 10/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.5021 - gender_output_loss: 0.9746 - image_quality_output_loss: 1.1708 - age_output_loss: 1.7942 - weight_output_loss: 1.1526 - bag_output_loss: 1.1109 - footwear_output_loss: 1.2045 - pose_output_loss: 1.0503 - emotion_output_loss: 1.0443 - gender_output_acc: 0.5655 - image_quality_output_acc: 0.5472 - age_output_acc: 0.3932 - weight_output_acc: 0.6352 - bag_output_acc: 0.5603 - footwear_output_acc: 0.5430 - pose_output_acc: 0.6186 - emotion_output_acc: 0.7125 - val_loss: 16.4374 - val_gender_output_loss: 2.4364 - val_image_quality_output_loss: 1.8788 - val_age_output_loss: 2.9171 - val_weight_output_loss: 1.8833 - val_bag_output_loss: 1.8721 - val_footwear_output_loss: 2.1913 - val_pose_output_loss: 1.7078 - val_emotion_output_loss: 1.5507 - val_gender_output_acc: 0.4931 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.4043 - val_weight_output_acc: 0.6344 - val_bag_output_acc: 0.5645 - val_footwear_output_acc: 0.5030 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 11/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.2546 - gender_output_loss: 0.8894 - image_quality_output_loss: 1.1557 - age_output_loss: 1.7473 - weight_output_loss: 1.1535 - bag_output_loss: 1.0753 - footwear_output_loss: 1.1457 - pose_output_loss: 1.0587 - emotion_output_loss: 1.0291 - gender_output_acc: 0.5747 - image_quality_output_acc: 0.5486 - age_output_acc: 0.3955 - weight_output_acc: 0.6355 - bag_output_acc: 0.5628 - footwear_output_acc: 0.5576 - pose_output_acc: 0.6188 - emotion_output_acc: 0.7126 - val_loss: 8.9754 - val_gender_output_loss: 0.7534 - val_image_quality_output_loss: 1.1122 - val_age_output_loss: 1.7057 - val_weight_output_loss: 1.1326 - val_bag_output_loss: 1.0829 - val_footwear_output_loss: 1.0925 - val_pose_output_loss: 1.0573 - val_emotion_output_loss: 1.0388 - val_gender_output_acc: 0.5655 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.4038 - val_weight_output_acc: 0.6394 - val_bag_output_acc: 0.5660 - val_footwear_output_acc: 0.5689 - val_pose_output_acc: 0.6081 - val_emotion_output_acc: 0.7068\n",
            "Epoch 12/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.4316 - gender_output_loss: 0.9279 - image_quality_output_loss: 1.1740 - age_output_loss: 1.7560 - weight_output_loss: 1.1439 - bag_output_loss: 1.1262 - footwear_output_loss: 1.2016 - pose_output_loss: 1.0645 - emotion_output_loss: 1.0375 - gender_output_acc: 0.5791 - image_quality_output_acc: 0.5470 - age_output_acc: 0.3948 - weight_output_acc: 0.6345 - bag_output_acc: 0.5636 - footwear_output_acc: 0.5601 - pose_output_acc: 0.6190 - emotion_output_acc: 0.7128 - val_loss: 7.9966 - val_gender_output_loss: 0.7144 - val_image_quality_output_loss: 1.0076 - val_age_output_loss: 1.4527 - val_weight_output_loss: 1.0157 - val_bag_output_loss: 0.9493 - val_footwear_output_loss: 0.9863 - val_pose_output_loss: 0.9393 - val_emotion_output_loss: 0.9312 - val_gender_output_acc: 0.5739 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.4058 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5670 - val_footwear_output_acc: 0.5813 - val_pose_output_acc: 0.6101 - val_emotion_output_acc: 0.7068\n",
            "Epoch 13/40\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 10.1859 - gender_output_loss: 1.0180 - image_quality_output_loss: 1.3446 - age_output_loss: 1.8760 - weight_output_loss: 1.2000 - bag_output_loss: 1.2045 - footwear_output_loss: 1.3344 - pose_output_loss: 1.1216 - emotion_output_loss: 1.0869 - gender_output_acc: 0.5693 - image_quality_output_acc: 0.5411 - age_output_acc: 0.3921 - weight_output_acc: 0.6344 - bag_output_acc: 0.5609 - footwear_output_acc: 0.5470 - pose_output_acc: 0.6188 - emotion_output_acc: 0.7121 - val_loss: 9.2157 - val_gender_output_loss: 0.8226 - val_image_quality_output_loss: 1.1374 - val_age_output_loss: 1.7489 - val_weight_output_loss: 1.1538 - val_bag_output_loss: 1.1005 - val_footwear_output_loss: 1.1191 - val_pose_output_loss: 1.1072 - val_emotion_output_loss: 1.0262 - val_gender_output_acc: 0.5699 - val_image_quality_output_acc: 0.5789 - val_age_output_acc: 0.3993 - val_weight_output_acc: 0.6334 - val_bag_output_acc: 0.5660 - val_footwear_output_acc: 0.5491 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 14/40\n",
            "360/360 [==============================] - 78s 215ms/step - loss: 9.6517 - gender_output_loss: 0.9029 - image_quality_output_loss: 1.2714 - age_output_loss: 1.8271 - weight_output_loss: 1.1634 - bag_output_loss: 1.1656 - footwear_output_loss: 1.1947 - pose_output_loss: 1.0686 - emotion_output_loss: 1.0579 - gender_output_acc: 0.5733 - image_quality_output_acc: 0.5432 - age_output_acc: 0.3875 - weight_output_acc: 0.6351 - bag_output_acc: 0.5578 - footwear_output_acc: 0.5646 - pose_output_acc: 0.6169 - emotion_output_acc: 0.7130 - val_loss: 8.6849 - val_gender_output_loss: 0.8348 - val_image_quality_output_loss: 1.0569 - val_age_output_loss: 1.5975 - val_weight_output_loss: 1.0601 - val_bag_output_loss: 1.1556 - val_footwear_output_loss: 1.0100 - val_pose_output_loss: 0.9915 - val_emotion_output_loss: 0.9785 - val_gender_output_acc: 0.5670 - val_image_quality_output_acc: 0.5789 - val_age_output_acc: 0.4033 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5580 - val_footwear_output_acc: 0.5823 - val_pose_output_acc: 0.6101 - val_emotion_output_acc: 0.7068\n",
            "Epoch 15/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.6458 - gender_output_loss: 0.9279 - image_quality_output_loss: 1.1777 - age_output_loss: 1.8330 - weight_output_loss: 1.1300 - bag_output_loss: 1.2747 - footwear_output_loss: 1.1785 - pose_output_loss: 1.0830 - emotion_output_loss: 1.0410 - gender_output_acc: 0.5738 - image_quality_output_acc: 0.5485 - age_output_acc: 0.3857 - weight_output_acc: 0.6351 - bag_output_acc: 0.5531 - footwear_output_acc: 0.5707 - pose_output_acc: 0.6176 - emotion_output_acc: 0.7129 - val_loss: 8.9859 - val_gender_output_loss: 0.7982 - val_image_quality_output_loss: 1.1278 - val_age_output_loss: 1.7521 - val_weight_output_loss: 1.1009 - val_bag_output_loss: 1.0765 - val_footwear_output_loss: 1.0648 - val_pose_output_loss: 1.0552 - val_emotion_output_loss: 1.0104 - val_gender_output_acc: 0.5685 - val_image_quality_output_acc: 0.5789 - val_age_output_acc: 0.3958 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5655 - val_footwear_output_acc: 0.5779 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 16/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.4600 - gender_output_loss: 0.8350 - image_quality_output_loss: 1.1870 - age_output_loss: 1.8357 - weight_output_loss: 1.1487 - bag_output_loss: 1.1877 - footwear_output_loss: 1.1723 - pose_output_loss: 1.0682 - emotion_output_loss: 1.0254 - gender_output_acc: 0.5839 - image_quality_output_acc: 0.5481 - age_output_acc: 0.3911 - weight_output_acc: 0.6353 - bag_output_acc: 0.5556 - footwear_output_acc: 0.5727 - pose_output_acc: 0.6184 - emotion_output_acc: 0.7128 - val_loss: 9.5604 - val_gender_output_loss: 0.8544 - val_image_quality_output_loss: 1.1844 - val_age_output_loss: 1.8973 - val_weight_output_loss: 1.1388 - val_bag_output_loss: 1.1411 - val_footwear_output_loss: 1.1680 - val_pose_output_loss: 1.1240 - val_emotion_output_loss: 1.0523 - val_gender_output_acc: 0.5888 - val_image_quality_output_acc: 0.5784 - val_age_output_acc: 0.3968 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5546 - val_footwear_output_acc: 0.5759 - val_pose_output_acc: 0.6086 - val_emotion_output_acc: 0.7068\n",
            "Epoch 17/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.4322 - gender_output_loss: 0.8490 - image_quality_output_loss: 1.1710 - age_output_loss: 1.8511 - weight_output_loss: 1.1404 - bag_output_loss: 1.1377 - footwear_output_loss: 1.1694 - pose_output_loss: 1.0629 - emotion_output_loss: 1.0506 - gender_output_acc: 0.5865 - image_quality_output_acc: 0.5486 - age_output_acc: 0.3869 - weight_output_acc: 0.6351 - bag_output_acc: 0.5579 - footwear_output_acc: 0.5755 - pose_output_acc: 0.6182 - emotion_output_acc: 0.7126 - val_loss: 7.9854 - val_gender_output_loss: 0.6923 - val_image_quality_output_loss: 1.0219 - val_age_output_loss: 1.4640 - val_weight_output_loss: 1.0201 - val_bag_output_loss: 0.9921 - val_footwear_output_loss: 0.9229 - val_pose_output_loss: 0.9394 - val_emotion_output_loss: 0.9326 - val_gender_output_acc: 0.5719 - val_image_quality_output_acc: 0.5779 - val_age_output_acc: 0.4062 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5650 - val_footwear_output_acc: 0.5858 - val_pose_output_acc: 0.6101 - val_emotion_output_acc: 0.7068\n",
            "Epoch 18/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.4739 - gender_output_loss: 0.8465 - image_quality_output_loss: 1.1755 - age_output_loss: 1.8339 - weight_output_loss: 1.1401 - bag_output_loss: 1.2195 - footwear_output_loss: 1.1624 - pose_output_loss: 1.0494 - emotion_output_loss: 1.0468 - gender_output_acc: 0.5913 - image_quality_output_acc: 0.5483 - age_output_acc: 0.3883 - weight_output_acc: 0.6353 - bag_output_acc: 0.5602 - footwear_output_acc: 0.5759 - pose_output_acc: 0.6188 - emotion_output_acc: 0.7129 - val_loss: 9.6292 - val_gender_output_loss: 0.8199 - val_image_quality_output_loss: 1.1819 - val_age_output_loss: 1.9011 - val_weight_output_loss: 1.1443 - val_bag_output_loss: 1.1493 - val_footwear_output_loss: 1.2821 - val_pose_output_loss: 1.1043 - val_emotion_output_loss: 1.0463 - val_gender_output_acc: 0.5923 - val_image_quality_output_acc: 0.5784 - val_age_output_acc: 0.3943 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5660 - val_footwear_output_acc: 0.5699 - val_pose_output_acc: 0.6101 - val_emotion_output_acc: 0.7063\n",
            "Epoch 19/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.2991 - gender_output_loss: 0.8079 - image_quality_output_loss: 1.1729 - age_output_loss: 1.7980 - weight_output_loss: 1.1353 - bag_output_loss: 1.0855 - footwear_output_loss: 1.2351 - pose_output_loss: 1.0202 - emotion_output_loss: 1.0442 - gender_output_acc: 0.5917 - image_quality_output_acc: 0.5489 - age_output_acc: 0.3876 - weight_output_acc: 0.6352 - bag_output_acc: 0.5659 - footwear_output_acc: 0.5748 - pose_output_acc: 0.6186 - emotion_output_acc: 0.7132 - val_loss: 9.6534 - val_gender_output_loss: 0.8371 - val_image_quality_output_loss: 1.1927 - val_age_output_loss: 1.9092 - val_weight_output_loss: 1.1534 - val_bag_output_loss: 1.1550 - val_footwear_output_loss: 1.2475 - val_pose_output_loss: 1.0987 - val_emotion_output_loss: 1.0598 - val_gender_output_acc: 0.5868 - val_image_quality_output_acc: 0.5739 - val_age_output_acc: 0.3929 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.5774 - val_pose_output_acc: 0.6091 - val_emotion_output_acc: 0.7068\n",
            "Epoch 20/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.4369 - gender_output_loss: 0.9011 - image_quality_output_loss: 1.1723 - age_output_loss: 1.8250 - weight_output_loss: 1.1173 - bag_output_loss: 1.1007 - footwear_output_loss: 1.2427 - pose_output_loss: 1.0492 - emotion_output_loss: 1.0286 - gender_output_acc: 0.5911 - image_quality_output_acc: 0.5481 - age_output_acc: 0.3874 - weight_output_acc: 0.6353 - bag_output_acc: 0.5645 - footwear_output_acc: 0.5744 - pose_output_acc: 0.6195 - emotion_output_acc: 0.7128 - val_loss: 8.9736 - val_gender_output_loss: 0.8189 - val_image_quality_output_loss: 1.1275 - val_age_output_loss: 1.6894 - val_weight_output_loss: 1.0829 - val_bag_output_loss: 1.0552 - val_footwear_output_loss: 1.1919 - val_pose_output_loss: 1.0149 - val_emotion_output_loss: 0.9929 - val_gender_output_acc: 0.5947 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.3958 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5675 - val_footwear_output_acc: 0.5823 - val_pose_output_acc: 0.6131 - val_emotion_output_acc: 0.7068\n",
            "Epoch 21/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.4104 - gender_output_loss: 0.8275 - image_quality_output_loss: 1.2017 - age_output_loss: 1.8120 - weight_output_loss: 1.1402 - bag_output_loss: 1.0869 - footwear_output_loss: 1.2730 - pose_output_loss: 1.0397 - emotion_output_loss: 1.0293 - gender_output_acc: 0.6058 - image_quality_output_acc: 0.5463 - age_output_acc: 0.3899 - weight_output_acc: 0.6345 - bag_output_acc: 0.5651 - footwear_output_acc: 0.5769 - pose_output_acc: 0.6203 - emotion_output_acc: 0.7126 - val_loss: 8.2146 - val_gender_output_loss: 0.7071 - val_image_quality_output_loss: 1.0450 - val_age_output_loss: 1.5124 - val_weight_output_loss: 1.0420 - val_bag_output_loss: 0.9857 - val_footwear_output_loss: 1.0072 - val_pose_output_loss: 0.9591 - val_emotion_output_loss: 0.9562 - val_gender_output_acc: 0.5952 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.4053 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5650 - val_footwear_output_acc: 0.5833 - val_pose_output_acc: 0.6141 - val_emotion_output_acc: 0.7063\n",
            "Epoch 22/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.3689 - gender_output_loss: 0.8187 - image_quality_output_loss: 1.1611 - age_output_loss: 1.7909 - weight_output_loss: 1.1235 - bag_output_loss: 1.0924 - footwear_output_loss: 1.3151 - pose_output_loss: 1.0362 - emotion_output_loss: 1.0311 - gender_output_acc: 0.6066 - image_quality_output_acc: 0.5494 - age_output_acc: 0.3911 - weight_output_acc: 0.6352 - bag_output_acc: 0.5683 - footwear_output_acc: 0.5792 - pose_output_acc: 0.6199 - emotion_output_acc: 0.7125 - val_loss: 8.5511 - val_gender_output_loss: 0.7320 - val_image_quality_output_loss: 1.0753 - val_age_output_loss: 1.6166 - val_weight_output_loss: 1.0651 - val_bag_output_loss: 1.0158 - val_footwear_output_loss: 1.0561 - val_pose_output_loss: 1.0047 - val_emotion_output_loss: 0.9855 - val_gender_output_acc: 0.5952 - val_image_quality_output_acc: 0.5719 - val_age_output_acc: 0.4023 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.5893 - val_pose_output_acc: 0.6111 - val_emotion_output_acc: 0.7063\n",
            "Epoch 23/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.3438 - gender_output_loss: 0.8178 - image_quality_output_loss: 1.1570 - age_output_loss: 1.7939 - weight_output_loss: 1.1353 - bag_output_loss: 1.0834 - footwear_output_loss: 1.3053 - pose_output_loss: 1.0221 - emotion_output_loss: 1.0288 - gender_output_acc: 0.6164 - image_quality_output_acc: 0.5498 - age_output_acc: 0.3920 - weight_output_acc: 0.6358 - bag_output_acc: 0.5702 - footwear_output_acc: 0.5796 - pose_output_acc: 0.6223 - emotion_output_acc: 0.7127 - val_loss: 8.8978 - val_gender_output_loss: 0.7401 - val_image_quality_output_loss: 1.0726 - val_age_output_loss: 1.6814 - val_weight_output_loss: 1.0952 - val_bag_output_loss: 1.0515 - val_footwear_output_loss: 1.2358 - val_pose_output_loss: 1.0065 - val_emotion_output_loss: 1.0147 - val_gender_output_acc: 0.6071 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.3929 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5709 - val_footwear_output_acc: 0.5739 - val_pose_output_acc: 0.6225 - val_emotion_output_acc: 0.7063\n",
            "Epoch 24/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.3784 - gender_output_loss: 0.8159 - image_quality_output_loss: 1.1827 - age_output_loss: 1.8040 - weight_output_loss: 1.1393 - bag_output_loss: 1.0769 - footwear_output_loss: 1.3147 - pose_output_loss: 1.0132 - emotion_output_loss: 1.0318 - gender_output_acc: 0.6164 - image_quality_output_acc: 0.5497 - age_output_acc: 0.3907 - weight_output_acc: 0.6357 - bag_output_acc: 0.5706 - footwear_output_acc: 0.5790 - pose_output_acc: 0.6232 - emotion_output_acc: 0.7128 - val_loss: 11.1382 - val_gender_output_loss: 0.9021 - val_image_quality_output_loss: 1.3249 - val_age_output_loss: 2.1862 - val_weight_output_loss: 1.2775 - val_bag_output_loss: 1.3397 - val_footwear_output_loss: 1.7712 - val_pose_output_loss: 1.1940 - val_emotion_output_loss: 1.1427 - val_gender_output_acc: 0.6086 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.3879 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5575 - val_footwear_output_acc: 0.5536 - val_pose_output_acc: 0.6141 - val_emotion_output_acc: 0.7068\n",
            "Epoch 25/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.6103 - gender_output_loss: 0.8509 - image_quality_output_loss: 1.2076 - age_output_loss: 1.8240 - weight_output_loss: 1.1351 - bag_output_loss: 1.1966 - footwear_output_loss: 1.3013 - pose_output_loss: 1.0451 - emotion_output_loss: 1.0497 - gender_output_acc: 0.5973 - image_quality_output_acc: 0.5482 - age_output_acc: 0.3881 - weight_output_acc: 0.6351 - bag_output_acc: 0.5586 - footwear_output_acc: 0.5638 - pose_output_acc: 0.6198 - emotion_output_acc: 0.7128 - val_loss: 8.5523 - val_gender_output_loss: 0.7317 - val_image_quality_output_loss: 1.0687 - val_age_output_loss: 1.5746 - val_weight_output_loss: 1.1340 - val_bag_output_loss: 1.1023 - val_footwear_output_loss: 1.0004 - val_pose_output_loss: 0.9763 - val_emotion_output_loss: 0.9643 - val_gender_output_acc: 0.5585 - val_image_quality_output_acc: 0.5789 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6319 - val_bag_output_acc: 0.5551 - val_footwear_output_acc: 0.5724 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 26/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 9.3902 - gender_output_loss: 0.8411 - image_quality_output_loss: 1.1803 - age_output_loss: 1.7598 - weight_output_loss: 1.1232 - bag_output_loss: 1.2461 - footwear_output_loss: 1.1600 - pose_output_loss: 1.0368 - emotion_output_loss: 1.0429 - gender_output_acc: 0.6041 - image_quality_output_acc: 0.5496 - age_output_acc: 0.3949 - weight_output_acc: 0.6348 - bag_output_acc: 0.5586 - footwear_output_acc: 0.5869 - pose_output_acc: 0.6190 - emotion_output_acc: 0.7130 - val_loss: 9.6968 - val_gender_output_loss: 0.8290 - val_image_quality_output_loss: 1.2152 - val_age_output_loss: 1.8114 - val_weight_output_loss: 1.1661 - val_bag_output_loss: 1.3468 - val_footwear_output_loss: 1.1303 - val_pose_output_loss: 1.1103 - val_emotion_output_loss: 1.0877 - val_gender_output_acc: 0.6007 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.3943 - val_weight_output_acc: 0.6389 - val_bag_output_acc: 0.5451 - val_footwear_output_acc: 0.5868 - val_pose_output_acc: 0.6116 - val_emotion_output_acc: 0.7068\n",
            "Epoch 27/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.2048 - gender_output_loss: 0.8237 - image_quality_output_loss: 1.1611 - age_output_loss: 1.7531 - weight_output_loss: 1.1232 - bag_output_loss: 1.1624 - footwear_output_loss: 1.1325 - pose_output_loss: 1.0067 - emotion_output_loss: 1.0423 - gender_output_acc: 0.6138 - image_quality_output_acc: 0.5497 - age_output_acc: 0.3946 - weight_output_acc: 0.6359 - bag_output_acc: 0.5651 - footwear_output_acc: 0.5928 - pose_output_acc: 0.6220 - emotion_output_acc: 0.7128 - val_loss: 8.4022 - val_gender_output_loss: 0.7177 - val_image_quality_output_loss: 1.0770 - val_age_output_loss: 1.5992 - val_weight_output_loss: 1.0575 - val_bag_output_loss: 1.0013 - val_footwear_output_loss: 0.9883 - val_pose_output_loss: 1.0002 - val_emotion_output_loss: 0.9611 - val_gender_output_acc: 0.6106 - val_image_quality_output_acc: 0.5734 - val_age_output_acc: 0.3938 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.5962 - val_pose_output_acc: 0.6126 - val_emotion_output_acc: 0.7063\n",
            "Epoch 28/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.0741 - gender_output_loss: 0.7958 - image_quality_output_loss: 1.1678 - age_output_loss: 1.7745 - weight_output_loss: 1.1343 - bag_output_loss: 1.0730 - footwear_output_loss: 1.1104 - pose_output_loss: 0.9930 - emotion_output_loss: 1.0253 - gender_output_acc: 0.6201 - image_quality_output_acc: 0.5510 - age_output_acc: 0.3978 - weight_output_acc: 0.6352 - bag_output_acc: 0.5702 - footwear_output_acc: 0.5898 - pose_output_acc: 0.6277 - emotion_output_acc: 0.7127 - val_loss: 7.6406 - val_gender_output_loss: 0.6533 - val_image_quality_output_loss: 0.9716 - val_age_output_loss: 1.3916 - val_weight_output_loss: 0.9921 - val_bag_output_loss: 0.9262 - val_footwear_output_loss: 0.8915 - val_pose_output_loss: 0.8883 - val_emotion_output_loss: 0.9260 - val_gender_output_acc: 0.6156 - val_image_quality_output_acc: 0.5779 - val_age_output_acc: 0.4067 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5501 - val_footwear_output_acc: 0.5928 - val_pose_output_acc: 0.6116 - val_emotion_output_acc: 0.7068\n",
            "Epoch 29/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.1186 - gender_output_loss: 0.7971 - image_quality_output_loss: 1.1735 - age_output_loss: 1.7948 - weight_output_loss: 1.1286 - bag_output_loss: 1.0833 - footwear_output_loss: 1.1209 - pose_output_loss: 0.9971 - emotion_output_loss: 1.0233 - gender_output_acc: 0.6258 - image_quality_output_acc: 0.5507 - age_output_acc: 0.3938 - weight_output_acc: 0.6355 - bag_output_acc: 0.5739 - footwear_output_acc: 0.5928 - pose_output_acc: 0.6276 - emotion_output_acc: 0.7131 - val_loss: 9.3248 - val_gender_output_loss: 0.7983 - val_image_quality_output_loss: 1.1761 - val_age_output_loss: 1.8715 - val_weight_output_loss: 1.1410 - val_bag_output_loss: 1.1424 - val_footwear_output_loss: 1.0794 - val_pose_output_loss: 1.0585 - val_emotion_output_loss: 1.0576 - val_gender_output_acc: 0.6096 - val_image_quality_output_acc: 0.5704 - val_age_output_acc: 0.3973 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5461 - val_footwear_output_acc: 0.5972 - val_pose_output_acc: 0.6136 - val_emotion_output_acc: 0.7068\n",
            "Epoch 30/40\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 9.0609 - gender_output_loss: 0.7966 - image_quality_output_loss: 1.1493 - age_output_loss: 1.7874 - weight_output_loss: 1.1355 - bag_output_loss: 1.0608 - footwear_output_loss: 1.1040 - pose_output_loss: 0.9967 - emotion_output_loss: 1.0307 - gender_output_acc: 0.6304 - image_quality_output_acc: 0.5508 - age_output_acc: 0.3922 - weight_output_acc: 0.6352 - bag_output_acc: 0.5751 - footwear_output_acc: 0.5967 - pose_output_acc: 0.6319 - emotion_output_acc: 0.7126 - val_loss: 8.8352 - val_gender_output_loss: 0.7209 - val_image_quality_output_loss: 1.1391 - val_age_output_loss: 1.7348 - val_weight_output_loss: 1.1070 - val_bag_output_loss: 1.0489 - val_footwear_output_loss: 1.0380 - val_pose_output_loss: 1.0072 - val_emotion_output_loss: 1.0391 - val_gender_output_acc: 0.6235 - val_image_quality_output_acc: 0.5719 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5541 - val_footwear_output_acc: 0.5972 - val_pose_output_acc: 0.6136 - val_emotion_output_acc: 0.7068\n",
            "Epoch 31/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.0751 - gender_output_loss: 0.7885 - image_quality_output_loss: 1.1818 - age_output_loss: 1.7861 - weight_output_loss: 1.1470 - bag_output_loss: 1.0512 - footwear_output_loss: 1.0991 - pose_output_loss: 0.9912 - emotion_output_loss: 1.0302 - gender_output_acc: 0.6314 - image_quality_output_acc: 0.5517 - age_output_acc: 0.3929 - weight_output_acc: 0.6353 - bag_output_acc: 0.5807 - footwear_output_acc: 0.5990 - pose_output_acc: 0.6335 - emotion_output_acc: 0.7126 - val_loss: 12.0068 - val_gender_output_loss: 1.0576 - val_image_quality_output_loss: 1.4579 - val_age_output_loss: 2.5145 - val_weight_output_loss: 1.4238 - val_bag_output_loss: 1.5024 - val_footwear_output_loss: 1.5242 - val_pose_output_loss: 1.3072 - val_emotion_output_loss: 1.2192 - val_gender_output_acc: 0.6319 - val_image_quality_output_acc: 0.5734 - val_age_output_acc: 0.3824 - val_weight_output_acc: 0.6384 - val_bag_output_acc: 0.5600 - val_footwear_output_acc: 0.5749 - val_pose_output_acc: 0.6210 - val_emotion_output_acc: 0.7068\n",
            "Epoch 32/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.0167 - gender_output_loss: 0.7972 - image_quality_output_loss: 1.1757 - age_output_loss: 1.7731 - weight_output_loss: 1.1195 - bag_output_loss: 1.0643 - footwear_output_loss: 1.0895 - pose_output_loss: 0.9792 - emotion_output_loss: 1.0182 - gender_output_acc: 0.6343 - image_quality_output_acc: 0.5523 - age_output_acc: 0.3967 - weight_output_acc: 0.6354 - bag_output_acc: 0.5838 - footwear_output_acc: 0.5997 - pose_output_acc: 0.6417 - emotion_output_acc: 0.7128 - val_loss: 8.9521 - val_gender_output_loss: 0.7341 - val_image_quality_output_loss: 1.1398 - val_age_output_loss: 1.7785 - val_weight_output_loss: 1.1209 - val_bag_output_loss: 1.0817 - val_footwear_output_loss: 1.0364 - val_pose_output_loss: 1.0077 - val_emotion_output_loss: 1.0528 - val_gender_output_acc: 0.6458 - val_image_quality_output_acc: 0.5699 - val_age_output_acc: 0.3978 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5635 - val_footwear_output_acc: 0.5967 - val_pose_output_acc: 0.6161 - val_emotion_output_acc: 0.7068\n",
            "Epoch 33/40\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 8.8593 - gender_output_loss: 0.7632 - image_quality_output_loss: 1.1454 - age_output_loss: 1.7608 - weight_output_loss: 1.1114 - bag_output_loss: 1.0504 - footwear_output_loss: 1.0677 - pose_output_loss: 0.9349 - emotion_output_loss: 1.0255 - gender_output_acc: 0.6536 - image_quality_output_acc: 0.5521 - age_output_acc: 0.3972 - weight_output_acc: 0.6355 - bag_output_acc: 0.5820 - footwear_output_acc: 0.6070 - pose_output_acc: 0.6539 - emotion_output_acc: 0.7131 - val_loss: 8.6974 - val_gender_output_loss: 0.6953 - val_image_quality_output_loss: 1.1375 - val_age_output_loss: 1.7167 - val_weight_output_loss: 1.1135 - val_bag_output_loss: 1.0554 - val_footwear_output_loss: 0.9931 - val_pose_output_loss: 0.9704 - val_emotion_output_loss: 1.0156 - val_gender_output_acc: 0.6483 - val_image_quality_output_acc: 0.5709 - val_age_output_acc: 0.3993 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5635 - val_footwear_output_acc: 0.5957 - val_pose_output_acc: 0.6265 - val_emotion_output_acc: 0.7063\n",
            "Epoch 34/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.8324 - gender_output_loss: 0.7684 - image_quality_output_loss: 1.1630 - age_output_loss: 1.7473 - weight_output_loss: 1.1119 - bag_output_loss: 1.0466 - footwear_output_loss: 1.0667 - pose_output_loss: 0.9153 - emotion_output_loss: 1.0132 - gender_output_acc: 0.6599 - image_quality_output_acc: 0.5509 - age_output_acc: 0.4017 - weight_output_acc: 0.6360 - bag_output_acc: 0.5890 - footwear_output_acc: 0.6054 - pose_output_acc: 0.6588 - emotion_output_acc: 0.7125 - val_loss: 8.2256 - val_gender_output_loss: 0.6713 - val_image_quality_output_loss: 1.0729 - val_age_output_loss: 1.5758 - val_weight_output_loss: 1.0854 - val_bag_output_loss: 0.9751 - val_footwear_output_loss: 0.9547 - val_pose_output_loss: 0.9194 - val_emotion_output_loss: 0.9710 - val_gender_output_acc: 0.6652 - val_image_quality_output_acc: 0.5729 - val_age_output_acc: 0.3978 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5744 - val_footwear_output_acc: 0.5987 - val_pose_output_acc: 0.6285 - val_emotion_output_acc: 0.7068\n",
            "Epoch 35/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7905 - gender_output_loss: 0.7717 - image_quality_output_loss: 1.1470 - age_output_loss: 1.7509 - weight_output_loss: 1.1011 - bag_output_loss: 1.0411 - footwear_output_loss: 1.0501 - pose_output_loss: 0.9143 - emotion_output_loss: 1.0143 - gender_output_acc: 0.6663 - image_quality_output_acc: 0.5536 - age_output_acc: 0.4016 - weight_output_acc: 0.6359 - bag_output_acc: 0.5940 - footwear_output_acc: 0.6088 - pose_output_acc: 0.6709 - emotion_output_acc: 0.7127 - val_loss: 8.4563 - val_gender_output_loss: 0.6785 - val_image_quality_output_loss: 1.1057 - val_age_output_loss: 1.6506 - val_weight_output_loss: 1.0849 - val_bag_output_loss: 1.0145 - val_footwear_output_loss: 0.9836 - val_pose_output_loss: 0.9461 - val_emotion_output_loss: 0.9923 - val_gender_output_acc: 0.6617 - val_image_quality_output_acc: 0.5744 - val_age_output_acc: 0.3938 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5680 - val_footwear_output_acc: 0.5913 - val_pose_output_acc: 0.6329 - val_emotion_output_acc: 0.7068\n",
            "Epoch 36/40\n",
            "360/360 [==============================] - 78s 215ms/step - loss: 9.4355 - gender_output_loss: 0.8813 - image_quality_output_loss: 1.2180 - age_output_loss: 1.7755 - weight_output_loss: 1.1187 - bag_output_loss: 1.1785 - footwear_output_loss: 1.1173 - pose_output_loss: 0.9924 - emotion_output_loss: 1.1539 - gender_output_acc: 0.6438 - image_quality_output_acc: 0.5483 - age_output_acc: 0.3935 - weight_output_acc: 0.6356 - bag_output_acc: 0.5666 - footwear_output_acc: 0.5910 - pose_output_acc: 0.6431 - emotion_output_acc: 0.7042 - val_loss: 7.6906 - val_gender_output_loss: 0.6331 - val_image_quality_output_loss: 0.9833 - val_age_output_loss: 1.4092 - val_weight_output_loss: 1.0003 - val_bag_output_loss: 0.9386 - val_footwear_output_loss: 0.9210 - val_pose_output_loss: 0.8803 - val_emotion_output_loss: 0.9247 - val_gender_output_acc: 0.6498 - val_image_quality_output_acc: 0.5784 - val_age_output_acc: 0.4097 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.5670 - val_pose_output_acc: 0.6245 - val_emotion_output_acc: 0.7063\n",
            "Epoch 37/40\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 9.5638 - gender_output_loss: 0.8561 - image_quality_output_loss: 1.2856 - age_output_loss: 1.7718 - weight_output_loss: 1.1176 - bag_output_loss: 1.1024 - footwear_output_loss: 1.1421 - pose_output_loss: 0.9787 - emotion_output_loss: 1.3094 - gender_output_acc: 0.6497 - image_quality_output_acc: 0.5398 - age_output_acc: 0.3880 - weight_output_acc: 0.6353 - bag_output_acc: 0.5719 - footwear_output_acc: 0.5896 - pose_output_acc: 0.6448 - emotion_output_acc: 0.6937 - val_loss: 7.5669 - val_gender_output_loss: 0.6377 - val_image_quality_output_loss: 0.9666 - val_age_output_loss: 1.3826 - val_weight_output_loss: 0.9918 - val_bag_output_loss: 0.9099 - val_footwear_output_loss: 0.8832 - val_pose_output_loss: 0.8788 - val_emotion_output_loss: 0.9164 - val_gender_output_acc: 0.6314 - val_image_quality_output_acc: 0.5784 - val_age_output_acc: 0.4013 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5689 - val_footwear_output_acc: 0.5933 - val_pose_output_acc: 0.6205 - val_emotion_output_acc: 0.7068\n",
            "Epoch 38/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 9.0766 - gender_output_loss: 0.8069 - image_quality_output_loss: 1.1764 - age_output_loss: 1.7608 - weight_output_loss: 1.1047 - bag_output_loss: 1.1435 - footwear_output_loss: 1.1121 - pose_output_loss: 0.9464 - emotion_output_loss: 1.0258 - gender_output_acc: 0.6519 - image_quality_output_acc: 0.5502 - age_output_acc: 0.4001 - weight_output_acc: 0.6351 - bag_output_acc: 0.5842 - footwear_output_acc: 0.6060 - pose_output_acc: 0.6578 - emotion_output_acc: 0.7124 - val_loss: 7.5523 - val_gender_output_loss: 0.6331 - val_image_quality_output_loss: 0.9627 - val_age_output_loss: 1.3767 - val_weight_output_loss: 0.9994 - val_bag_output_loss: 0.9143 - val_footwear_output_loss: 0.8914 - val_pose_output_loss: 0.8550 - val_emotion_output_loss: 0.9197 - val_gender_output_acc: 0.6359 - val_image_quality_output_acc: 0.5779 - val_age_output_acc: 0.4087 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5685 - val_footwear_output_acc: 0.5962 - val_pose_output_acc: 0.6215 - val_emotion_output_acc: 0.7068\n",
            "Epoch 39/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.8287 - gender_output_loss: 0.7503 - image_quality_output_loss: 1.1556 - age_output_loss: 1.7543 - weight_output_loss: 1.1251 - bag_output_loss: 1.0564 - footwear_output_loss: 1.0720 - pose_output_loss: 0.9112 - emotion_output_loss: 1.0038 - gender_output_acc: 0.6675 - image_quality_output_acc: 0.5514 - age_output_acc: 0.3977 - weight_output_acc: 0.6369 - bag_output_acc: 0.5837 - footwear_output_acc: 0.6102 - pose_output_acc: 0.6722 - emotion_output_acc: 0.7130 - val_loss: 7.6330 - val_gender_output_loss: 0.6375 - val_image_quality_output_loss: 0.9751 - val_age_output_loss: 1.4255 - val_weight_output_loss: 1.0140 - val_bag_output_loss: 0.9337 - val_footwear_output_loss: 0.8721 - val_pose_output_loss: 0.8423 - val_emotion_output_loss: 0.9327 - val_gender_output_acc: 0.6543 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.4062 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5650 - val_footwear_output_acc: 0.6166 - val_pose_output_acc: 0.6424 - val_emotion_output_acc: 0.7059\n",
            "Epoch 40/40\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.8944 - gender_output_loss: 0.7524 - image_quality_output_loss: 1.2434 - age_output_loss: 1.7509 - weight_output_loss: 1.0905 - bag_output_loss: 1.0529 - footwear_output_loss: 1.1086 - pose_output_loss: 0.8973 - emotion_output_loss: 0.9985 - gender_output_acc: 0.6734 - image_quality_output_acc: 0.5479 - age_output_acc: 0.4015 - weight_output_acc: 0.6385 - bag_output_acc: 0.5939 - footwear_output_acc: 0.6074 - pose_output_acc: 0.6799 - emotion_output_acc: 0.7128 - val_loss: 9.7467 - val_gender_output_loss: 0.7805 - val_image_quality_output_loss: 1.2447 - val_age_output_loss: 1.9678 - val_weight_output_loss: 1.2304 - val_bag_output_loss: 1.2012 - val_footwear_output_loss: 1.1674 - val_pose_output_loss: 1.0575 - val_emotion_output_loss: 1.0973 - val_gender_output_acc: 0.6538 - val_image_quality_output_acc: 0.5739 - val_age_output_acc: 0.3829 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5699 - val_footwear_output_acc: 0.5957 - val_pose_output_acc: 0.6324 - val_emotion_output_acc: 0.7068\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f0fea9bb160>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ql9BmUdRw6zv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "opt = SGD(lr=0.0001)\n",
        "model.compile(\n",
        "    optimizer=opt,\n",
        "    # loss=\"categorical_crossentropy\",\n",
        "    loss =losses,\n",
        "    # loss_weights=loss_weights, \n",
        "    metrics=[\"accuracy\"]\n",
        ")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LGkVGqXLID1i",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model.load_weights('epoch_40.hdf5')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OsZzc_tTxJwt",
        "colab_type": "code",
        "outputId": "2ae2b15a-224f-46d8-a50c-94889b467d4c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "epochs = 40\n",
        "model.fit_generator(\n",
        "    generator=train_gen,\n",
        "    validation_data=valid_gen,\n",
        "    # use_multiprocessing=True,\n",
        "    initial_epoch=40,\n",
        "    workers=6,\n",
        "    epochs=80, \n",
        "    # callbacks=callbacks,\n",
        "    callbacks=callbacks,\n",
        "    verbose=1\n",
        ")"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 41/80\n",
            "360/360 [==============================] - 101s 280ms/step - loss: 8.8318 - gender_output_loss: 0.7536 - image_quality_output_loss: 1.1562 - age_output_loss: 1.7641 - weight_output_loss: 1.1251 - bag_output_loss: 1.0436 - footwear_output_loss: 1.0731 - pose_output_loss: 0.9140 - emotion_output_loss: 1.0021 - gender_output_acc: 0.6661 - image_quality_output_acc: 0.5513 - age_output_acc: 0.4020 - weight_output_acc: 0.6358 - bag_output_acc: 0.5898 - footwear_output_acc: 0.6108 - pose_output_acc: 0.6709 - emotion_output_acc: 0.7129 - val_loss: 8.2757 - val_gender_output_loss: 0.6738 - val_image_quality_output_loss: 1.0445 - val_age_output_loss: 1.5948 - val_weight_output_loss: 1.0825 - val_bag_output_loss: 1.0257 - val_footwear_output_loss: 0.9792 - val_pose_output_loss: 0.9036 - val_emotion_output_loss: 0.9716 - val_gender_output_acc: 0.6463 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5660 - val_footwear_output_acc: 0.6002 - val_pose_output_acc: 0.6379 - val_emotion_output_acc: 0.7068\n",
            "Epoch 42/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.8201 - gender_output_loss: 0.7492 - image_quality_output_loss: 1.1495 - age_output_loss: 1.7630 - weight_output_loss: 1.1236 - bag_output_loss: 1.0485 - footwear_output_loss: 1.0932 - pose_output_loss: 0.9106 - emotion_output_loss: 0.9825 - gender_output_acc: 0.6720 - image_quality_output_acc: 0.5509 - age_output_acc: 0.3988 - weight_output_acc: 0.6356 - bag_output_acc: 0.5908 - footwear_output_acc: 0.6089 - pose_output_acc: 0.6741 - emotion_output_acc: 0.7132 - val_loss: 8.8140 - val_gender_output_loss: 0.7023 - val_image_quality_output_loss: 1.0936 - val_age_output_loss: 1.7099 - val_weight_output_loss: 1.1173 - val_bag_output_loss: 1.1933 - val_footwear_output_loss: 1.0336 - val_pose_output_loss: 0.9558 - val_emotion_output_loss: 1.0083 - val_gender_output_acc: 0.6448 - val_image_quality_output_acc: 0.5734 - val_age_output_acc: 0.3993 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6012 - val_pose_output_acc: 0.6359 - val_emotion_output_acc: 0.7068\n",
            "Epoch 43/80\n",
            "360/360 [==============================] - 78s 215ms/step - loss: 8.8390 - gender_output_loss: 0.7420 - image_quality_output_loss: 1.1657 - age_output_loss: 1.7682 - weight_output_loss: 1.1120 - bag_output_loss: 1.0615 - footwear_output_loss: 1.0959 - pose_output_loss: 0.9015 - emotion_output_loss: 0.9922 - gender_output_acc: 0.6732 - image_quality_output_acc: 0.5517 - age_output_acc: 0.4011 - weight_output_acc: 0.6364 - bag_output_acc: 0.5864 - footwear_output_acc: 0.6107 - pose_output_acc: 0.6742 - emotion_output_acc: 0.7128 - val_loss: 8.5695 - val_gender_output_loss: 0.6757 - val_image_quality_output_loss: 1.0719 - val_age_output_loss: 1.6559 - val_weight_output_loss: 1.1158 - val_bag_output_loss: 1.1283 - val_footwear_output_loss: 1.0104 - val_pose_output_loss: 0.9222 - val_emotion_output_loss: 0.9892 - val_gender_output_acc: 0.6508 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.4023 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6042 - val_pose_output_acc: 0.6379 - val_emotion_output_acc: 0.7068\n",
            "Epoch 44/80\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.8146 - gender_output_loss: 0.7471 - image_quality_output_loss: 1.1609 - age_output_loss: 1.7497 - weight_output_loss: 1.1157 - bag_output_loss: 1.0545 - footwear_output_loss: 1.0868 - pose_output_loss: 0.9171 - emotion_output_loss: 0.9830 - gender_output_acc: 0.6731 - image_quality_output_acc: 0.5510 - age_output_acc: 0.4036 - weight_output_acc: 0.6366 - bag_output_acc: 0.5909 - footwear_output_acc: 0.6080 - pose_output_acc: 0.6750 - emotion_output_acc: 0.7129 - val_loss: 8.5651 - val_gender_output_loss: 0.6744 - val_image_quality_output_loss: 1.0720 - val_age_output_loss: 1.6560 - val_weight_output_loss: 1.1152 - val_bag_output_loss: 1.1273 - val_footwear_output_loss: 1.0099 - val_pose_output_loss: 0.9210 - val_emotion_output_loss: 0.9891 - val_gender_output_acc: 0.6498 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5600 - val_footwear_output_acc: 0.6057 - val_pose_output_acc: 0.6389 - val_emotion_output_acc: 0.7068\n",
            "Epoch 45/80\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.8282 - gender_output_loss: 0.7299 - image_quality_output_loss: 1.1679 - age_output_loss: 1.7687 - weight_output_loss: 1.1136 - bag_output_loss: 1.0464 - footwear_output_loss: 1.0835 - pose_output_loss: 0.9152 - emotion_output_loss: 1.0030 - gender_output_acc: 0.6786 - image_quality_output_acc: 0.5510 - age_output_acc: 0.4075 - weight_output_acc: 0.6361 - bag_output_acc: 0.5925 - footwear_output_acc: 0.6089 - pose_output_acc: 0.6797 - emotion_output_acc: 0.7129 - val_loss: 8.7022 - val_gender_output_loss: 0.6806 - val_image_quality_output_loss: 1.0871 - val_age_output_loss: 1.6846 - val_weight_output_loss: 1.1140 - val_bag_output_loss: 1.1726 - val_footwear_output_loss: 1.0169 - val_pose_output_loss: 0.9444 - val_emotion_output_loss: 1.0022 - val_gender_output_acc: 0.6533 - val_image_quality_output_acc: 0.5744 - val_age_output_acc: 0.4003 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5575 - val_footwear_output_acc: 0.6042 - val_pose_output_acc: 0.6384 - val_emotion_output_acc: 0.7068\n",
            "Epoch 46/80\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.8029 - gender_output_loss: 0.7359 - image_quality_output_loss: 1.1536 - age_output_loss: 1.7522 - weight_output_loss: 1.1107 - bag_output_loss: 1.0524 - footwear_output_loss: 1.0817 - pose_output_loss: 0.9143 - emotion_output_loss: 1.0020 - gender_output_acc: 0.6788 - image_quality_output_acc: 0.5511 - age_output_acc: 0.4044 - weight_output_acc: 0.6370 - bag_output_acc: 0.5908 - footwear_output_acc: 0.6100 - pose_output_acc: 0.6827 - emotion_output_acc: 0.7128 - val_loss: 8.6582 - val_gender_output_loss: 0.6802 - val_image_quality_output_loss: 1.0812 - val_age_output_loss: 1.6795 - val_weight_output_loss: 1.1159 - val_bag_output_loss: 1.1520 - val_footwear_output_loss: 1.0176 - val_pose_output_loss: 0.9352 - val_emotion_output_loss: 0.9964 - val_gender_output_acc: 0.6567 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5565 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7068\n",
            "Epoch 47/80\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.8420 - gender_output_loss: 0.7505 - image_quality_output_loss: 1.1514 - age_output_loss: 1.7624 - weight_output_loss: 1.1164 - bag_output_loss: 1.0554 - footwear_output_loss: 1.1154 - pose_output_loss: 0.9061 - emotion_output_loss: 0.9844 - gender_output_acc: 0.6762 - image_quality_output_acc: 0.5512 - age_output_acc: 0.4030 - weight_output_acc: 0.6371 - bag_output_acc: 0.5900 - footwear_output_acc: 0.6126 - pose_output_acc: 0.6799 - emotion_output_acc: 0.7128 - val_loss: 8.5609 - val_gender_output_loss: 0.6739 - val_image_quality_output_loss: 1.0743 - val_age_output_loss: 1.6564 - val_weight_output_loss: 1.1100 - val_bag_output_loss: 1.1343 - val_footwear_output_loss: 1.0013 - val_pose_output_loss: 0.9139 - val_emotion_output_loss: 0.9969 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.4033 - val_weight_output_acc: 0.6349 - val_bag_output_acc: 0.5595 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6394 - val_emotion_output_acc: 0.7068\n",
            "Epoch 48/80\n",
            "176/360 [=============>................] - ETA: 37s - loss: 8.7969 - gender_output_loss: 0.7562 - image_quality_output_loss: 1.1267 - age_output_loss: 1.7610 - weight_output_loss: 1.1044 - bag_output_loss: 1.0423 - footwear_output_loss: 1.0892 - pose_output_loss: 0.9350 - emotion_output_loss: 0.9822 - gender_output_acc: 0.6767 - image_quality_output_acc: 0.5547 - age_output_acc: 0.4032 - weight_output_acc: 0.6419 - bag_output_acc: 0.5902 - footwear_output_acc: 0.6129 - pose_output_acc: 0.6832 - emotion_output_acc: 0.7159Epoch 41/80\n",
            "360/360 [==============================] - 101s 280ms/step - loss: 8.8318 - gender_output_loss: 0.7536 - image_quality_output_loss: 1.1562 - age_output_loss: 1.7641 - weight_output_loss: 1.1251 - bag_output_loss: 1.0436 - footwear_output_loss: 1.0731 - pose_output_loss: 0.9140 - emotion_output_loss: 1.0021 - gender_output_acc: 0.6661 - image_quality_output_acc: 0.5513 - age_output_acc: 0.4020 - weight_output_acc: 0.6358 - bag_output_acc: 0.5898 - footwear_output_acc: 0.6108 - pose_output_acc: 0.6709 - emotion_output_acc: 0.7129 - val_loss: 8.2757 - val_gender_output_loss: 0.6738 - val_image_quality_output_loss: 1.0445 - val_age_output_loss: 1.5948 - val_weight_output_loss: 1.0825 - val_bag_output_loss: 1.0257 - val_footwear_output_loss: 0.9792 - val_pose_output_loss: 0.9036 - val_emotion_output_loss: 0.9716 - val_gender_output_acc: 0.6463 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5660 - val_footwear_output_acc: 0.6002 - val_pose_output_acc: 0.6379 - val_emotion_output_acc: 0.7068\n",
            "Epoch 42/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.8201 - gender_output_loss: 0.7492 - image_quality_output_loss: 1.1495 - age_output_loss: 1.7630 - weight_output_loss: 1.1236 - bag_output_loss: 1.0485 - footwear_output_loss: 1.0932 - pose_output_loss: 0.9106 - emotion_output_loss: 0.9825 - gender_output_acc: 0.6720 - image_quality_output_acc: 0.5509 - age_output_acc: 0.3988 - weight_output_acc: 0.6356 - bag_output_acc: 0.5908 - footwear_output_acc: 0.6089 - pose_output_acc: 0.6741 - emotion_output_acc: 0.7132 - val_loss: 8.8140 - val_gender_output_loss: 0.7023 - val_image_quality_output_loss: 1.0936 - val_age_output_loss: 1.7099 - val_weight_output_loss: 1.1173 - val_bag_output_loss: 1.1933 - val_footwear_output_loss: 1.0336 - val_pose_output_loss: 0.9558 - val_emotion_output_loss: 1.0083 - val_gender_output_acc: 0.6448 - val_image_quality_output_acc: 0.5734 - val_age_output_acc: 0.3993 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6012 - val_pose_output_acc: 0.6359 - val_emotion_output_acc: 0.7068\n",
            "Epoch 43/80\n",
            "360/360 [==============================] - 78s 215ms/step - loss: 8.8390 - gender_output_loss: 0.7420 - image_quality_output_loss: 1.1657 - age_output_loss: 1.7682 - weight_output_loss: 1.1120 - bag_output_loss: 1.0615 - footwear_output_loss: 1.0959 - pose_output_loss: 0.9015 - emotion_output_loss: 0.9922 - gender_output_acc: 0.6732 - image_quality_output_acc: 0.5517 - age_output_acc: 0.4011 - weight_output_acc: 0.6364 - bag_output_acc: 0.5864 - footwear_output_acc: 0.6107 - pose_output_acc: 0.6742 - emotion_output_acc: 0.7128 - val_loss: 8.5695 - val_gender_output_loss: 0.6757 - val_image_quality_output_loss: 1.0719 - val_age_output_loss: 1.6559 - val_weight_output_loss: 1.1158 - val_bag_output_loss: 1.1283 - val_footwear_output_loss: 1.0104 - val_pose_output_loss: 0.9222 - val_emotion_output_loss: 0.9892 - val_gender_output_acc: 0.6508 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.4023 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6042 - val_pose_output_acc: 0.6379 - val_emotion_output_acc: 0.7068\n",
            "Epoch 44/80\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.8146 - gender_output_loss: 0.7471 - image_quality_output_loss: 1.1609 - age_output_loss: 1.7497 - weight_output_loss: 1.1157 - bag_output_loss: 1.0545 - footwear_output_loss: 1.0868 - pose_output_loss: 0.9171 - emotion_output_loss: 0.9830 - gender_output_acc: 0.6731 - image_quality_output_acc: 0.5510 - age_output_acc: 0.4036 - weight_output_acc: 0.6366 - bag_output_acc: 0.5909 - footwear_output_acc: 0.6080 - pose_output_acc: 0.6750 - emotion_output_acc: 0.7129 - val_loss: 8.5651 - val_gender_output_loss: 0.6744 - val_image_quality_output_loss: 1.0720 - val_age_output_loss: 1.6560 - val_weight_output_loss: 1.1152 - val_bag_output_loss: 1.1273 - val_footwear_output_loss: 1.0099 - val_pose_output_loss: 0.9210 - val_emotion_output_loss: 0.9891 - val_gender_output_acc: 0.6498 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5600 - val_footwear_output_acc: 0.6057 - val_pose_output_acc: 0.6389 - val_emotion_output_acc: 0.7068\n",
            "Epoch 45/80\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.8282 - gender_output_loss: 0.7299 - image_quality_output_loss: 1.1679 - age_output_loss: 1.7687 - weight_output_loss: 1.1136 - bag_output_loss: 1.0464 - footwear_output_loss: 1.0835 - pose_output_loss: 0.9152 - emotion_output_loss: 1.0030 - gender_output_acc: 0.6786 - image_quality_output_acc: 0.5510 - age_output_acc: 0.4075 - weight_output_acc: 0.6361 - bag_output_acc: 0.5925 - footwear_output_acc: 0.6089 - pose_output_acc: 0.6797 - emotion_output_acc: 0.7129 - val_loss: 8.7022 - val_gender_output_loss: 0.6806 - val_image_quality_output_loss: 1.0871 - val_age_output_loss: 1.6846 - val_weight_output_loss: 1.1140 - val_bag_output_loss: 1.1726 - val_footwear_output_loss: 1.0169 - val_pose_output_loss: 0.9444 - val_emotion_output_loss: 1.0022 - val_gender_output_acc: 0.6533 - val_image_quality_output_acc: 0.5744 - val_age_output_acc: 0.4003 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5575 - val_footwear_output_acc: 0.6042 - val_pose_output_acc: 0.6384 - val_emotion_output_acc: 0.7068\n",
            "Epoch 46/80\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.8029 - gender_output_loss: 0.7359 - image_quality_output_loss: 1.1536 - age_output_loss: 1.7522 - weight_output_loss: 1.1107 - bag_output_loss: 1.0524 - footwear_output_loss: 1.0817 - pose_output_loss: 0.9143 - emotion_output_loss: 1.0020 - gender_output_acc: 0.6788 - image_quality_output_acc: 0.5511 - age_output_acc: 0.4044 - weight_output_acc: 0.6370 - bag_output_acc: 0.5908 - footwear_output_acc: 0.6100 - pose_output_acc: 0.6827 - emotion_output_acc: 0.7128 - val_loss: 8.6582 - val_gender_output_loss: 0.6802 - val_image_quality_output_loss: 1.0812 - val_age_output_loss: 1.6795 - val_weight_output_loss: 1.1159 - val_bag_output_loss: 1.1520 - val_footwear_output_loss: 1.0176 - val_pose_output_loss: 0.9352 - val_emotion_output_loss: 0.9964 - val_gender_output_acc: 0.6567 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5565 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7068\n",
            "Epoch 47/80\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.8420 - gender_output_loss: 0.7505 - image_quality_output_loss: 1.1514 - age_output_loss: 1.7624 - weight_output_loss: 1.1164 - bag_output_loss: 1.0554 - footwear_output_loss: 1.1154 - pose_output_loss: 0.9061 - emotion_output_loss: 0.9844 - gender_output_acc: 0.6762 - image_quality_output_acc: 0.5512 - age_output_acc: 0.4030 - weight_output_acc: 0.6371 - bag_output_acc: 0.5900 - footwear_output_acc: 0.6126 - pose_output_acc: 0.6799 - emotion_output_acc: 0.7128 - val_loss: 8.5609 - val_gender_output_loss: 0.6739 - val_image_quality_output_loss: 1.0743 - val_age_output_loss: 1.6564 - val_weight_output_loss: 1.1100 - val_bag_output_loss: 1.1343 - val_footwear_output_loss: 1.0013 - val_pose_output_loss: 0.9139 - val_emotion_output_loss: 0.9969 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.4033 - val_weight_output_acc: 0.6349 - val_bag_output_acc: 0.5595 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6394 - val_emotion_output_acc: 0.7068\n",
            "Epoch 48/80\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.8148 - gender_output_loss: 0.7494 - image_quality_output_loss: 1.1550 - age_output_loss: 1.7623 - weight_output_loss: 1.1105 - bag_output_loss: 1.0371 - footwear_output_loss: 1.0938 - pose_output_loss: 0.9137 - emotion_output_loss: 0.9929 - gender_output_acc: 0.6781 - image_quality_output_acc: 0.5508 - age_output_acc: 0.4008 - weight_output_acc: 0.6369 - bag_output_acc: 0.5919 - footwear_output_acc: 0.6101 - pose_output_acc: 0.6798 - emotion_output_acc: 0.7133 - val_loss: 8.7445 - val_gender_output_loss: 0.6946 - val_image_quality_output_loss: 1.0813 - val_age_output_loss: 1.6923 - val_weight_output_loss: 1.1228 - val_bag_output_loss: 1.1600 - val_footwear_output_loss: 1.0342 - val_pose_output_loss: 0.9504 - val_emotion_output_loss: 1.0088 - val_gender_output_acc: 0.6528 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.4033 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5561 - val_footwear_output_acc: 0.6012 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.8148 - gender_output_loss: 0.7494 - image_quality_output_loss: 1.1550 - age_output_loss: 1.7623 - weight_output_loss: 1.1105 - bag_output_loss: 1.0371 - footwear_output_loss: 1.0938 - pose_output_loss: 0.9137 - emotion_output_loss: 0.9929 - gender_output_acc: 0.6781 - image_quality_output_acc: 0.5508 - age_output_acc: 0.4008 - weight_output_acc: 0.6369 - bag_output_acc: 0.5919 - footwear_output_acc: 0.6101 - pose_output_acc: 0.6798 - emotion_output_acc: 0.7133 - val_loss: 8.7445 - val_gender_output_loss: 0.6946 - val_image_quality_output_loss: 1.0813 - val_age_output_loss: 1.6923 - val_weight_output_loss: 1.1228 - val_bag_output_loss: 1.1600 - val_footwear_output_loss: 1.0342 - val_pose_output_loss: 0.9504 - val_emotion_output_loss: 1.0088 - val_gender_output_acc: 0.6528 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.4033 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5561 - val_footwear_output_acc: 0.6012 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7068\n",
            "Epoch 49/80\n",
            "Epoch 49/80\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7530 - gender_output_loss: 0.7223 - image_quality_output_loss: 1.1509 - age_output_loss: 1.7620 - weight_output_loss: 1.0952 - bag_output_loss: 1.0437 - footwear_output_loss: 1.0815 - pose_output_loss: 0.9070 - emotion_output_loss: 0.9903 - gender_output_acc: 0.6836 - image_quality_output_acc: 0.5510 - age_output_acc: 0.4023 - weight_output_acc: 0.6372 - bag_output_acc: 0.5961 - footwear_output_acc: 0.6095 - pose_output_acc: 0.6805 - emotion_output_acc: 0.7126 - val_loss: 8.5670 - val_gender_output_loss: 0.6790 - val_image_quality_output_loss: 1.0753 - val_age_output_loss: 1.6570 - val_weight_output_loss: 1.1096 - val_bag_output_loss: 1.1343 - val_footwear_output_loss: 1.0018 - val_pose_output_loss: 0.9129 - val_emotion_output_loss: 0.9971 - val_gender_output_acc: 0.6567 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6349 - val_bag_output_acc: 0.5561 - val_footwear_output_acc: 0.6042 - val_pose_output_acc: 0.6419 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7530 - gender_output_loss: 0.7223 - image_quality_output_loss: 1.1509 - age_output_loss: 1.7620 - weight_output_loss: 1.0952 - bag_output_loss: 1.0437 - footwear_output_loss: 1.0815 - pose_output_loss: 0.9070 - emotion_output_loss: 0.9903 - gender_output_acc: 0.6836 - image_quality_output_acc: 0.5510 - age_output_acc: 0.4023 - weight_output_acc: 0.6372 - bag_output_acc: 0.5961 - footwear_output_acc: 0.6095 - pose_output_acc: 0.6805 - emotion_output_acc: 0.7126 - val_loss: 8.5670 - val_gender_output_loss: 0.6790 - val_image_quality_output_loss: 1.0753 - val_age_output_loss: 1.6570 - val_weight_output_loss: 1.1096 - val_bag_output_loss: 1.1343 - val_footwear_output_loss: 1.0018 - val_pose_output_loss: 0.9129 - val_emotion_output_loss: 0.9971 - val_gender_output_acc: 0.6567 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6349 - val_bag_output_acc: 0.5561 - val_footwear_output_acc: 0.6042 - val_pose_output_acc: 0.6419 - val_emotion_output_acc: 0.7068\n",
            "Epoch 50/80\n",
            "Epoch 50/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.6934 - gender_output_loss: 0.7199 - image_quality_output_loss: 1.1336 - age_output_loss: 1.7426 - weight_output_loss: 1.1015 - bag_output_loss: 1.0391 - footwear_output_loss: 1.0749 - pose_output_loss: 0.8952 - emotion_output_loss: 0.9865 - gender_output_acc: 0.6845 - image_quality_output_acc: 0.5523 - age_output_acc: 0.4057 - weight_output_acc: 0.6372 - bag_output_acc: 0.5955 - footwear_output_acc: 0.6135 - pose_output_acc: 0.6821 - emotion_output_acc: 0.7130 - val_loss: 8.8997 - val_gender_output_loss: 0.7072 - val_image_quality_output_loss: 1.0917 - val_age_output_loss: 1.7427 - val_weight_output_loss: 1.1349 - val_bag_output_loss: 1.1812 - val_footwear_output_loss: 1.0624 - val_pose_output_loss: 0.9630 - val_emotion_output_loss: 1.0167 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5561 - val_footwear_output_acc: 0.5987 - val_pose_output_acc: 0.6379 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.6934 - gender_output_loss: 0.7199 - image_quality_output_loss: 1.1336 - age_output_loss: 1.7426 - weight_output_loss: 1.1015 - bag_output_loss: 1.0391 - footwear_output_loss: 1.0749 - pose_output_loss: 0.8952 - emotion_output_loss: 0.9865 - gender_output_acc: 0.6845 - image_quality_output_acc: 0.5523 - age_output_acc: 0.4057 - weight_output_acc: 0.6372 - bag_output_acc: 0.5955 - footwear_output_acc: 0.6135 - pose_output_acc: 0.6821 - emotion_output_acc: 0.7130 - val_loss: 8.8997 - val_gender_output_loss: 0.7072 - val_image_quality_output_loss: 1.0917 - val_age_output_loss: 1.7427 - val_weight_output_loss: 1.1349 - val_bag_output_loss: 1.1812 - val_footwear_output_loss: 1.0624 - val_pose_output_loss: 0.9630 - val_emotion_output_loss: 1.0167 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5561 - val_footwear_output_acc: 0.5987 - val_pose_output_acc: 0.6379 - val_emotion_output_acc: 0.7068\n",
            "Epoch 51/80\n",
            "Epoch 51/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7732 - gender_output_loss: 0.7336 - image_quality_output_loss: 1.1595 - age_output_loss: 1.7708 - weight_output_loss: 1.0984 - bag_output_loss: 1.0468 - footwear_output_loss: 1.0819 - pose_output_loss: 0.8903 - emotion_output_loss: 0.9918 - gender_output_acc: 0.6811 - image_quality_output_acc: 0.5519 - age_output_acc: 0.4054 - weight_output_acc: 0.6381 - bag_output_acc: 0.5931 - footwear_output_acc: 0.6118 - pose_output_acc: 0.6806 - emotion_output_acc: 0.7131 - val_loss: 8.7266 - val_gender_output_loss: 0.6927 - val_image_quality_output_loss: 1.0851 - val_age_output_loss: 1.6926 - val_weight_output_loss: 1.1222 - val_bag_output_loss: 1.1398 - val_footwear_output_loss: 1.0350 - val_pose_output_loss: 0.9496 - val_emotion_output_loss: 1.0097 - val_gender_output_acc: 0.6597 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5565 - val_footwear_output_acc: 0.6017 - val_pose_output_acc: 0.6374 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7732 - gender_output_loss: 0.7336 - image_quality_output_loss: 1.1595 - age_output_loss: 1.7708 - weight_output_loss: 1.0984 - bag_output_loss: 1.0468 - footwear_output_loss: 1.0819 - pose_output_loss: 0.8903 - emotion_output_loss: 0.9918 - gender_output_acc: 0.6811 - image_quality_output_acc: 0.5519 - age_output_acc: 0.4054 - weight_output_acc: 0.6381 - bag_output_acc: 0.5931 - footwear_output_acc: 0.6118 - pose_output_acc: 0.6806 - emotion_output_acc: 0.7131 - val_loss: 8.7266 - val_gender_output_loss: 0.6927 - val_image_quality_output_loss: 1.0851 - val_age_output_loss: 1.6926 - val_weight_output_loss: 1.1222 - val_bag_output_loss: 1.1398 - val_footwear_output_loss: 1.0350 - val_pose_output_loss: 0.9496 - val_emotion_output_loss: 1.0097 - val_gender_output_acc: 0.6597 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5565 - val_footwear_output_acc: 0.6017 - val_pose_output_acc: 0.6374 - val_emotion_output_acc: 0.7068\n",
            "Epoch 52/80\n",
            "Epoch 52/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7717 - gender_output_loss: 0.7385 - image_quality_output_loss: 1.1380 - age_output_loss: 1.7515 - weight_output_loss: 1.1128 - bag_output_loss: 1.0599 - footwear_output_loss: 1.1086 - pose_output_loss: 0.8802 - emotion_output_loss: 0.9822 - gender_output_acc: 0.6797 - image_quality_output_acc: 0.5535 - age_output_acc: 0.4074 - weight_output_acc: 0.6378 - bag_output_acc: 0.5952 - footwear_output_acc: 0.6116 - pose_output_acc: 0.6847 - emotion_output_acc: 0.7129 - val_loss: 8.7333 - val_gender_output_loss: 0.6931 - val_image_quality_output_loss: 1.0825 - val_age_output_loss: 1.7012 - val_weight_output_loss: 1.1222 - val_bag_output_loss: 1.1391 - val_footwear_output_loss: 1.0330 - val_pose_output_loss: 0.9507 - val_emotion_output_loss: 1.0116 - val_gender_output_acc: 0.6597 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4053 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5556 - val_footwear_output_acc: 0.6012 - val_pose_output_acc: 0.6374 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7717 - gender_output_loss: 0.7385 - image_quality_output_loss: 1.1380 - age_output_loss: 1.7515 - weight_output_loss: 1.1128 - bag_output_loss: 1.0599 - footwear_output_loss: 1.1086 - pose_output_loss: 0.8802 - emotion_output_loss: 0.9822 - gender_output_acc: 0.6797 - image_quality_output_acc: 0.5535 - age_output_acc: 0.4074 - weight_output_acc: 0.6378 - bag_output_acc: 0.5952 - footwear_output_acc: 0.6116 - pose_output_acc: 0.6847 - emotion_output_acc: 0.7129 - val_loss: 8.7333 - val_gender_output_loss: 0.6931 - val_image_quality_output_loss: 1.0825 - val_age_output_loss: 1.7012 - val_weight_output_loss: 1.1222 - val_bag_output_loss: 1.1391 - val_footwear_output_loss: 1.0330 - val_pose_output_loss: 0.9507 - val_emotion_output_loss: 1.0116 - val_gender_output_acc: 0.6597 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4053 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5556 - val_footwear_output_acc: 0.6012 - val_pose_output_acc: 0.6374 - val_emotion_output_acc: 0.7068\n",
            "Epoch 53/80\n",
            "Epoch 53/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7260 - gender_output_loss: 0.7393 - image_quality_output_loss: 1.1483 - age_output_loss: 1.7441 - weight_output_loss: 1.0959 - bag_output_loss: 1.0496 - footwear_output_loss: 1.0711 - pose_output_loss: 0.8894 - emotion_output_loss: 0.9884 - gender_output_acc: 0.6826 - image_quality_output_acc: 0.5515 - age_output_acc: 0.4025 - weight_output_acc: 0.6378 - bag_output_acc: 0.5960 - footwear_output_acc: 0.6115 - pose_output_acc: 0.6844 - emotion_output_acc: 0.7129 - val_loss: 8.7533 - val_gender_output_loss: 0.6976 - val_image_quality_output_loss: 1.0834 - val_age_output_loss: 1.7034 - val_weight_output_loss: 1.1244 - val_bag_output_loss: 1.1428 - val_footwear_output_loss: 1.0327 - val_pose_output_loss: 0.9553 - val_emotion_output_loss: 1.0136 - val_gender_output_acc: 0.6582 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.4033 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5546 - val_footwear_output_acc: 0.6007 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7073\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7260 - gender_output_loss: 0.7393 - image_quality_output_loss: 1.1483 - age_output_loss: 1.7441 - weight_output_loss: 1.0959 - bag_output_loss: 1.0496 - footwear_output_loss: 1.0711 - pose_output_loss: 0.8894 - emotion_output_loss: 0.9884 - gender_output_acc: 0.6826 - image_quality_output_acc: 0.5515 - age_output_acc: 0.4025 - weight_output_acc: 0.6378 - bag_output_acc: 0.5960 - footwear_output_acc: 0.6115 - pose_output_acc: 0.6844 - emotion_output_acc: 0.7129 - val_loss: 8.7533 - val_gender_output_loss: 0.6976 - val_image_quality_output_loss: 1.0834 - val_age_output_loss: 1.7034 - val_weight_output_loss: 1.1244 - val_bag_output_loss: 1.1428 - val_footwear_output_loss: 1.0327 - val_pose_output_loss: 0.9553 - val_emotion_output_loss: 1.0136 - val_gender_output_acc: 0.6582 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.4033 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5546 - val_footwear_output_acc: 0.6007 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7073\n",
            "Epoch 54/80\n",
            "Epoch 54/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7526 - gender_output_loss: 0.7463 - image_quality_output_loss: 1.1546 - age_output_loss: 1.7355 - weight_output_loss: 1.1003 - bag_output_loss: 1.0429 - footwear_output_loss: 1.0734 - pose_output_loss: 0.8949 - emotion_output_loss: 1.0046 - gender_output_acc: 0.6820 - image_quality_output_acc: 0.5536 - age_output_acc: 0.4051 - weight_output_acc: 0.6378 - bag_output_acc: 0.5987 - footwear_output_acc: 0.6123 - pose_output_acc: 0.6851 - emotion_output_acc: 0.7129 - val_loss: 8.5900 - val_gender_output_loss: 0.6764 - val_image_quality_output_loss: 1.0795 - val_age_output_loss: 1.6729 - val_weight_output_loss: 1.1088 - val_bag_output_loss: 1.1178 - val_footwear_output_loss: 1.0083 - val_pose_output_loss: 0.9278 - val_emotion_output_loss: 0.9985 - val_gender_output_acc: 0.6607 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5565 - val_footwear_output_acc: 0.6047 - val_pose_output_acc: 0.6429 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7526 - gender_output_loss: 0.7463 - image_quality_output_loss: 1.1546 - age_output_loss: 1.7355 - weight_output_loss: 1.1003 - bag_output_loss: 1.0429 - footwear_output_loss: 1.0734 - pose_output_loss: 0.8949 - emotion_output_loss: 1.0046 - gender_output_acc: 0.6820 - image_quality_output_acc: 0.5536 - age_output_acc: 0.4051 - weight_output_acc: 0.6378 - bag_output_acc: 0.5987 - footwear_output_acc: 0.6123 - pose_output_acc: 0.6851 - emotion_output_acc: 0.7129 - val_loss: 8.5900 - val_gender_output_loss: 0.6764 - val_image_quality_output_loss: 1.0795 - val_age_output_loss: 1.6729 - val_weight_output_loss: 1.1088 - val_bag_output_loss: 1.1178 - val_footwear_output_loss: 1.0083 - val_pose_output_loss: 0.9278 - val_emotion_output_loss: 0.9985 - val_gender_output_acc: 0.6607 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4028 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5565 - val_footwear_output_acc: 0.6047 - val_pose_output_acc: 0.6429 - val_emotion_output_acc: 0.7068\n",
            "Epoch 55/80\n",
            "Epoch 55/80\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7473 - gender_output_loss: 0.7383 - image_quality_output_loss: 1.1428 - age_output_loss: 1.7579 - weight_output_loss: 1.1072 - bag_output_loss: 1.0390 - footwear_output_loss: 1.0705 - pose_output_loss: 0.9110 - emotion_output_loss: 0.9806 - gender_output_acc: 0.6806 - image_quality_output_acc: 0.5529 - age_output_acc: 0.4080 - weight_output_acc: 0.6382 - bag_output_acc: 0.6002 - footwear_output_acc: 0.6167 - pose_output_acc: 0.6859 - emotion_output_acc: 0.7128 - val_loss: 8.7228 - val_gender_output_loss: 0.6846 - val_image_quality_output_loss: 1.0807 - val_age_output_loss: 1.7080 - val_weight_output_loss: 1.1220 - val_bag_output_loss: 1.1428 - val_footwear_output_loss: 1.0267 - val_pose_output_loss: 0.9440 - val_emotion_output_loss: 1.0139 - val_gender_output_acc: 0.6558 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4013 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5585 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7063\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7473 - gender_output_loss: 0.7383 - image_quality_output_loss: 1.1428 - age_output_loss: 1.7579 - weight_output_loss: 1.1072 - bag_output_loss: 1.0390 - footwear_output_loss: 1.0705 - pose_output_loss: 0.9110 - emotion_output_loss: 0.9806 - gender_output_acc: 0.6806 - image_quality_output_acc: 0.5529 - age_output_acc: 0.4080 - weight_output_acc: 0.6382 - bag_output_acc: 0.6002 - footwear_output_acc: 0.6167 - pose_output_acc: 0.6859 - emotion_output_acc: 0.7128 - val_loss: 8.7228 - val_gender_output_loss: 0.6846 - val_image_quality_output_loss: 1.0807 - val_age_output_loss: 1.7080 - val_weight_output_loss: 1.1220 - val_bag_output_loss: 1.1428 - val_footwear_output_loss: 1.0267 - val_pose_output_loss: 0.9440 - val_emotion_output_loss: 1.0139 - val_gender_output_acc: 0.6558 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4013 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5585 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7063\n",
            "Epoch 56/80\n",
            "Epoch 56/80\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7049 - gender_output_loss: 0.7302 - image_quality_output_loss: 1.1491 - age_output_loss: 1.7561 - weight_output_loss: 1.0933 - bag_output_loss: 1.0354 - footwear_output_loss: 1.0784 - pose_output_loss: 0.8828 - emotion_output_loss: 0.9795 - gender_output_acc: 0.6858 - image_quality_output_acc: 0.5530 - age_output_acc: 0.4058 - weight_output_acc: 0.6369 - bag_output_acc: 0.5990 - footwear_output_acc: 0.6155 - pose_output_acc: 0.6870 - emotion_output_acc: 0.7128 - val_loss: 8.6840 - val_gender_output_loss: 0.6837 - val_image_quality_output_loss: 1.0799 - val_age_output_loss: 1.6979 - val_weight_output_loss: 1.1160 - val_bag_output_loss: 1.1317 - val_footwear_output_loss: 1.0194 - val_pose_output_loss: 0.9432 - val_emotion_output_loss: 1.0122 - val_gender_output_acc: 0.6553 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3993 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5610 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6409 - val_emotion_output_acc: 0.7063\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7049 - gender_output_loss: 0.7302 - image_quality_output_loss: 1.1491 - age_output_loss: 1.7561 - weight_output_loss: 1.0933 - bag_output_loss: 1.0354 - footwear_output_loss: 1.0784 - pose_output_loss: 0.8828 - emotion_output_loss: 0.9795 - gender_output_acc: 0.6858 - image_quality_output_acc: 0.5530 - age_output_acc: 0.4058 - weight_output_acc: 0.6369 - bag_output_acc: 0.5990 - footwear_output_acc: 0.6155 - pose_output_acc: 0.6870 - emotion_output_acc: 0.7128 - val_loss: 8.6840 - val_gender_output_loss: 0.6837 - val_image_quality_output_loss: 1.0799 - val_age_output_loss: 1.6979 - val_weight_output_loss: 1.1160 - val_bag_output_loss: 1.1317 - val_footwear_output_loss: 1.0194 - val_pose_output_loss: 0.9432 - val_emotion_output_loss: 1.0122 - val_gender_output_acc: 0.6553 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3993 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5610 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6409 - val_emotion_output_acc: 0.7063\n",
            "Epoch 57/80\n",
            "Epoch 57/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7763 - gender_output_loss: 0.7323 - image_quality_output_loss: 1.1569 - age_output_loss: 1.7523 - weight_output_loss: 1.1093 - bag_output_loss: 1.0568 - footwear_output_loss: 1.0831 - pose_output_loss: 0.8948 - emotion_output_loss: 0.9907 - gender_output_acc: 0.6845 - image_quality_output_acc: 0.5514 - age_output_acc: 0.4082 - weight_output_acc: 0.6385 - bag_output_acc: 0.5953 - footwear_output_acc: 0.6167 - pose_output_acc: 0.6869 - emotion_output_acc: 0.7131 - val_loss: 8.6191 - val_gender_output_loss: 0.6757 - val_image_quality_output_loss: 1.0796 - val_age_output_loss: 1.6734 - val_weight_output_loss: 1.1081 - val_bag_output_loss: 1.1427 - val_footwear_output_loss: 1.0097 - val_pose_output_loss: 0.9289 - val_emotion_output_loss: 1.0009 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5580 - val_footwear_output_acc: 0.6017 - val_pose_output_acc: 0.6424 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7763 - gender_output_loss: 0.7323 - image_quality_output_loss: 1.1569 - age_output_loss: 1.7523 - weight_output_loss: 1.1093 - bag_output_loss: 1.0568 - footwear_output_loss: 1.0831 - pose_output_loss: 0.8948 - emotion_output_loss: 0.9907 - gender_output_acc: 0.6845 - image_quality_output_acc: 0.5514 - age_output_acc: 0.4082 - weight_output_acc: 0.6385 - bag_output_acc: 0.5953 - footwear_output_acc: 0.6167 - pose_output_acc: 0.6869 - emotion_output_acc: 0.7131 - val_loss: 8.6191 - val_gender_output_loss: 0.6757 - val_image_quality_output_loss: 1.0796 - val_age_output_loss: 1.6734 - val_weight_output_loss: 1.1081 - val_bag_output_loss: 1.1427 - val_footwear_output_loss: 1.0097 - val_pose_output_loss: 0.9289 - val_emotion_output_loss: 1.0009 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5580 - val_footwear_output_acc: 0.6017 - val_pose_output_acc: 0.6424 - val_emotion_output_acc: 0.7068\n",
            "Epoch 58/80\n",
            "Epoch 58/80\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.7487 - gender_output_loss: 0.7366 - image_quality_output_loss: 1.1567 - age_output_loss: 1.7572 - weight_output_loss: 1.0992 - bag_output_loss: 1.0534 - footwear_output_loss: 1.0745 - pose_output_loss: 0.8872 - emotion_output_loss: 0.9838 - gender_output_acc: 0.6845 - image_quality_output_acc: 0.5526 - age_output_acc: 0.4099 - weight_output_acc: 0.6369 - bag_output_acc: 0.6003 - footwear_output_acc: 0.6147 - pose_output_acc: 0.6885 - emotion_output_acc: 0.7129 - val_loss: 8.5273 - val_gender_output_loss: 0.6674 - val_image_quality_output_loss: 1.0719 - val_age_output_loss: 1.6504 - val_weight_output_loss: 1.1100 - val_bag_output_loss: 1.1187 - val_footwear_output_loss: 1.0020 - val_pose_output_loss: 0.9131 - val_emotion_output_loss: 0.9938 - val_gender_output_acc: 0.6587 - val_image_quality_output_acc: 0.5779 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.6066 - val_pose_output_acc: 0.6453 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.7487 - gender_output_loss: 0.7366 - image_quality_output_loss: 1.1567 - age_output_loss: 1.7572 - weight_output_loss: 1.0992 - bag_output_loss: 1.0534 - footwear_output_loss: 1.0745 - pose_output_loss: 0.8872 - emotion_output_loss: 0.9838 - gender_output_acc: 0.6845 - image_quality_output_acc: 0.5526 - age_output_acc: 0.4099 - weight_output_acc: 0.6369 - bag_output_acc: 0.6003 - footwear_output_acc: 0.6147 - pose_output_acc: 0.6885 - emotion_output_acc: 0.7129 - val_loss: 8.5273 - val_gender_output_loss: 0.6674 - val_image_quality_output_loss: 1.0719 - val_age_output_loss: 1.6504 - val_weight_output_loss: 1.1100 - val_bag_output_loss: 1.1187 - val_footwear_output_loss: 1.0020 - val_pose_output_loss: 0.9131 - val_emotion_output_loss: 0.9938 - val_gender_output_acc: 0.6587 - val_image_quality_output_acc: 0.5779 - val_age_output_acc: 0.4018 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.6066 - val_pose_output_acc: 0.6453 - val_emotion_output_acc: 0.7068\n",
            "Epoch 59/80\n",
            "Epoch 59/80\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.7199 - gender_output_loss: 0.7352 - image_quality_output_loss: 1.1556 - age_output_loss: 1.7483 - weight_output_loss: 1.0910 - bag_output_loss: 1.0416 - footwear_output_loss: 1.0748 - pose_output_loss: 0.8777 - emotion_output_loss: 0.9958 - gender_output_acc: 0.6894 - image_quality_output_acc: 0.5536 - age_output_acc: 0.4039 - weight_output_acc: 0.6379 - bag_output_acc: 0.5995 - footwear_output_acc: 0.6124 - pose_output_acc: 0.6881 - emotion_output_acc: 0.7126 - val_loss: 8.5984 - val_gender_output_loss: 0.6748 - val_image_quality_output_loss: 1.0797 - val_age_output_loss: 1.6730 - val_weight_output_loss: 1.1086 - val_bag_output_loss: 1.1251 - val_footwear_output_loss: 1.0090 - val_pose_output_loss: 0.9271 - val_emotion_output_loss: 1.0011 - val_gender_output_acc: 0.6592 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.3958 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7073\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.7199 - gender_output_loss: 0.7352 - image_quality_output_loss: 1.1556 - age_output_loss: 1.7483 - weight_output_loss: 1.0910 - bag_output_loss: 1.0416 - footwear_output_loss: 1.0748 - pose_output_loss: 0.8777 - emotion_output_loss: 0.9958 - gender_output_acc: 0.6894 - image_quality_output_acc: 0.5536 - age_output_acc: 0.4039 - weight_output_acc: 0.6379 - bag_output_acc: 0.5995 - footwear_output_acc: 0.6124 - pose_output_acc: 0.6881 - emotion_output_acc: 0.7126 - val_loss: 8.5984 - val_gender_output_loss: 0.6748 - val_image_quality_output_loss: 1.0797 - val_age_output_loss: 1.6730 - val_weight_output_loss: 1.1086 - val_bag_output_loss: 1.1251 - val_footwear_output_loss: 1.0090 - val_pose_output_loss: 0.9271 - val_emotion_output_loss: 1.0011 - val_gender_output_acc: 0.6592 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.3958 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6404 - val_emotion_output_acc: 0.7073\n",
            "Epoch 60/80\n",
            "Epoch 60/80\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7371 - gender_output_loss: 0.7436 - image_quality_output_loss: 1.1468 - age_output_loss: 1.7526 - weight_output_loss: 1.1028 - bag_output_loss: 1.0506 - footwear_output_loss: 1.0882 - pose_output_loss: 0.8657 - emotion_output_loss: 0.9868 - gender_output_acc: 0.6834 - image_quality_output_acc: 0.5540 - age_output_acc: 0.4048 - weight_output_acc: 0.6382 - bag_output_acc: 0.6034 - footwear_output_acc: 0.6143 - pose_output_acc: 0.6904 - emotion_output_acc: 0.7131 - val_loss: 8.6242 - val_gender_output_loss: 0.6757 - val_image_quality_output_loss: 1.0802 - val_age_output_loss: 1.6866 - val_weight_output_loss: 1.1106 - val_bag_output_loss: 1.1242 - val_footwear_output_loss: 1.0123 - val_pose_output_loss: 0.9277 - val_emotion_output_loss: 1.0069 - val_gender_output_acc: 0.6567 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4023 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6409 - val_emotion_output_acc: 0.7073\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7371 - gender_output_loss: 0.7436 - image_quality_output_loss: 1.1468 - age_output_loss: 1.7526 - weight_output_loss: 1.1028 - bag_output_loss: 1.0506 - footwear_output_loss: 1.0882 - pose_output_loss: 0.8657 - emotion_output_loss: 0.9868 - gender_output_acc: 0.6834 - image_quality_output_acc: 0.5540 - age_output_acc: 0.4048 - weight_output_acc: 0.6382 - bag_output_acc: 0.6034 - footwear_output_acc: 0.6143 - pose_output_acc: 0.6904 - emotion_output_acc: 0.7131 - val_loss: 8.6242 - val_gender_output_loss: 0.6757 - val_image_quality_output_loss: 1.0802 - val_age_output_loss: 1.6866 - val_weight_output_loss: 1.1106 - val_bag_output_loss: 1.1242 - val_footwear_output_loss: 1.0123 - val_pose_output_loss: 0.9277 - val_emotion_output_loss: 1.0069 - val_gender_output_acc: 0.6567 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.4023 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6409 - val_emotion_output_acc: 0.7073\n",
            "Epoch 61/80\n",
            "Epoch 61/80\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7251 - gender_output_loss: 0.7288 - image_quality_output_loss: 1.1610 - age_output_loss: 1.7592 - weight_output_loss: 1.0945 - bag_output_loss: 1.0365 - footwear_output_loss: 1.0775 - pose_output_loss: 0.8847 - emotion_output_loss: 0.9830 - gender_output_acc: 0.6895 - image_quality_output_acc: 0.5514 - age_output_acc: 0.4047 - weight_output_acc: 0.6373 - bag_output_acc: 0.5996 - footwear_output_acc: 0.6181 - pose_output_acc: 0.6905 - emotion_output_acc: 0.7130 - val_loss: 8.6008 - val_gender_output_loss: 0.6744 - val_image_quality_output_loss: 1.0793 - val_age_output_loss: 1.6739 - val_weight_output_loss: 1.1099 - val_bag_output_loss: 1.1267 - val_footwear_output_loss: 1.0083 - val_pose_output_loss: 0.9277 - val_emotion_output_loss: 1.0006 - val_gender_output_acc: 0.6558 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.3988 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5620 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6409 - val_emotion_output_acc: 0.7073\n",
            "360/360 [==============================] - 77s 214ms/step - loss: 8.7251 - gender_output_loss: 0.7288 - image_quality_output_loss: 1.1610 - age_output_loss: 1.7592 - weight_output_loss: 1.0945 - bag_output_loss: 1.0365 - footwear_output_loss: 1.0775 - pose_output_loss: 0.8847 - emotion_output_loss: 0.9830 - gender_output_acc: 0.6895 - image_quality_output_acc: 0.5514 - age_output_acc: 0.4047 - weight_output_acc: 0.6373 - bag_output_acc: 0.5996 - footwear_output_acc: 0.6181 - pose_output_acc: 0.6905 - emotion_output_acc: 0.7130 - val_loss: 8.6008 - val_gender_output_loss: 0.6744 - val_image_quality_output_loss: 1.0793 - val_age_output_loss: 1.6739 - val_weight_output_loss: 1.1099 - val_bag_output_loss: 1.1267 - val_footwear_output_loss: 1.0083 - val_pose_output_loss: 0.9277 - val_emotion_output_loss: 1.0006 - val_gender_output_acc: 0.6558 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.3988 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5620 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6409 - val_emotion_output_acc: 0.7073\n",
            "Epoch 62/80\n",
            "Epoch 62/80\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 8.7254 - gender_output_loss: 0.7235 - image_quality_output_loss: 1.1505 - age_output_loss: 1.7477 - weight_output_loss: 1.1102 - bag_output_loss: 1.0408 - footwear_output_loss: 1.0782 - pose_output_loss: 0.8902 - emotion_output_loss: 0.9843 - gender_output_acc: 0.6856 - image_quality_output_acc: 0.5519 - age_output_acc: 0.4074 - weight_output_acc: 0.6382 - bag_output_acc: 0.5990 - footwear_output_acc: 0.6142 - pose_output_acc: 0.6911 - emotion_output_acc: 0.7127 - val_loss: 8.6154 - val_gender_output_loss: 0.6743 - val_image_quality_output_loss: 1.0802 - val_age_output_loss: 1.6733 - val_weight_output_loss: 1.1091 - val_bag_output_loss: 1.1406 - val_footwear_output_loss: 1.0081 - val_pose_output_loss: 0.9291 - val_emotion_output_loss: 1.0007 - val_gender_output_acc: 0.6538 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.3988 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6037 - val_pose_output_acc: 0.6394 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 213ms/step - loss: 8.7254 - gender_output_loss: 0.7235 - image_quality_output_loss: 1.1505 - age_output_loss: 1.7477 - weight_output_loss: 1.1102 - bag_output_loss: 1.0408 - footwear_output_loss: 1.0782 - pose_output_loss: 0.8902 - emotion_output_loss: 0.9843 - gender_output_acc: 0.6856 - image_quality_output_acc: 0.5519 - age_output_acc: 0.4074 - weight_output_acc: 0.6382 - bag_output_acc: 0.5990 - footwear_output_acc: 0.6142 - pose_output_acc: 0.6911 - emotion_output_acc: 0.7127 - val_loss: 8.6154 - val_gender_output_loss: 0.6743 - val_image_quality_output_loss: 1.0802 - val_age_output_loss: 1.6733 - val_weight_output_loss: 1.1091 - val_bag_output_loss: 1.1406 - val_footwear_output_loss: 1.0081 - val_pose_output_loss: 0.9291 - val_emotion_output_loss: 1.0007 - val_gender_output_acc: 0.6538 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.3988 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6037 - val_pose_output_acc: 0.6394 - val_emotion_output_acc: 0.7068\n",
            "Epoch 63/80\n",
            "Epoch 63/80\n",
            "360/360 [==============================] - 79s 218ms/step - loss: 8.6481 - gender_output_loss: 0.7356 - image_quality_output_loss: 1.1261 - age_output_loss: 1.7401 - weight_output_loss: 1.0763 - bag_output_loss: 1.0372 - footwear_output_loss: 1.0773 - pose_output_loss: 0.8900 - emotion_output_loss: 0.9655 - gender_output_acc: 0.6908 - image_quality_output_acc: 0.5535 - age_output_acc: 0.4080 - weight_output_acc: 0.6383 - bag_output_acc: 0.6026 - footwear_output_acc: 0.6150 - pose_output_acc: 0.6888 - emotion_output_acc: 0.7129 - val_loss: 8.6177 - val_gender_output_loss: 0.6743 - val_image_quality_output_loss: 1.0800 - val_age_output_loss: 1.6747 - val_weight_output_loss: 1.1093 - val_bag_output_loss: 1.1409 - val_footwear_output_loss: 1.0090 - val_pose_output_loss: 0.9281 - val_emotion_output_loss: 1.0015 - val_gender_output_acc: 0.6558 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.4013 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5610 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6399 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 79s 218ms/step - loss: 8.6481 - gender_output_loss: 0.7356 - image_quality_output_loss: 1.1261 - age_output_loss: 1.7401 - weight_output_loss: 1.0763 - bag_output_loss: 1.0372 - footwear_output_loss: 1.0773 - pose_output_loss: 0.8900 - emotion_output_loss: 0.9655 - gender_output_acc: 0.6908 - image_quality_output_acc: 0.5535 - age_output_acc: 0.4080 - weight_output_acc: 0.6383 - bag_output_acc: 0.6026 - footwear_output_acc: 0.6150 - pose_output_acc: 0.6888 - emotion_output_acc: 0.7129 - val_loss: 8.6177 - val_gender_output_loss: 0.6743 - val_image_quality_output_loss: 1.0800 - val_age_output_loss: 1.6747 - val_weight_output_loss: 1.1093 - val_bag_output_loss: 1.1409 - val_footwear_output_loss: 1.0090 - val_pose_output_loss: 0.9281 - val_emotion_output_loss: 1.0015 - val_gender_output_acc: 0.6558 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.4013 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5610 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6399 - val_emotion_output_acc: 0.7068\n",
            "Epoch 64/80\n",
            "Epoch 64/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7021 - gender_output_loss: 0.7267 - image_quality_output_loss: 1.1309 - age_output_loss: 1.7464 - weight_output_loss: 1.0997 - bag_output_loss: 1.0414 - footwear_output_loss: 1.0803 - pose_output_loss: 0.8800 - emotion_output_loss: 0.9967 - gender_output_acc: 0.6871 - image_quality_output_acc: 0.5543 - age_output_acc: 0.4089 - weight_output_acc: 0.6376 - bag_output_acc: 0.6042 - footwear_output_acc: 0.6192 - pose_output_acc: 0.6921 - emotion_output_acc: 0.7133 - val_loss: 8.6143 - val_gender_output_loss: 0.6738 - val_image_quality_output_loss: 1.0804 - val_age_output_loss: 1.6736 - val_weight_output_loss: 1.1095 - val_bag_output_loss: 1.1394 - val_footwear_output_loss: 1.0082 - val_pose_output_loss: 0.9283 - val_emotion_output_loss: 1.0011 - val_gender_output_acc: 0.6548 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3973 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.6032 - val_pose_output_acc: 0.6424 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.7021 - gender_output_loss: 0.7267 - image_quality_output_loss: 1.1309 - age_output_loss: 1.7464 - weight_output_loss: 1.0997 - bag_output_loss: 1.0414 - footwear_output_loss: 1.0803 - pose_output_loss: 0.8800 - emotion_output_loss: 0.9967 - gender_output_acc: 0.6871 - image_quality_output_acc: 0.5543 - age_output_acc: 0.4089 - weight_output_acc: 0.6376 - bag_output_acc: 0.6042 - footwear_output_acc: 0.6192 - pose_output_acc: 0.6921 - emotion_output_acc: 0.7133 - val_loss: 8.6143 - val_gender_output_loss: 0.6738 - val_image_quality_output_loss: 1.0804 - val_age_output_loss: 1.6736 - val_weight_output_loss: 1.1095 - val_bag_output_loss: 1.1394 - val_footwear_output_loss: 1.0082 - val_pose_output_loss: 0.9283 - val_emotion_output_loss: 1.0011 - val_gender_output_acc: 0.6548 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3973 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.6032 - val_pose_output_acc: 0.6424 - val_emotion_output_acc: 0.7068\n",
            "Epoch 65/80\n",
            "Epoch 65/80\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6879 - gender_output_loss: 0.7283 - image_quality_output_loss: 1.1442 - age_output_loss: 1.7469 - weight_output_loss: 1.1007 - bag_output_loss: 1.0306 - footwear_output_loss: 1.0764 - pose_output_loss: 0.8728 - emotion_output_loss: 0.9881 - gender_output_acc: 0.6915 - image_quality_output_acc: 0.5534 - age_output_acc: 0.4062 - weight_output_acc: 0.6385 - bag_output_acc: 0.5995 - footwear_output_acc: 0.6157 - pose_output_acc: 0.6944 - emotion_output_acc: 0.7128 - val_loss: 8.5800 - val_gender_output_loss: 0.6691 - val_image_quality_output_loss: 1.0762 - val_age_output_loss: 1.6734 - val_weight_output_loss: 1.1102 - val_bag_output_loss: 1.1277 - val_footwear_output_loss: 1.0012 - val_pose_output_loss: 0.9212 - val_emotion_output_loss: 1.0009 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6438 - val_emotion_output_acc: 0.7073\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6879 - gender_output_loss: 0.7283 - image_quality_output_loss: 1.1442 - age_output_loss: 1.7469 - weight_output_loss: 1.1007 - bag_output_loss: 1.0306 - footwear_output_loss: 1.0764 - pose_output_loss: 0.8728 - emotion_output_loss: 0.9881 - gender_output_acc: 0.6915 - image_quality_output_acc: 0.5534 - age_output_acc: 0.4062 - weight_output_acc: 0.6385 - bag_output_acc: 0.5995 - footwear_output_acc: 0.6157 - pose_output_acc: 0.6944 - emotion_output_acc: 0.7128 - val_loss: 8.5800 - val_gender_output_loss: 0.6691 - val_image_quality_output_loss: 1.0762 - val_age_output_loss: 1.6734 - val_weight_output_loss: 1.1102 - val_bag_output_loss: 1.1277 - val_footwear_output_loss: 1.0012 - val_pose_output_loss: 0.9212 - val_emotion_output_loss: 1.0009 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6438 - val_emotion_output_acc: 0.7073\n",
            "Epoch 66/80\n",
            "Epoch 66/80\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.7265 - gender_output_loss: 0.7347 - image_quality_output_loss: 1.1311 - age_output_loss: 1.7423 - weight_output_loss: 1.1050 - bag_output_loss: 1.0593 - footwear_output_loss: 1.0855 - pose_output_loss: 0.8803 - emotion_output_loss: 0.9883 - gender_output_acc: 0.6852 - image_quality_output_acc: 0.5539 - age_output_acc: 0.4109 - weight_output_acc: 0.6388 - bag_output_acc: 0.6032 - footwear_output_acc: 0.6155 - pose_output_acc: 0.6922 - emotion_output_acc: 0.7127 - val_loss: 8.6058 - val_gender_output_loss: 0.6730 - val_image_quality_output_loss: 1.0804 - val_age_output_loss: 1.6739 - val_weight_output_loss: 1.1096 - val_bag_output_loss: 1.1312 - val_footwear_output_loss: 1.0085 - val_pose_output_loss: 0.9278 - val_emotion_output_loss: 1.0014 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6419 - val_emotion_output_acc: 0.7073\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.7265 - gender_output_loss: 0.7347 - image_quality_output_loss: 1.1311 - age_output_loss: 1.7423 - weight_output_loss: 1.1050 - bag_output_loss: 1.0593 - footwear_output_loss: 1.0855 - pose_output_loss: 0.8803 - emotion_output_loss: 0.9883 - gender_output_acc: 0.6852 - image_quality_output_acc: 0.5539 - age_output_acc: 0.4109 - weight_output_acc: 0.6388 - bag_output_acc: 0.6032 - footwear_output_acc: 0.6155 - pose_output_acc: 0.6922 - emotion_output_acc: 0.7127 - val_loss: 8.6058 - val_gender_output_loss: 0.6730 - val_image_quality_output_loss: 1.0804 - val_age_output_loss: 1.6739 - val_weight_output_loss: 1.1096 - val_bag_output_loss: 1.1312 - val_footwear_output_loss: 1.0085 - val_pose_output_loss: 0.9278 - val_emotion_output_loss: 1.0014 - val_gender_output_acc: 0.6562 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6419 - val_emotion_output_acc: 0.7073\n",
            "Epoch 67/80\n",
            "Epoch 67/80\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6869 - gender_output_loss: 0.7207 - image_quality_output_loss: 1.1535 - age_output_loss: 1.7511 - weight_output_loss: 1.1090 - bag_output_loss: 1.0335 - footwear_output_loss: 1.0660 - pose_output_loss: 0.8790 - emotion_output_loss: 0.9742 - gender_output_acc: 0.6886 - image_quality_output_acc: 0.5524 - age_output_acc: 0.4041 - weight_output_acc: 0.6375 - bag_output_acc: 0.6027 - footwear_output_acc: 0.6178 - pose_output_acc: 0.6912 - emotion_output_acc: 0.7126 - val_loss: 8.6779 - val_gender_output_loss: 0.6755 - val_image_quality_output_loss: 1.0845 - val_age_output_loss: 1.7022 - val_weight_output_loss: 1.1103 - val_bag_output_loss: 1.1561 - val_footwear_output_loss: 1.0119 - val_pose_output_loss: 0.9304 - val_emotion_output_loss: 1.0070 - val_gender_output_acc: 0.6587 - val_image_quality_output_acc: 0.5734 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5625 - val_footwear_output_acc: 0.6017 - val_pose_output_acc: 0.6419 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6869 - gender_output_loss: 0.7207 - image_quality_output_loss: 1.1535 - age_output_loss: 1.7511 - weight_output_loss: 1.1090 - bag_output_loss: 1.0335 - footwear_output_loss: 1.0660 - pose_output_loss: 0.8790 - emotion_output_loss: 0.9742 - gender_output_acc: 0.6886 - image_quality_output_acc: 0.5524 - age_output_acc: 0.4041 - weight_output_acc: 0.6375 - bag_output_acc: 0.6027 - footwear_output_acc: 0.6178 - pose_output_acc: 0.6912 - emotion_output_acc: 0.7126 - val_loss: 8.6779 - val_gender_output_loss: 0.6755 - val_image_quality_output_loss: 1.0845 - val_age_output_loss: 1.7022 - val_weight_output_loss: 1.1103 - val_bag_output_loss: 1.1561 - val_footwear_output_loss: 1.0119 - val_pose_output_loss: 0.9304 - val_emotion_output_loss: 1.0070 - val_gender_output_acc: 0.6587 - val_image_quality_output_acc: 0.5734 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6359 - val_bag_output_acc: 0.5625 - val_footwear_output_acc: 0.6017 - val_pose_output_acc: 0.6419 - val_emotion_output_acc: 0.7068\n",
            "Epoch 68/80\n",
            "Epoch 68/80\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6593 - gender_output_loss: 0.7350 - image_quality_output_loss: 1.1558 - age_output_loss: 1.7428 - weight_output_loss: 1.0834 - bag_output_loss: 1.0391 - footwear_output_loss: 1.0518 - pose_output_loss: 0.8832 - emotion_output_loss: 0.9682 - gender_output_acc: 0.6924 - image_quality_output_acc: 0.5550 - age_output_acc: 0.4061 - weight_output_acc: 0.6385 - bag_output_acc: 0.6050 - footwear_output_acc: 0.6161 - pose_output_acc: 0.6964 - emotion_output_acc: 0.7125 - val_loss: 8.7168 - val_gender_output_loss: 0.6817 - val_image_quality_output_loss: 1.0867 - val_age_output_loss: 1.7038 - val_weight_output_loss: 1.1091 - val_bag_output_loss: 1.1678 - val_footwear_output_loss: 1.0164 - val_pose_output_loss: 0.9371 - val_emotion_output_loss: 1.0143 - val_gender_output_acc: 0.6548 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3973 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5625 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6438 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6593 - gender_output_loss: 0.7350 - image_quality_output_loss: 1.1558 - age_output_loss: 1.7428 - weight_output_loss: 1.0834 - bag_output_loss: 1.0391 - footwear_output_loss: 1.0518 - pose_output_loss: 0.8832 - emotion_output_loss: 0.9682 - gender_output_acc: 0.6924 - image_quality_output_acc: 0.5550 - age_output_acc: 0.4061 - weight_output_acc: 0.6385 - bag_output_acc: 0.6050 - footwear_output_acc: 0.6161 - pose_output_acc: 0.6964 - emotion_output_acc: 0.7125 - val_loss: 8.7168 - val_gender_output_loss: 0.6817 - val_image_quality_output_loss: 1.0867 - val_age_output_loss: 1.7038 - val_weight_output_loss: 1.1091 - val_bag_output_loss: 1.1678 - val_footwear_output_loss: 1.0164 - val_pose_output_loss: 0.9371 - val_emotion_output_loss: 1.0143 - val_gender_output_acc: 0.6548 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3973 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5625 - val_footwear_output_acc: 0.6022 - val_pose_output_acc: 0.6438 - val_emotion_output_acc: 0.7068\n",
            "Epoch 69/80\n",
            "Epoch 69/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.6419 - gender_output_loss: 0.7231 - image_quality_output_loss: 1.1385 - age_output_loss: 1.7406 - weight_output_loss: 1.0895 - bag_output_loss: 1.0266 - footwear_output_loss: 1.0652 - pose_output_loss: 0.8803 - emotion_output_loss: 0.9781 - gender_output_acc: 0.6892 - image_quality_output_acc: 0.5546 - age_output_acc: 0.4082 - weight_output_acc: 0.6387 - bag_output_acc: 0.6054 - footwear_output_acc: 0.6194 - pose_output_acc: 0.6945 - emotion_output_acc: 0.7135 - val_loss: 8.4886 - val_gender_output_loss: 0.6651 - val_image_quality_output_loss: 1.0730 - val_age_output_loss: 1.6469 - val_weight_output_loss: 1.1061 - val_bag_output_loss: 1.0946 - val_footwear_output_loss: 0.9943 - val_pose_output_loss: 0.9122 - val_emotion_output_loss: 0.9963 - val_gender_output_acc: 0.6622 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5635 - val_footwear_output_acc: 0.6091 - val_pose_output_acc: 0.6443 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.6419 - gender_output_loss: 0.7231 - image_quality_output_loss: 1.1385 - age_output_loss: 1.7406 - weight_output_loss: 1.0895 - bag_output_loss: 1.0266 - footwear_output_loss: 1.0652 - pose_output_loss: 0.8803 - emotion_output_loss: 0.9781 - gender_output_acc: 0.6892 - image_quality_output_acc: 0.5546 - age_output_acc: 0.4082 - weight_output_acc: 0.6387 - bag_output_acc: 0.6054 - footwear_output_acc: 0.6194 - pose_output_acc: 0.6945 - emotion_output_acc: 0.7135 - val_loss: 8.4886 - val_gender_output_loss: 0.6651 - val_image_quality_output_loss: 1.0730 - val_age_output_loss: 1.6469 - val_weight_output_loss: 1.1061 - val_bag_output_loss: 1.0946 - val_footwear_output_loss: 0.9943 - val_pose_output_loss: 0.9122 - val_emotion_output_loss: 0.9963 - val_gender_output_acc: 0.6622 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5635 - val_footwear_output_acc: 0.6091 - val_pose_output_acc: 0.6443 - val_emotion_output_acc: 0.7068\n",
            "Epoch 70/80\n",
            "Epoch 70/80\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6673 - gender_output_loss: 0.7209 - image_quality_output_loss: 1.1552 - age_output_loss: 1.7479 - weight_output_loss: 1.0938 - bag_output_loss: 1.0361 - footwear_output_loss: 1.0680 - pose_output_loss: 0.8544 - emotion_output_loss: 0.9909 - gender_output_acc: 0.6937 - image_quality_output_acc: 0.5557 - age_output_acc: 0.4051 - weight_output_acc: 0.6390 - bag_output_acc: 0.6042 - footwear_output_acc: 0.6207 - pose_output_acc: 0.6945 - emotion_output_acc: 0.7131 - val_loss: 8.6129 - val_gender_output_loss: 0.6722 - val_image_quality_output_loss: 1.0815 - val_age_output_loss: 1.6739 - val_weight_output_loss: 1.1101 - val_bag_output_loss: 1.1338 - val_footwear_output_loss: 1.0098 - val_pose_output_loss: 0.9283 - val_emotion_output_loss: 1.0033 - val_gender_output_acc: 0.6582 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6047 - val_pose_output_acc: 0.6434 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6673 - gender_output_loss: 0.7209 - image_quality_output_loss: 1.1552 - age_output_loss: 1.7479 - weight_output_loss: 1.0938 - bag_output_loss: 1.0361 - footwear_output_loss: 1.0680 - pose_output_loss: 0.8544 - emotion_output_loss: 0.9909 - gender_output_acc: 0.6937 - image_quality_output_acc: 0.5557 - age_output_acc: 0.4051 - weight_output_acc: 0.6390 - bag_output_acc: 0.6042 - footwear_output_acc: 0.6207 - pose_output_acc: 0.6945 - emotion_output_acc: 0.7131 - val_loss: 8.6129 - val_gender_output_loss: 0.6722 - val_image_quality_output_loss: 1.0815 - val_age_output_loss: 1.6739 - val_weight_output_loss: 1.1101 - val_bag_output_loss: 1.1338 - val_footwear_output_loss: 1.0098 - val_pose_output_loss: 0.9283 - val_emotion_output_loss: 1.0033 - val_gender_output_acc: 0.6582 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3983 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6047 - val_pose_output_acc: 0.6434 - val_emotion_output_acc: 0.7068\n",
            "Epoch 71/80\n",
            "Epoch 71/80\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6575 - gender_output_loss: 0.7164 - image_quality_output_loss: 1.1500 - age_output_loss: 1.7470 - weight_output_loss: 1.0986 - bag_output_loss: 1.0286 - footwear_output_loss: 1.0606 - pose_output_loss: 0.8726 - emotion_output_loss: 0.9838 - gender_output_acc: 0.6906 - image_quality_output_acc: 0.5537 - age_output_acc: 0.4046 - weight_output_acc: 0.6388 - bag_output_acc: 0.6012 - footwear_output_acc: 0.6187 - pose_output_acc: 0.6982 - emotion_output_acc: 0.7138 - val_loss: 8.6198 - val_gender_output_loss: 0.6725 - val_image_quality_output_loss: 1.0830 - val_age_output_loss: 1.6813 - val_weight_output_loss: 1.1108 - val_bag_output_loss: 1.1291 - val_footwear_output_loss: 1.0101 - val_pose_output_loss: 0.9274 - val_emotion_output_loss: 1.0057 - val_gender_output_acc: 0.6622 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3953 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5610 - val_footwear_output_acc: 0.6047 - val_pose_output_acc: 0.6468 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 78s 216ms/step - loss: 8.6575 - gender_output_loss: 0.7164 - image_quality_output_loss: 1.1500 - age_output_loss: 1.7470 - weight_output_loss: 1.0986 - bag_output_loss: 1.0286 - footwear_output_loss: 1.0606 - pose_output_loss: 0.8726 - emotion_output_loss: 0.9838 - gender_output_acc: 0.6906 - image_quality_output_acc: 0.5537 - age_output_acc: 0.4046 - weight_output_acc: 0.6388 - bag_output_acc: 0.6012 - footwear_output_acc: 0.6187 - pose_output_acc: 0.6982 - emotion_output_acc: 0.7138 - val_loss: 8.6198 - val_gender_output_loss: 0.6725 - val_image_quality_output_loss: 1.0830 - val_age_output_loss: 1.6813 - val_weight_output_loss: 1.1108 - val_bag_output_loss: 1.1291 - val_footwear_output_loss: 1.0101 - val_pose_output_loss: 0.9274 - val_emotion_output_loss: 1.0057 - val_gender_output_acc: 0.6622 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3953 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5610 - val_footwear_output_acc: 0.6047 - val_pose_output_acc: 0.6468 - val_emotion_output_acc: 0.7068\n",
            "Epoch 72/80\n",
            "Epoch 72/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.6862 - gender_output_loss: 0.7386 - image_quality_output_loss: 1.1338 - age_output_loss: 1.7351 - weight_output_loss: 1.0965 - bag_output_loss: 1.0531 - footwear_output_loss: 1.0665 - pose_output_loss: 0.8811 - emotion_output_loss: 0.9815 - gender_output_acc: 0.6895 - image_quality_output_acc: 0.5548 - age_output_acc: 0.4119 - weight_output_acc: 0.6383 - bag_output_acc: 0.6012 - footwear_output_acc: 0.6191 - pose_output_acc: 0.6961 - emotion_output_acc: 0.7131 - val_loss: 8.5393 - val_gender_output_loss: 0.6644 - val_image_quality_output_loss: 1.0731 - val_age_output_loss: 1.6604 - val_weight_output_loss: 1.1126 - val_bag_output_loss: 1.1172 - val_footwear_output_loss: 1.0029 - val_pose_output_loss: 0.9115 - val_emotion_output_loss: 0.9973 - val_gender_output_acc: 0.6617 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3953 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6086 - val_pose_output_acc: 0.6448 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.6862 - gender_output_loss: 0.7386 - image_quality_output_loss: 1.1338 - age_output_loss: 1.7351 - weight_output_loss: 1.0965 - bag_output_loss: 1.0531 - footwear_output_loss: 1.0665 - pose_output_loss: 0.8811 - emotion_output_loss: 0.9815 - gender_output_acc: 0.6895 - image_quality_output_acc: 0.5548 - age_output_acc: 0.4119 - weight_output_acc: 0.6383 - bag_output_acc: 0.6012 - footwear_output_acc: 0.6191 - pose_output_acc: 0.6961 - emotion_output_acc: 0.7131 - val_loss: 8.5393 - val_gender_output_loss: 0.6644 - val_image_quality_output_loss: 1.0731 - val_age_output_loss: 1.6604 - val_weight_output_loss: 1.1126 - val_bag_output_loss: 1.1172 - val_footwear_output_loss: 1.0029 - val_pose_output_loss: 0.9115 - val_emotion_output_loss: 0.9973 - val_gender_output_acc: 0.6617 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3953 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6086 - val_pose_output_acc: 0.6448 - val_emotion_output_acc: 0.7068\n",
            "Epoch 73/80\n",
            "Epoch 73/80\n",
            "360/360 [==============================] - 78s 215ms/step - loss: 8.6392 - gender_output_loss: 0.7251 - image_quality_output_loss: 1.1536 - age_output_loss: 1.7297 - weight_output_loss: 1.0856 - bag_output_loss: 1.0333 - footwear_output_loss: 1.0491 - pose_output_loss: 0.8800 - emotion_output_loss: 0.9830 - gender_output_acc: 0.6906 - image_quality_output_acc: 0.5543 - age_output_acc: 0.4104 - weight_output_acc: 0.6379 - bag_output_acc: 0.6055 - footwear_output_acc: 0.6230 - pose_output_acc: 0.6932 - emotion_output_acc: 0.7123 - val_loss: 8.8605 - val_gender_output_loss: 0.7024 - val_image_quality_output_loss: 1.1019 - val_age_output_loss: 1.7294 - val_weight_output_loss: 1.1313 - val_bag_output_loss: 1.1709 - val_footwear_output_loss: 1.0398 - val_pose_output_loss: 0.9640 - val_emotion_output_loss: 1.0210 - val_gender_output_acc: 0.6582 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.3943 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6032 - val_pose_output_acc: 0.6429 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 78s 215ms/step - loss: 8.6392 - gender_output_loss: 0.7251 - image_quality_output_loss: 1.1536 - age_output_loss: 1.7297 - weight_output_loss: 1.0856 - bag_output_loss: 1.0333 - footwear_output_loss: 1.0491 - pose_output_loss: 0.8800 - emotion_output_loss: 0.9830 - gender_output_acc: 0.6906 - image_quality_output_acc: 0.5543 - age_output_acc: 0.4104 - weight_output_acc: 0.6379 - bag_output_acc: 0.6055 - footwear_output_acc: 0.6230 - pose_output_acc: 0.6932 - emotion_output_acc: 0.7123 - val_loss: 8.8605 - val_gender_output_loss: 0.7024 - val_image_quality_output_loss: 1.1019 - val_age_output_loss: 1.7294 - val_weight_output_loss: 1.1313 - val_bag_output_loss: 1.1709 - val_footwear_output_loss: 1.0398 - val_pose_output_loss: 0.9640 - val_emotion_output_loss: 1.0210 - val_gender_output_acc: 0.6582 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.3943 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6032 - val_pose_output_acc: 0.6429 - val_emotion_output_acc: 0.7068\n",
            "Epoch 74/80\n",
            "Epoch 74/80\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.6859 - gender_output_loss: 0.7329 - image_quality_output_loss: 1.1543 - age_output_loss: 1.7530 - weight_output_loss: 1.0834 - bag_output_loss: 1.0376 - footwear_output_loss: 1.0869 - pose_output_loss: 0.8633 - emotion_output_loss: 0.9745 - gender_output_acc: 0.6894 - image_quality_output_acc: 0.5550 - age_output_acc: 0.4089 - weight_output_acc: 0.6375 - bag_output_acc: 0.6047 - footwear_output_acc: 0.6169 - pose_output_acc: 0.6976 - emotion_output_acc: 0.7131 - val_loss: 8.7689 - val_gender_output_loss: 0.6933 - val_image_quality_output_loss: 1.0883 - val_age_output_loss: 1.7107 - val_weight_output_loss: 1.1157 - val_bag_output_loss: 1.1638 - val_footwear_output_loss: 1.0305 - val_pose_output_loss: 0.9480 - val_emotion_output_loss: 1.0187 - val_gender_output_acc: 0.6597 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.3948 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6453 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 77s 215ms/step - loss: 8.6859 - gender_output_loss: 0.7329 - image_quality_output_loss: 1.1543 - age_output_loss: 1.7530 - weight_output_loss: 1.0834 - bag_output_loss: 1.0376 - footwear_output_loss: 1.0869 - pose_output_loss: 0.8633 - emotion_output_loss: 0.9745 - gender_output_acc: 0.6894 - image_quality_output_acc: 0.5550 - age_output_acc: 0.4089 - weight_output_acc: 0.6375 - bag_output_acc: 0.6047 - footwear_output_acc: 0.6169 - pose_output_acc: 0.6976 - emotion_output_acc: 0.7131 - val_loss: 8.7689 - val_gender_output_loss: 0.6933 - val_image_quality_output_loss: 1.0883 - val_age_output_loss: 1.7107 - val_weight_output_loss: 1.1157 - val_bag_output_loss: 1.1638 - val_footwear_output_loss: 1.0305 - val_pose_output_loss: 0.9480 - val_emotion_output_loss: 1.0187 - val_gender_output_acc: 0.6597 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.3948 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6453 - val_emotion_output_acc: 0.7068\n",
            "Epoch 75/80\n",
            "Epoch 75/80\n",
            "360/360 [==============================] - 82s 228ms/step - loss: 8.6464 - gender_output_loss: 0.7197 - image_quality_output_loss: 1.1461 - age_output_loss: 1.7467 - weight_output_loss: 1.1055 - bag_output_loss: 1.0246 - footwear_output_loss: 1.0647 - pose_output_loss: 0.8585 - emotion_output_loss: 0.9806 - gender_output_acc: 0.6922 - image_quality_output_acc: 0.5558 - age_output_acc: 0.4069 - weight_output_acc: 0.6386 - bag_output_acc: 0.6043 - footwear_output_acc: 0.6161 - pose_output_acc: 0.6943 - emotion_output_acc: 0.7134 - val_loss: 8.5912 - val_gender_output_loss: 0.6708 - val_image_quality_output_loss: 1.0769 - val_age_output_loss: 1.6737 - val_weight_output_loss: 1.1134 - val_bag_output_loss: 1.1331 - val_footwear_output_loss: 1.0005 - val_pose_output_loss: 0.9198 - val_emotion_output_loss: 1.0030 - val_gender_output_acc: 0.6657 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3953 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6076 - val_pose_output_acc: 0.6463 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 82s 228ms/step - loss: 8.6464 - gender_output_loss: 0.7197 - image_quality_output_loss: 1.1461 - age_output_loss: 1.7467 - weight_output_loss: 1.1055 - bag_output_loss: 1.0246 - footwear_output_loss: 1.0647 - pose_output_loss: 0.8585 - emotion_output_loss: 0.9806 - gender_output_acc: 0.6922 - image_quality_output_acc: 0.5558 - age_output_acc: 0.4069 - weight_output_acc: 0.6386 - bag_output_acc: 0.6043 - footwear_output_acc: 0.6161 - pose_output_acc: 0.6943 - emotion_output_acc: 0.7134 - val_loss: 8.5912 - val_gender_output_loss: 0.6708 - val_image_quality_output_loss: 1.0769 - val_age_output_loss: 1.6737 - val_weight_output_loss: 1.1134 - val_bag_output_loss: 1.1331 - val_footwear_output_loss: 1.0005 - val_pose_output_loss: 0.9198 - val_emotion_output_loss: 1.0030 - val_gender_output_acc: 0.6657 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3953 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6076 - val_pose_output_acc: 0.6463 - val_emotion_output_acc: 0.7068\n",
            "Epoch 76/80\n",
            "Epoch 76/80\n",
            "360/360 [==============================] - 79s 219ms/step - loss: 8.6214 - gender_output_loss: 0.7180 - image_quality_output_loss: 1.1413 - age_output_loss: 1.7309 - weight_output_loss: 1.0769 - bag_output_loss: 1.0394 - footwear_output_loss: 1.0717 - pose_output_loss: 0.8673 - emotion_output_loss: 0.9759 - gender_output_acc: 0.6930 - image_quality_output_acc: 0.5536 - age_output_acc: 0.4139 - weight_output_acc: 0.6384 - bag_output_acc: 0.6037 - footwear_output_acc: 0.6186 - pose_output_acc: 0.6957 - emotion_output_acc: 0.7134 - val_loss: 8.4959 - val_gender_output_loss: 0.6636 - val_image_quality_output_loss: 1.0735 - val_age_output_loss: 1.6481 - val_weight_output_loss: 1.1077 - val_bag_output_loss: 1.0985 - val_footwear_output_loss: 0.9942 - val_pose_output_loss: 0.9123 - val_emotion_output_loss: 0.9979 - val_gender_output_acc: 0.6657 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.3934 - val_weight_output_acc: 0.6384 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.6096 - val_pose_output_acc: 0.6468 - val_emotion_output_acc: 0.7063\n",
            "360/360 [==============================] - 79s 219ms/step - loss: 8.6214 - gender_output_loss: 0.7180 - image_quality_output_loss: 1.1413 - age_output_loss: 1.7309 - weight_output_loss: 1.0769 - bag_output_loss: 1.0394 - footwear_output_loss: 1.0717 - pose_output_loss: 0.8673 - emotion_output_loss: 0.9759 - gender_output_acc: 0.6930 - image_quality_output_acc: 0.5536 - age_output_acc: 0.4139 - weight_output_acc: 0.6384 - bag_output_acc: 0.6037 - footwear_output_acc: 0.6186 - pose_output_acc: 0.6957 - emotion_output_acc: 0.7134 - val_loss: 8.4959 - val_gender_output_loss: 0.6636 - val_image_quality_output_loss: 1.0735 - val_age_output_loss: 1.6481 - val_weight_output_loss: 1.1077 - val_bag_output_loss: 1.0985 - val_footwear_output_loss: 0.9942 - val_pose_output_loss: 0.9123 - val_emotion_output_loss: 0.9979 - val_gender_output_acc: 0.6657 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.3934 - val_weight_output_acc: 0.6384 - val_bag_output_acc: 0.5615 - val_footwear_output_acc: 0.6096 - val_pose_output_acc: 0.6468 - val_emotion_output_acc: 0.7063\n",
            "Epoch 77/80\n",
            "Epoch 77/80\n",
            "360/360 [==============================] - 79s 219ms/step - loss: 8.6615 - gender_output_loss: 0.7106 - image_quality_output_loss: 1.1594 - age_output_loss: 1.7363 - weight_output_loss: 1.0944 - bag_output_loss: 1.0421 - footwear_output_loss: 1.0638 - pose_output_loss: 0.8667 - emotion_output_loss: 0.9882 - gender_output_acc: 0.6933 - image_quality_output_acc: 0.5543 - age_output_acc: 0.4151 - weight_output_acc: 0.6397 - bag_output_acc: 0.6024 - footwear_output_acc: 0.6188 - pose_output_acc: 0.6975 - emotion_output_acc: 0.7134 - val_loss: 8.6764 - val_gender_output_loss: 0.6779 - val_image_quality_output_loss: 1.0846 - val_age_output_loss: 1.6975 - val_weight_output_loss: 1.1150 - val_bag_output_loss: 1.1390 - val_footwear_output_loss: 1.0197 - val_pose_output_loss: 0.9329 - val_emotion_output_loss: 1.0098 - val_gender_output_acc: 0.6622 - val_image_quality_output_acc: 0.5744 - val_age_output_acc: 0.3904 - val_weight_output_acc: 0.6354 - val_bag_output_acc: 0.5610 - val_footwear_output_acc: 0.6032 - val_pose_output_acc: 0.6443 - val_emotion_output_acc: 0.7063\n",
            "360/360 [==============================] - 79s 219ms/step - loss: 8.6615 - gender_output_loss: 0.7106 - image_quality_output_loss: 1.1594 - age_output_loss: 1.7363 - weight_output_loss: 1.0944 - bag_output_loss: 1.0421 - footwear_output_loss: 1.0638 - pose_output_loss: 0.8667 - emotion_output_loss: 0.9882 - gender_output_acc: 0.6933 - image_quality_output_acc: 0.5543 - age_output_acc: 0.4151 - weight_output_acc: 0.6397 - bag_output_acc: 0.6024 - footwear_output_acc: 0.6188 - pose_output_acc: 0.6975 - emotion_output_acc: 0.7134 - val_loss: 8.6764 - val_gender_output_loss: 0.6779 - val_image_quality_output_loss: 1.0846 - val_age_output_loss: 1.6975 - val_weight_output_loss: 1.1150 - val_bag_output_loss: 1.1390 - val_footwear_output_loss: 1.0197 - val_pose_output_loss: 0.9329 - val_emotion_output_loss: 1.0098 - val_gender_output_acc: 0.6622 - val_image_quality_output_acc: 0.5744 - val_age_output_acc: 0.3904 - val_weight_output_acc: 0.6354 - val_bag_output_acc: 0.5610 - val_footwear_output_acc: 0.6032 - val_pose_output_acc: 0.6443 - val_emotion_output_acc: 0.7063\n",
            "Epoch 78/80\n",
            "Epoch 78/80\n",
            "360/360 [==============================] - 79s 219ms/step - loss: 8.6127 - gender_output_loss: 0.7129 - image_quality_output_loss: 1.1321 - age_output_loss: 1.7305 - weight_output_loss: 1.0823 - bag_output_loss: 1.0414 - footwear_output_loss: 1.0680 - pose_output_loss: 0.8699 - emotion_output_loss: 0.9756 - gender_output_acc: 0.6953 - image_quality_output_acc: 0.5560 - age_output_acc: 0.4124 - weight_output_acc: 0.6392 - bag_output_acc: 0.6068 - footwear_output_acc: 0.6213 - pose_output_acc: 0.6954 - emotion_output_acc: 0.7124 - val_loss: 8.6150 - val_gender_output_loss: 0.6708 - val_image_quality_output_loss: 1.0805 - val_age_output_loss: 1.6768 - val_weight_output_loss: 1.1123 - val_bag_output_loss: 1.1353 - val_footwear_output_loss: 1.0089 - val_pose_output_loss: 0.9259 - val_emotion_output_loss: 1.0044 - val_gender_output_acc: 0.6632 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3934 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6463 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 79s 219ms/step - loss: 8.6127 - gender_output_loss: 0.7129 - image_quality_output_loss: 1.1321 - age_output_loss: 1.7305 - weight_output_loss: 1.0823 - bag_output_loss: 1.0414 - footwear_output_loss: 1.0680 - pose_output_loss: 0.8699 - emotion_output_loss: 0.9756 - gender_output_acc: 0.6953 - image_quality_output_acc: 0.5560 - age_output_acc: 0.4124 - weight_output_acc: 0.6392 - bag_output_acc: 0.6068 - footwear_output_acc: 0.6213 - pose_output_acc: 0.6954 - emotion_output_acc: 0.7124 - val_loss: 8.6150 - val_gender_output_loss: 0.6708 - val_image_quality_output_loss: 1.0805 - val_age_output_loss: 1.6768 - val_weight_output_loss: 1.1123 - val_bag_output_loss: 1.1353 - val_footwear_output_loss: 1.0089 - val_pose_output_loss: 0.9259 - val_emotion_output_loss: 1.0044 - val_gender_output_acc: 0.6632 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3934 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6463 - val_emotion_output_acc: 0.7068\n",
            "Epoch 79/80\n",
            "Epoch 79/80\n",
            "360/360 [==============================] - 78s 218ms/step - loss: 8.6430 - gender_output_loss: 0.7231 - image_quality_output_loss: 1.1495 - age_output_loss: 1.7272 - weight_output_loss: 1.0837 - bag_output_loss: 1.0381 - footwear_output_loss: 1.0731 - pose_output_loss: 0.8665 - emotion_output_loss: 0.9817 - gender_output_acc: 0.6936 - image_quality_output_acc: 0.5549 - age_output_acc: 0.4110 - weight_output_acc: 0.6386 - bag_output_acc: 0.6061 - footwear_output_acc: 0.6173 - pose_output_acc: 0.6987 - emotion_output_acc: 0.7126 - val_loss: 8.6195 - val_gender_output_loss: 0.6705 - val_image_quality_output_loss: 1.0824 - val_age_output_loss: 1.6769 - val_weight_output_loss: 1.1117 - val_bag_output_loss: 1.1356 - val_footwear_output_loss: 1.0091 - val_pose_output_loss: 0.9279 - val_emotion_output_loss: 1.0055 - val_gender_output_acc: 0.6617 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.3909 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6483 - val_emotion_output_acc: 0.7063\n",
            "360/360 [==============================] - 78s 218ms/step - loss: 8.6430 - gender_output_loss: 0.7231 - image_quality_output_loss: 1.1495 - age_output_loss: 1.7272 - weight_output_loss: 1.0837 - bag_output_loss: 1.0381 - footwear_output_loss: 1.0731 - pose_output_loss: 0.8665 - emotion_output_loss: 0.9817 - gender_output_acc: 0.6936 - image_quality_output_acc: 0.5549 - age_output_acc: 0.4110 - weight_output_acc: 0.6386 - bag_output_acc: 0.6061 - footwear_output_acc: 0.6173 - pose_output_acc: 0.6987 - emotion_output_acc: 0.7126 - val_loss: 8.6195 - val_gender_output_loss: 0.6705 - val_image_quality_output_loss: 1.0824 - val_age_output_loss: 1.6769 - val_weight_output_loss: 1.1117 - val_bag_output_loss: 1.1356 - val_footwear_output_loss: 1.0091 - val_pose_output_loss: 0.9279 - val_emotion_output_loss: 1.0055 - val_gender_output_acc: 0.6617 - val_image_quality_output_acc: 0.5754 - val_age_output_acc: 0.3909 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5590 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6483 - val_emotion_output_acc: 0.7063\n",
            "Epoch 80/80\n",
            "Epoch 80/80\n",
            "360/360 [==============================] - 79s 218ms/step - loss: 8.6859 - gender_output_loss: 0.7219 - image_quality_output_loss: 1.1591 - age_output_loss: 1.7281 - weight_output_loss: 1.1003 - bag_output_loss: 1.0504 - footwear_output_loss: 1.1022 - pose_output_loss: 0.8464 - emotion_output_loss: 0.9775 - gender_output_acc: 0.6910 - image_quality_output_acc: 0.5556 - age_output_acc: 0.4102 - weight_output_acc: 0.6391 - bag_output_acc: 0.6069 - footwear_output_acc: 0.6128 - pose_output_acc: 0.6974 - emotion_output_acc: 0.7133 - val_loss: 8.6150 - val_gender_output_loss: 0.6709 - val_image_quality_output_loss: 1.0827 - val_age_output_loss: 1.6772 - val_weight_output_loss: 1.1122 - val_bag_output_loss: 1.1310 - val_footwear_output_loss: 1.0098 - val_pose_output_loss: 0.9267 - val_emotion_output_loss: 1.0046 - val_gender_output_acc: 0.6617 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.3904 - val_weight_output_acc: 0.6384 - val_bag_output_acc: 0.5600 - val_footwear_output_acc: 0.6057 - val_pose_output_acc: 0.6448 - val_emotion_output_acc: 0.7068\n",
            "360/360 [==============================] - 79s 218ms/step - loss: 8.6859 - gender_output_loss: 0.7219 - image_quality_output_loss: 1.1591 - age_output_loss: 1.7281 - weight_output_loss: 1.1003 - bag_output_loss: 1.0504 - footwear_output_loss: 1.1022 - pose_output_loss: 0.8464 - emotion_output_loss: 0.9775 - gender_output_acc: 0.6910 - image_quality_output_acc: 0.5556 - age_output_acc: 0.4102 - weight_output_acc: 0.6391 - bag_output_acc: 0.6069 - footwear_output_acc: 0.6128 - pose_output_acc: 0.6974 - emotion_output_acc: 0.7133 - val_loss: 8.6150 - val_gender_output_loss: 0.6709 - val_image_quality_output_loss: 1.0827 - val_age_output_loss: 1.6772 - val_weight_output_loss: 1.1122 - val_bag_output_loss: 1.1310 - val_footwear_output_loss: 1.0098 - val_pose_output_loss: 0.9267 - val_emotion_output_loss: 1.0046 - val_gender_output_acc: 0.6617 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.3904 - val_weight_output_acc: 0.6384 - val_bag_output_acc: 0.5600 - val_footwear_output_acc: 0.6057 - val_pose_output_acc: 0.6448 - val_emotion_output_acc: 0.7068\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f0feb75a0f0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 121
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f0feb75a0f0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 121
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rQ3678gy1NMn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# train_gen = PersonDataGenerator(train_df, batch_size=32)\n",
        "train_gen = PersonDataGenerator(\n",
        "    train_df, \n",
        "    batch_size=32\n",
        "    # augmentation=ImageDataGenerator(\n",
        "    #     horizontal_flip=True,\n",
        "    #     vertical_flip=True,\n",
        "    #     rotation_range=1,\n",
        "    #     featurewise_std_normalization = True,\n",
        "    #     featurewise_center = True\n",
        "    #)\n",
        ")\n",
        "\n",
        "# train_gen = ValPersonDataGenerator(\n",
        "#     train_df, \n",
        "#     batch_size=32, \n",
        "#     augmentation=ImageDataGenerator(\n",
        "#         # horizontal_flip=True,\n",
        "#         # vertical_flip=True,\n",
        "#         # rotation_range=1,\n",
        "#         featurewise_std_normalization = True,\n",
        "#         featurewise_center = True\n",
        "#     )\n",
        "# )\n",
        "\n",
        "valid_gen = PersonDataGenerator(val_df, batch_size=32, shuffle=False)\n",
        "                                \n",
        "# valid_gen = PersonDataGenerator(val_df, batch_size=64, shuffle=False,\n",
        "#                                 featurewise_std_normalization = True,\n",
        "#                                 featurewise_center = True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DWyv-cN6CzNl",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model.load_weights('epoch_80.hdf5')\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ejTuRQH81yOO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "callbacks=[epochCheckpoint]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7xb_mdyZnZ8C",
        "colab_type": "code",
        "outputId": "bd5180a8-4568-4999-ee58-52f1cef9309b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 844
        }
      },
      "source": [
        "model.fit_generator(\n",
        "    generator=train_gen,\n",
        "    validation_data=valid_gen,\n",
        "    # use_multiprocessing=True,\n",
        "    workers=6, \n",
        "    callbacks=callbacks,\n",
        "    epochs=120,\n",
        "    initial_epoch=80,\n",
        "    verbose=1\n",
        ")"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 81/120\n",
            "360/360 [==============================] - 102s 284ms/step - loss: 8.6184 - gender_output_loss: 0.7079 - image_quality_output_loss: 1.1393 - age_output_loss: 1.7364 - weight_output_loss: 1.0814 - bag_output_loss: 1.0333 - footwear_output_loss: 1.0762 - pose_output_loss: 0.8541 - emotion_output_loss: 0.9898 - gender_output_acc: 0.6964 - image_quality_output_acc: 0.5551 - age_output_acc: 0.4150 - weight_output_acc: 0.6394 - bag_output_acc: 0.6044 - footwear_output_acc: 0.6166 - pose_output_acc: 0.6971 - emotion_output_acc: 0.7129 - val_loss: 7.9532 - val_gender_output_loss: 0.6935 - val_image_quality_output_loss: 0.9745 - val_age_output_loss: 1.4229 - val_weight_output_loss: 1.0127 - val_bag_output_loss: 0.9276 - val_footwear_output_loss: 1.0452 - val_pose_output_loss: 0.9431 - val_emotion_output_loss: 0.9337 - val_gender_output_acc: 0.4375 - val_image_quality_output_acc: 0.5789 - val_age_output_acc: 0.4062 - val_weight_output_acc: 0.6379 - val_bag_output_acc: 0.5660 - val_footwear_output_acc: 0.4301 - val_pose_output_acc: 0.6096 - val_emotion_output_acc: 0.7068\n",
            "Epoch 82/120\n",
            "360/360 [==============================] - 78s 218ms/step - loss: 8.6402 - gender_output_loss: 0.7340 - image_quality_output_loss: 1.1427 - age_output_loss: 1.7351 - weight_output_loss: 1.0897 - bag_output_loss: 1.0377 - footwear_output_loss: 1.0531 - pose_output_loss: 0.8771 - emotion_output_loss: 0.9708 - gender_output_acc: 0.6931 - image_quality_output_acc: 0.5543 - age_output_acc: 0.4102 - weight_output_acc: 0.6384 - bag_output_acc: 0.6039 - footwear_output_acc: 0.6181 - pose_output_acc: 0.6972 - emotion_output_acc: 0.7134 - val_loss: 7.7252 - val_gender_output_loss: 0.6652 - val_image_quality_output_loss: 0.9610 - val_age_output_loss: 1.4009 - val_weight_output_loss: 1.0057 - val_bag_output_loss: 0.9273 - val_footwear_output_loss: 0.9021 - val_pose_output_loss: 0.9327 - val_emotion_output_loss: 0.9304 - val_gender_output_acc: 0.5858 - val_image_quality_output_acc: 0.5784 - val_age_output_acc: 0.3705 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5704 - val_footwear_output_acc: 0.5893 - val_pose_output_acc: 0.6116 - val_emotion_output_acc: 0.7068\n",
            "Epoch 83/120\n",
            "360/360 [==============================] - 79s 220ms/step - loss: 8.6438 - gender_output_loss: 0.7267 - image_quality_output_loss: 1.1398 - age_output_loss: 1.7266 - weight_output_loss: 1.0953 - bag_output_loss: 1.0398 - footwear_output_loss: 1.0653 - pose_output_loss: 0.8712 - emotion_output_loss: 0.9791 - gender_output_acc: 0.6915 - image_quality_output_acc: 0.5548 - age_output_acc: 0.4085 - weight_output_acc: 0.6391 - bag_output_acc: 0.6046 - footwear_output_acc: 0.6188 - pose_output_acc: 0.6959 - emotion_output_acc: 0.7127 - val_loss: 8.4818 - val_gender_output_loss: 0.6652 - val_image_quality_output_loss: 1.0719 - val_age_output_loss: 1.6469 - val_weight_output_loss: 1.1073 - val_bag_output_loss: 1.0857 - val_footwear_output_loss: 0.9958 - val_pose_output_loss: 0.9105 - val_emotion_output_loss: 0.9984 - val_gender_output_acc: 0.6667 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3963 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5600 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6513 - val_emotion_output_acc: 0.7068\n",
            "Epoch 84/120\n",
            "360/360 [==============================] - 79s 219ms/step - loss: 8.6196 - gender_output_loss: 0.7196 - image_quality_output_loss: 1.1496 - age_output_loss: 1.7349 - weight_output_loss: 1.0779 - bag_output_loss: 1.0362 - footwear_output_loss: 1.0702 - pose_output_loss: 0.8563 - emotion_output_loss: 0.9750 - gender_output_acc: 0.7010 - image_quality_output_acc: 0.5554 - age_output_acc: 0.4089 - weight_output_acc: 0.6387 - bag_output_acc: 0.6061 - footwear_output_acc: 0.6204 - pose_output_acc: 0.7017 - emotion_output_acc: 0.7128 - val_loss: 8.5956 - val_gender_output_loss: 0.6703 - val_image_quality_output_loss: 1.0809 - val_age_output_loss: 1.6762 - val_weight_output_loss: 1.1127 - val_bag_output_loss: 1.1148 - val_footwear_output_loss: 1.0092 - val_pose_output_loss: 0.9264 - val_emotion_output_loss: 1.0050 - val_gender_output_acc: 0.6662 - val_image_quality_output_acc: 0.5774 - val_age_output_acc: 0.3919 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6047 - val_pose_output_acc: 0.6453 - val_emotion_output_acc: 0.7073\n",
            "Epoch 85/120\n",
            "360/360 [==============================] - 78s 218ms/step - loss: 8.6419 - gender_output_loss: 0.7242 - image_quality_output_loss: 1.1431 - age_output_loss: 1.7377 - weight_output_loss: 1.0865 - bag_output_loss: 1.0379 - footwear_output_loss: 1.0638 - pose_output_loss: 0.8604 - emotion_output_loss: 0.9884 - gender_output_acc: 0.6954 - image_quality_output_acc: 0.5542 - age_output_acc: 0.4148 - weight_output_acc: 0.6392 - bag_output_acc: 0.6062 - footwear_output_acc: 0.6222 - pose_output_acc: 0.7003 - emotion_output_acc: 0.7128 - val_loss: 8.5249 - val_gender_output_loss: 0.6627 - val_image_quality_output_loss: 1.0735 - val_age_output_loss: 1.6560 - val_weight_output_loss: 1.1140 - val_bag_output_loss: 1.1050 - val_footwear_output_loss: 1.0030 - val_pose_output_loss: 0.9121 - val_emotion_output_loss: 0.9986 - val_gender_output_acc: 0.6657 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3924 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5625 - val_footwear_output_acc: 0.6062 - val_pose_output_acc: 0.6468 - val_emotion_output_acc: 0.7068\n",
            "Epoch 86/120\n",
            "360/360 [==============================] - 79s 218ms/step - loss: 8.6059 - gender_output_loss: 0.7099 - image_quality_output_loss: 1.1353 - age_output_loss: 1.7481 - weight_output_loss: 1.0876 - bag_output_loss: 1.0246 - footwear_output_loss: 1.0646 - pose_output_loss: 0.8633 - emotion_output_loss: 0.9725 - gender_output_acc: 0.6984 - image_quality_output_acc: 0.5555 - age_output_acc: 0.4109 - weight_output_acc: 0.6381 - bag_output_acc: 0.6094 - footwear_output_acc: 0.6206 - pose_output_acc: 0.7009 - emotion_output_acc: 0.7133 - val_loss: 8.5330 - val_gender_output_loss: 0.6626 - val_image_quality_output_loss: 1.0743 - val_age_output_loss: 1.6653 - val_weight_output_loss: 1.1141 - val_bag_output_loss: 1.0928 - val_footwear_output_loss: 1.0025 - val_pose_output_loss: 0.9205 - val_emotion_output_loss: 1.0008 - val_gender_output_acc: 0.6647 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.3924 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5650 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6458 - val_emotion_output_acc: 0.7068\n",
            "Epoch 87/120\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.6126 - gender_output_loss: 0.7109 - image_quality_output_loss: 1.1434 - age_output_loss: 1.7281 - weight_output_loss: 1.0952 - bag_output_loss: 1.0158 - footwear_output_loss: 1.0710 - pose_output_loss: 0.8675 - emotion_output_loss: 0.9807 - gender_output_acc: 0.6945 - image_quality_output_acc: 0.5548 - age_output_acc: 0.4115 - weight_output_acc: 0.6392 - bag_output_acc: 0.6090 - footwear_output_acc: 0.6192 - pose_output_acc: 0.7035 - emotion_output_acc: 0.7130 - val_loss: 8.6529 - val_gender_output_loss: 0.6728 - val_image_quality_output_loss: 1.0899 - val_age_output_loss: 1.6969 - val_weight_output_loss: 1.1143 - val_bag_output_loss: 1.1258 - val_footwear_output_loss: 1.0111 - val_pose_output_loss: 0.9314 - val_emotion_output_loss: 1.0109 - val_gender_output_acc: 0.6617 - val_image_quality_output_acc: 0.5764 - val_age_output_acc: 0.3904 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5630 - val_footwear_output_acc: 0.6057 - val_pose_output_acc: 0.6438 - val_emotion_output_acc: 0.7063\n",
            "Epoch 88/120\n",
            "360/360 [==============================] - 78s 217ms/step - loss: 8.5888 - gender_output_loss: 0.7260 - image_quality_output_loss: 1.1459 - age_output_loss: 1.7187 - weight_output_loss: 1.0756 - bag_output_loss: 1.0231 - footwear_output_loss: 1.0600 - pose_output_loss: 0.8610 - emotion_output_loss: 0.9784 - gender_output_acc: 0.6989 - image_quality_output_acc: 0.5560 - age_output_acc: 0.4154 - weight_output_acc: 0.6398 - bag_output_acc: 0.6051 - footwear_output_acc: 0.6219 - pose_output_acc: 0.7026 - emotion_output_acc: 0.7130 - val_loss: 8.6265 - val_gender_output_loss: 0.6700 - val_image_quality_output_loss: 1.0821 - val_age_output_loss: 1.6771 - val_weight_output_loss: 1.1137 - val_bag_output_loss: 1.1400 - val_footwear_output_loss: 1.0101 - val_pose_output_loss: 0.9282 - val_emotion_output_loss: 1.0054 - val_gender_output_acc: 0.6642 - val_image_quality_output_acc: 0.5769 - val_age_output_acc: 0.3924 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5625 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6434 - val_emotion_output_acc: 0.7063\n",
            "Epoch 89/120\n",
            "360/360 [==============================] - 78s 218ms/step - loss: 8.6231 - gender_output_loss: 0.7303 - image_quality_output_loss: 1.1308 - age_output_loss: 1.7311 - weight_output_loss: 1.0928 - bag_output_loss: 1.0331 - footwear_output_loss: 1.0669 - pose_output_loss: 0.8608 - emotion_output_loss: 0.9774 - gender_output_acc: 0.6984 - image_quality_output_acc: 0.5556 - age_output_acc: 0.4120 - weight_output_acc: 0.6402 - bag_output_acc: 0.6049 - footwear_output_acc: 0.6187 - pose_output_acc: 0.6983 - emotion_output_acc: 0.7135 - val_loss: 8.5473 - val_gender_output_loss: 0.6621 - val_image_quality_output_loss: 1.0741 - val_age_output_loss: 1.6632 - val_weight_output_loss: 1.1142 - val_bag_output_loss: 1.1097 - val_footwear_output_loss: 1.0035 - val_pose_output_loss: 0.9200 - val_emotion_output_loss: 1.0004 - val_gender_output_acc: 0.6627 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3914 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5625 - val_footwear_output_acc: 0.6071 - val_pose_output_acc: 0.6483 - val_emotion_output_acc: 0.7068\n",
            "Epoch 90/120\n",
            "360/360 [==============================] - 79s 218ms/step - loss: 8.5984 - gender_output_loss: 0.7345 - image_quality_output_loss: 1.1236 - age_output_loss: 1.7326 - weight_output_loss: 1.0948 - bag_output_loss: 1.0330 - footwear_output_loss: 1.0713 - pose_output_loss: 0.8390 - emotion_output_loss: 0.9695 - gender_output_acc: 0.7013 - image_quality_output_acc: 0.5537 - age_output_acc: 0.4119 - weight_output_acc: 0.6386 - bag_output_acc: 0.6082 - footwear_output_acc: 0.6201 - pose_output_acc: 0.7016 - emotion_output_acc: 0.7132 - val_loss: 8.6211 - val_gender_output_loss: 0.6689 - val_image_quality_output_loss: 1.0773 - val_age_output_loss: 1.6771 - val_weight_output_loss: 1.1153 - val_bag_output_loss: 1.1393 - val_footwear_output_loss: 1.0097 - val_pose_output_loss: 0.9280 - val_emotion_output_loss: 1.0054 - val_gender_output_acc: 0.6612 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3914 - val_weight_output_acc: 0.6364 - val_bag_output_acc: 0.5605 - val_footwear_output_acc: 0.6066 - val_pose_output_acc: 0.6458 - val_emotion_output_acc: 0.7063\n",
            "Epoch 91/120\n",
            "360/360 [==============================] - 78s 218ms/step - loss: 8.6367 - gender_output_loss: 0.7241 - image_quality_output_loss: 1.1352 - age_output_loss: 1.7342 - weight_output_loss: 1.1113 - bag_output_loss: 1.0331 - footwear_output_loss: 1.0680 - pose_output_loss: 0.8664 - emotion_output_loss: 0.9644 - gender_output_acc: 0.6951 - image_quality_output_acc: 0.5565 - age_output_acc: 0.4169 - weight_output_acc: 0.6391 - bag_output_acc: 0.6068 - footwear_output_acc: 0.6196 - pose_output_acc: 0.7054 - emotion_output_acc: 0.7129 - val_loss: 8.5009 - val_gender_output_loss: 0.6622 - val_image_quality_output_loss: 1.0740 - val_age_output_loss: 1.6561 - val_weight_output_loss: 1.1092 - val_bag_output_loss: 1.0924 - val_footwear_output_loss: 0.9950 - val_pose_output_loss: 0.9125 - val_emotion_output_loss: 0.9994 - val_gender_output_acc: 0.6672 - val_image_quality_output_acc: 0.5759 - val_age_output_acc: 0.3929 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5620 - val_footwear_output_acc: 0.6052 - val_pose_output_acc: 0.6478 - val_emotion_output_acc: 0.7068\n",
            "Epoch 92/120\n",
            "360/360 [==============================] - 78s 218ms/step - loss: 8.5870 - gender_output_loss: 0.7185 - image_quality_output_loss: 1.1490 - age_output_loss: 1.7225 - weight_output_loss: 1.0717 - bag_output_loss: 1.0333 - footwear_output_loss: 1.0694 - pose_output_loss: 0.8560 - emotion_output_loss: 0.9666 - gender_output_acc: 0.6972 - image_quality_output_acc: 0.5553 - age_output_acc: 0.4122 - weight_output_acc: 0.6390 - bag_output_acc: 0.6089 - footwear_output_acc: 0.6220 - pose_output_acc: 0.6997 - emotion_output_acc: 0.7128 - val_loss: 8.5879 - val_gender_output_loss: 0.6691 - val_image_quality_output_loss: 1.0893 - val_age_output_loss: 1.6855 - val_weight_output_loss: 1.1132 - val_bag_output_loss: 1.0856 - val_footwear_output_loss: 1.0098 - val_pose_output_loss: 0.9287 - val_emotion_output_loss: 1.0068 - val_gender_output_acc: 0.6677 - val_image_quality_output_acc: 0.5749 - val_age_output_acc: 0.3909 - val_weight_output_acc: 0.6369 - val_bag_output_acc: 0.5635 - val_footwear_output_acc: 0.6066 - val_pose_output_acc: 0.6458 - val_emotion_output_acc: 0.7063\n",
            "Epoch 93/120\n",
            "360/360 [==============================] - 79s 218ms/step - loss: 8.5654 - gender_output_loss: 0.7186 - image_quality_output_loss: 1.1317 - age_output_loss: 1.7299 - weight_output_loss: 1.0775 - bag_output_loss: 1.0261 - footwear_output_loss: 1.0545 - pose_output_loss: 0.8501 - emotion_output_loss: 0.9770 - gender_output_acc: 0.6967 - image_quality_output_acc: 0.5552 - age_output_acc: 0.4119 - weight_output_acc: 0.6406 - bag_output_acc: 0.6056 - footwear_output_acc: 0.6214 - pose_output_acc: 0.7055 - emotion_output_acc: 0.7136 - val_loss: 8.8211 - val_gender_output_loss: 0.6922 - val_image_quality_output_loss: 1.0986 - val_age_output_loss: 1.7459 - val_weight_output_loss: 1.1407 - val_bag_output_loss: 1.1199 - val_footwear_output_loss: 1.0400 - val_pose_output_loss: 0.9577 - val_emotion_output_loss: 1.0261 - val_gender_output_acc: 0.6627 - val_image_quality_output_acc: 0.5744 - val_age_output_acc: 0.3914 - val_weight_output_acc: 0.6374 - val_bag_output_acc: 0.5640 - val_footwear_output_acc: 0.6032 - val_pose_output_acc: 0.6458 - val_emotion_output_acc: 0.7063\n",
            "Epoch 94/120\n",
            "304/360 [========================>.....] - ETA: 11s - loss: 8.6005 - gender_output_loss: 0.7197 - image_quality_output_loss: 1.1530 - age_output_loss: 1.7405 - weight_output_loss: 1.0889 - bag_output_loss: 1.0262 - footwear_output_loss: 1.0556 - pose_output_loss: 0.8431 - emotion_output_loss: 0.9734 - gender_output_acc: 0.6984 - image_quality_output_acc: 0.5538 - age_output_acc: 0.4129 - weight_output_acc: 0.6362 - bag_output_acc: 0.6057 - footwear_output_acc: 0.6217 - pose_output_acc: 0.7026 - emotion_output_acc: 0.7121"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-135-96ce83748f40>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m120\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0minitial_epoch\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m80\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m     \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m )\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/legacy/interfaces.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     89\u001b[0m                 warnings.warn('Update your `' + object_name + '` call to the ' +\n\u001b[1;32m     90\u001b[0m                               'Keras 2 API: ' + signature, stacklevel=2)\n\u001b[0;32m---> 91\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     92\u001b[0m         \u001b[0mwrapper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_original_function\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit_generator\u001b[0;34m(self, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch)\u001b[0m\n\u001b[1;32m   1656\u001b[0m             \u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1657\u001b[0m             \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mshuffle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1658\u001b[0;31m             initial_epoch=initial_epoch)\n\u001b[0m\u001b[1;32m   1659\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1660\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0minterfaces\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlegacy_generator_methods_support\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/engine/training_generator.py\u001b[0m in \u001b[0;36mfit_generator\u001b[0;34m(model, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch)\u001b[0m\n\u001b[1;32m    213\u001b[0m                 outs = model.train_on_batch(x, y,\n\u001b[1;32m    214\u001b[0m                                             \u001b[0msample_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msample_weight\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 215\u001b[0;31m                                             class_weight=class_weight)\n\u001b[0m\u001b[1;32m    216\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    217\u001b[0m                 \u001b[0mouts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mto_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mouts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mtrain_on_batch\u001b[0;34m(self, x, y, sample_weight, class_weight)\u001b[0m\n\u001b[1;32m   1447\u001b[0m             \u001b[0mins\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0msample_weights\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1448\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_train_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1449\u001b[0;31m         \u001b[0moutputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mins\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1450\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0munpack_singleton\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1451\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m   2977\u001b[0m                     \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_legacy_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2978\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2979\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2980\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2981\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mpy_any\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mis_tensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m   2896\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'`inputs` should be a list or tuple.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2897\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2898\u001b[0;31m         \u001b[0msession\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_session\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2899\u001b[0m         \u001b[0mfeed_arrays\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2900\u001b[0m         \u001b[0marray_vals\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py\u001b[0m in \u001b[0;36mget_session\u001b[0;34m()\u001b[0m\n\u001b[1;32m    207\u001b[0m             \u001b[0mvariables\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mglobal_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    208\u001b[0m             \u001b[0mcandidate_vars\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 209\u001b[0;31m             \u001b[0;32mfor\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    210\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'_keras_initialized'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    211\u001b[0m                     \u001b[0mcandidate_vars\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IgAFubppIym0",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "chC968FCFoVh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "loss_weights = {\"age_output\": 1.0,\"bag_output\": 1.0}"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yIXhp2UDIU3V",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# model.load_weights('person_attribute_model.h5')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d4L9mE4Y3UE8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# freeze backbone\n",
        "for layer in model.layers:\n",
        "\tlayer.trainable = False"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HkIGj6UhSfzy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Freeze the layers except the last 8 layers\n",
        "for layer in model.layers[:-8]:\n",
        "    layer.trainable = True"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IJK2NIx4S5q7",
        "colab_type": "code",
        "outputId": "b412d53c-919b-4e29-c87c-60c225393248",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "# Check the trainable status of the individual layers\n",
        "for layer in model.layers:\n",
        "    print(layer, layer.trainable)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<keras.engine.input_layer.InputLayer object at 0x7f0feeb2f7f0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0feeb2fe80> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0feeb2f9e8> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee2a3048> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee2a8e80> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee204f60> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee1a0470> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee1a7278> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee1130f0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee0bc898> True\n",
            "<keras.layers.pooling.MaxPooling2D object at 0x7f0fee0b65f8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedfef518> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedfcc2b0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedf60240> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedf657b8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe4586588> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe45aba20> True\n",
            "<keras.layers.pooling.MaxPooling2D object at 0x7f0fe45b2400> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe4281198> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe4231b00> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe423e7f0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe444f390> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe41c39b0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0feeb29ef0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe41702b0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe43b5128> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe4103978> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0fe404b320> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe44e40b8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe43493c8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe410f780> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe401aba8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe4444e80> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe42f0588> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe40b85f8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe3f83f98> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe444a2b0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe4288be0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe4050c88> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe3f8ae80> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fe3f96ba8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0feeb47940> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee9c2be0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee9c6d68> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe3edef28> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee9c6da0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe3e05eb8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee977278> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe3e1f1d0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee9777b8> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0fee935f98> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe3f57ba8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe3e199b0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee979be0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee94bf98> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe3ecb128> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe3d46160> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee92e908> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee8ebda0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe3ed2400> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe3d59240> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee92e898> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee8ebfd0> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fee8f2b70> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee81eef0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee84fe80> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee854da0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee8aae80> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee8544a8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee85f320> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee80d4e0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee85fe80> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee80da58> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0fee7c8e48> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee8fdfd0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee861b38> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee811e80> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee762ef0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee8a3898> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee894860> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee7c2b00> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee782240> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee8a3828> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee8947f0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee7c2f60> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee782b70> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fee784e10> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee73ff60> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee6f4550> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee6f4fd0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee6fdda0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee6aab00> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee6aaa90> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee793fd0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee6b4da0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee73f8d0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee668240> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee73fe48> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee668fd0> True\n",
            "<keras.layers.pooling.MaxPooling2D object at 0x7f0fee66cba8> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fee681b00> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee559208> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee58b7f0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee58bd30> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee595f98> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee54acc0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee553b38> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee626b70> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee553ef0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee5df4a8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee515470> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee5dff28> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee5159e8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee5e6cf8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee49de10> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee617a20> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee4d6b38> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee6179b0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee4d6ac8> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0fee427be0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee698fd0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee59cf28> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee45ddd8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee43bba8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee6261d0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee5c60b8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee420278> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee3dee48> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee626d68> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee5d3fd0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee4207b8> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee3e7d68> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fee3e7fd0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fe4455e80> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedeec470> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedeecef0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedef4cc0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedeaaa58> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedeaa9e8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee3b0eb8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedeb4f60> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee1ff9e8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fede72278> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee1c8550> True\n",
            "<keras.layers.core.Activation object at 0x7f0fede727b8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee1bd1d0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fede7bbe0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedfa7710> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fede359b0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedf787f0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fede35940> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0feddfdb00> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fee3f4be0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedf65fd0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fede3beb8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fede17fd0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fee3a77f0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fe4498e10> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0feddfb198> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0feddbde10> True\n",
            "<keras.layers.core.Activation object at 0x7f0fee3a7d68> True\n",
            "<keras.layers.core.Activation object at 0x7f0fe446f400> True\n",
            "<keras.layers.core.Activation object at 0x7f0feddfbf60> True\n",
            "<keras.layers.core.Activation object at 0x7f0feddc4d30> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0feddc4f98> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedcd3da0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedc942e8> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedc94e48> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedc1cb00> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedbd88d0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedbd8860> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedd88da0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedbdff60> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedd42c88> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedc14f60> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedd4be48> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedb9ef28> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedd4be80> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedba6a20> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedd0b3c8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedb5c7b8> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedd0b908> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedb5c748> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0fedb2e940> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedd60f60> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedd14d30> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedb66e48> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedb44f60> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedd847b8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedcccb00> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedb1deb8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedae6fd0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedd84e48> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedccca90> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedb25f28> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedae6d68> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fedaeff60> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0feda00fd0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed9c00f0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed9c0f28> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed9c8940> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed980710> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed9806a0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedab5da0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed987ef0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0feda6db70> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed940dd8> True\n",
            "<keras.layers.core.Activation object at 0x7f0feda6db00> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed946e48> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0feda74f28> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed946f60> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0feda36208> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed908630> True\n",
            "<keras.layers.core.Activation object at 0x7f0feda36fd0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed9d8ba8> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0fed8d0b70> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fedb0add8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0feda38b70> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed911f60> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed86dda0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fedaadda0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed9f6940> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed8c8cf8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed8904e0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fedaadc88> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed9f68d0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed8d0d68> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed890e10> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fed819ef0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed7a2e80> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed760128> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed760f60> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed76a978> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed723748> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed723cc0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed827fd0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed72cda0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed7d8438> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed6e2e10> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed7d8f98> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed6eae48> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed7e1ba8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed6eaf60> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed798978> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed6a9668> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed798908> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed6a9be0> True\n",
            "<keras.layers.pooling.MaxPooling2D object at 0x7f0fed6b1fd0> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fed65da20> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed5d1eb8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed70c8d0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed584f98> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed67bc88> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed58d0f0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed633a58> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed544780> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed6339e8> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed544710> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed63bf98> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed5fea58> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed54ef60> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed513940> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0fed462cf8> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed663e48> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed5f4eb8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed5bc828> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed507e48> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed4ce6a0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed48dba8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed673198> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed5f9f60> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed5bcd68> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed50dfd0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed4cec18> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed494cf8> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed673e10> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fed5c1eb8> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fed4d6d30> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed494f60> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fed41eb00> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed339fd0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed2e97f0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed2e9780> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed3e0ef0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed2f1e80> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed39f438> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed2b1198> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed39ff98> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed2b1f60> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed3a6c50> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed368f60> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed2b4b00> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed27df60> True\n",
            "<keras.layers.pooling.AveragePooling2D object at 0x7f0fed251fd0> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed43b6a0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed361a58> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed328240> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed2738d0> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed233f60> True\n",
            "<keras.layers.convolutional.Conv2D object at 0x7f0fed1fcba8> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed3d8eb8> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed3619e8> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed328f60> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed273860> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed23cf98> True\n",
            "<keras.layers.normalization.BatchNormalization object at 0x7f0fed1fcbe0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed3d8e10> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fed332a58> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fed23cfd0> True\n",
            "<keras.layers.core.Activation object at 0x7f0fed205da0> True\n",
            "<keras.layers.merge.Concatenate object at 0x7f0fed205dd8> True\n",
            "<keras.layers.core.Flatten object at 0x7f0fed19ff60> True\n",
            "<keras.layers.core.Dropout object at 0x7f0fed161f28> True\n",
            "<keras.layers.core.Dropout object at 0x7f0fed121ef0> True\n",
            "<keras.layers.core.Dropout object at 0x7f0fed0e3be0> True\n",
            "<keras.layers.core.Dropout object at 0x7f0fed09bf98> True\n",
            "<keras.layers.core.Dropout object at 0x7f0fed05cd68> True\n",
            "<keras.layers.core.Dropout object at 0x7f0fed01b6a0> True\n",
            "<keras.layers.core.Dropout object at 0x7f0fed015860> True\n",
            "<keras.layers.core.Dropout object at 0x7f0fed054a58> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed169550> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed121dd8> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed0e36d8> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed0a4588> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed05ce10> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed01b198> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed015358> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed054f60> True\n",
            "<keras.layers.core.Dense object at 0x7f0fed180668> False\n",
            "<keras.layers.core.Dense object at 0x7f0fed13abe0> False\n",
            "<keras.layers.core.Dense object at 0x7f0fed0f9ef0> False\n",
            "<keras.layers.core.Dense object at 0x7f0fed0bada0> False\n",
            "<keras.layers.core.Dense object at 0x7f0fed0786a0> False\n",
            "<keras.layers.core.Dense object at 0x7f0fed032f28> False\n",
            "<keras.layers.core.Dense object at 0x7f0fecfa8b70> False\n",
            "<keras.layers.core.Dense object at 0x7f0fecff0860> False\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-SF8RPwl7DWr",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4fnDtzIz5m3J",
        "colab_type": "text"
      },
      "source": [
        "## Model Evaluation Details"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mdHakZYz5p6h",
        "colab_type": "text"
      },
      "source": [
        "**Model Final ACcuracy Details**\n",
        "- val_loss: 8.8211 \n",
        "    - val_gender_output_loss: 0.6922 \n",
        "    - val_image_quality_output_loss: 1.0986 \n",
        "    - val_age_output_loss: 1.7459 \n",
        "    - val_weight_output_loss: 1.1407 \n",
        "    - val_bag_output_loss: 1.1199 \n",
        "    - val_footwear_output_loss: 1.0400 \n",
        "    - val_pose_output_loss: 0.9577 \n",
        "    - val_emotion_output_loss: 1.0261\n",
        "- Val Accuracy\n",
        "    - val_gender_output_acc: 0.6627\n",
        "    - val_image_quality_output_acc: 0.5744 \n",
        "    - val_age_output_acc: 0.3914 \n",
        "    - val_weight_output_acc: 0.6374 \n",
        "    - val_bag_output_acc: 0.5640 \n",
        "    - val_footwear_output_acc: 0.6032\n",
        "    - val_pose_output_acc: 0.6458 \n",
        "    - val_emotion_output_acc:0.7063\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mUohAuKxNHu5",
        "colab_type": "text"
      },
      "source": [
        "## New Model"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LQDc-N_mNK8N",
        "colab_type": "text"
      },
      "source": [
        "- inspiation taken from https://www.pyimagesearch.com/2018/06/04/keras-multiple-outputs-and-multiple-losses/"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "amExHMUfNQXD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# class PersonAttributes:\n",
        "\t\n",
        "# \tdef build_gender_branch(inputs, numCategories,\n",
        "# \t\tfinalAct=\"binary\", chanDim=-1):\n",
        "# \t\t# utilize a lambda layer to convert the 3 channel input to a\n",
        "# \t\t# grayscale representation\n",
        "# \t\tx = Lambda(lambda c: tf.image.rgb_to_grayscale(c))(inputs)\n",
        " \n",
        "# \t\t# CONV => RELU => POOL\n",
        "# \t\tx = Conv2D(32, (3, 3), padding=\"same\")(x)\n",
        "# \t\tx = Activation(\"relu\")(x)\n",
        "# \t\tx = BatchNormalization(axis=chanDim)(x)\n",
        "# \t\tx = MaxPooling2D(pool_size=(3, 3))(x)\n",
        "# \t\tx = Dropout(0.25)(x)"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}